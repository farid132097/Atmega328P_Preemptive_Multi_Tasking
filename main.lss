
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000100  00800100  00001172  00001206  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001172  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000019d  00800200  00800200  00001306  2**0
                  ALLOC
  3 .stab         00000d68  00000000  00000000  00001308  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000037  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  000020a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000006c  00000000  00000000  000020e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000008a5  00000000  00000000  00002153  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000026a  00000000  00000000  000029f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000035d  00000000  00000000  00002c62  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000040  00000000  00000000  00002fc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001a5  00000000  00000000  00003000  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000ab2  00000000  00000000  000031a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000018  00000000  00000000  00003c57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__ctors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__vector_16>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 00       	nop
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	00 00       	nop
      82:	00 00       	nop
      84:	00 00       	nop
      86:	00 00       	nop
      88:	49 c0       	rjmp	.+146    	; 0x11c <__vector_16>

0000008a <__ctors_end>:
      8a:	11 24       	eor	r1, r1
      8c:	1f be       	out	0x3f, r1	; 63
      8e:	cf ef       	ldi	r28, 0xFF	; 255
      90:	d8 e0       	ldi	r29, 0x08	; 8
      92:	de bf       	out	0x3e, r29	; 62
      94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_clear_bss>:
      96:	13 e0       	ldi	r17, 0x03	; 3
      98:	a0 e0       	ldi	r26, 0x00	; 0
      9a:	b2 e0       	ldi	r27, 0x02	; 2
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	ad 39       	cpi	r26, 0x9D	; 157
      a2:	b1 07       	cpc	r27, r17
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>

000000a6 <__do_copy_data>:
      a6:	12 e0       	ldi	r17, 0x02	; 2
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	e2 e7       	ldi	r30, 0x72	; 114
      ae:	f1 e1       	ldi	r31, 0x11	; 17
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <.do_copy_data_start>

000000b2 <.do_copy_data_loop>:
      b2:	05 90       	lpm	r0, Z+
      b4:	0d 92       	st	X+, r0

000000b6 <.do_copy_data_start>:
      b6:	a0 30       	cpi	r26, 0x00	; 0
      b8:	b1 07       	cpc	r27, r17
      ba:	d9 f7       	brne	.-10     	; 0xb2 <.do_copy_data_loop>
      bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
      c0:	0c 94 b7 08 	jmp	0x116e	; 0x116e <_exit>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
#include <avr/interrupt.h>
#include "kernel.h"

int64_t cur = 0, next = 0;

int main(void) {
      c8:	9f 92       	push	r9
      ca:	af 92       	push	r10
      cc:	bf 92       	push	r11
      ce:	cf 92       	push	r12
      d0:	df 92       	push	r13
      d2:	ef 92       	push	r14
      d4:	ff 92       	push	r15
      d6:	0f 93       	push	r16
      d8:	1f 93       	push	r17
    
	DDRD |= (1<<5);
      da:	55 9a       	sbi	0x0a, 5	; 10
    Kernel_SysTick_Reg_Init(1000);
      dc:	88 ee       	ldi	r24, 0xE8	; 232
      de:	93 e0       	ldi	r25, 0x03	; 3
      e0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Kernel_SysTick_Reg_Init>
		//next  = cur + 200;
		
		//while(next < Kernel_SysTick_Val_Get());
		
		if(Kernel_SysTick_Val_Get() % 1000 == 0){
		  PORTD ^= (1<<5);
      e4:	a0 e2       	ldi	r26, 0x20	; 32
      e6:	9a 2e       	mov	r9, r26
        //cur   = Kernel_SysTick_Val_Get();
		//next  = cur + 200;
		
		//while(next < Kernel_SysTick_Val_Get());
		
		if(Kernel_SysTick_Val_Get() % 1000 == 0){
      e8:	0e 94 22 01 	call	0x244	; 0x244 <Kernel_SysTick_Val_Get>
      ec:	f8 ee       	ldi	r31, 0xE8	; 232
      ee:	af 2e       	mov	r10, r31
      f0:	e3 e0       	ldi	r30, 0x03	; 3
      f2:	be 2e       	mov	r11, r30
      f4:	cc 24       	eor	r12, r12
      f6:	dd 24       	eor	r13, r13
      f8:	ee 24       	eor	r14, r14
      fa:	ff 24       	eor	r15, r15
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	10 e0       	ldi	r17, 0x00	; 0
     100:	0e 94 cf 01 	call	0x39e	; 0x39e <__umoddi3>
     104:	23 2b       	or	r18, r19
     106:	24 2b       	or	r18, r20
     108:	25 2b       	or	r18, r21
     10a:	26 2b       	or	r18, r22
     10c:	27 2b       	or	r18, r23
     10e:	28 2b       	or	r18, r24
     110:	29 2b       	or	r18, r25
     112:	51 f7       	brne	.-44     	; 0xe8 <main+0x20>
		  PORTD ^= (1<<5);
     114:	8b b1       	in	r24, 0x0b	; 11
     116:	89 25       	eor	r24, r9
     118:	8b b9       	out	0x0b, r24	; 11
     11a:	e6 cf       	rjmp	.-52     	; 0xe8 <main+0x20>

0000011c <__vector_16>:
.global  __vector_16
    __vector_16:
	    
		;;============================if kernel debug enabled===============================;;
	    #ifdef KER_DBG_ENABLE
        SBI   KER_DBG_PORT       , KER_DBG_PIN            ;set gpio,                (2 clocks)
     11c:	29 9a       	sbi	0x05, 1	; 5
		#endif
		
		
		;;==============================context save========================================;;
		;; total 68 clocks for context saving
        PUSH  R0                                          ;save R0,                 (2 clocks)
     11e:	0f 92       	push	r0
		IN    R0                 , IOSREG                 ;load SREG,               (1 clock )
     120:	0f b6       	in	r0, 0x3f	; 63
		PUSH  R0                                          ;save SREG,               (2 clocks)
     122:	0f 92       	push	r0
		PUSH  R1                                          ;save R1,                 (2 clocks)   
     124:	1f 92       	push	r1
		CLR   R1                                          ;clear R1,                (1 clock )
     126:	11 24       	eor	r1, r1
		PUSH  R2                                          ;save R2,                 (2 clocks)   
     128:	2f 92       	push	r2
		PUSH  R3                                          ;save R3,                 (2 clocks)   
     12a:	3f 92       	push	r3
		PUSH  R4                                          ;save R4,                 (2 clocks)   
     12c:	4f 92       	push	r4
		PUSH  R5                                          ;save R5,                 (2 clocks)   
     12e:	5f 92       	push	r5
		PUSH  R6                                          ;save R6,                 (2 clocks)   
     130:	6f 92       	push	r6
		PUSH  R7                                          ;save R7,                 (2 clocks)   
     132:	7f 92       	push	r7
		PUSH  R8                                          ;save R8,                 (2 clocks)   
     134:	8f 92       	push	r8
		PUSH  R9                                          ;save R9,                 (2 clocks)   
     136:	9f 92       	push	r9
		PUSH  R10                                         ;save R10,                (2 clocks)   
     138:	af 92       	push	r10
		PUSH  R11                                         ;save R11,                (2 clocks)  
     13a:	bf 92       	push	r11
		PUSH  R12                                         ;save R12,                (2 clocks)  
     13c:	cf 92       	push	r12
		PUSH  R13                                         ;save R13,                (2 clocks)  
     13e:	df 92       	push	r13
		PUSH  R14                                         ;save R14,                (2 clocks)  
     140:	ef 92       	push	r14
		PUSH  R15                                         ;save R15,                (2 clocks)  
     142:	ff 92       	push	r15
		PUSH  R16                                         ;save R16,                (2 clocks)  
     144:	0f 93       	push	r16
		PUSH  R17                                         ;save R17,                (2 clocks)  
     146:	1f 93       	push	r17
		PUSH  R18                                         ;save R18,                (2 clocks)  
     148:	2f 93       	push	r18
		PUSH  R19                                         ;save R19,                (2 clocks)  
     14a:	3f 93       	push	r19
		PUSH  R20                                         ;save R20,                (2 clocks)  
     14c:	4f 93       	push	r20
		PUSH  R21                                         ;save R21,                (2 clocks)  
     14e:	5f 93       	push	r21
		PUSH  R22                                         ;save R22,                (2 clocks)  
     150:	6f 93       	push	r22
		PUSH  R23                                         ;save R23,                (2 clocks)  
     152:	7f 93       	push	r23
		PUSH  R24                                         ;save R24,                (2 clocks)  
     154:	8f 93       	push	r24
		PUSH  R25                                         ;save R25,                (2 clocks)  
     156:	9f 93       	push	r25
		PUSH  R26                                         ;save R26,                (2 clocks)  
     158:	af 93       	push	r26
		PUSH  R27                                         ;save R27,                (2 clocks)  
     15a:	bf 93       	push	r27
		PUSH  R28                                         ;save R28,                (2 clocks)  
     15c:	cf 93       	push	r28
		PUSH  R29                                         ;save R29,                (2 clocks)  
     15e:	df 93       	push	r29
		PUSH  R30                                         ;save R30,                (2 clocks)  
     160:	ef 93       	push	r30
		PUSH  R31                                         ;save R31,                (2 clocks)  
     162:	ff 93       	push	r31
		
		
		;;=============================reload counter value=================================;;
		;; total 4 clocks for reloading
		LDS   R16                , Kernel+0x05            ;fetch reload value,      (2 clocks) 
     164:	00 91 15 02 	lds	r16, 0x0215
		STS   SRTCNT0            , R16                    ;Set value to TCNT0,      (2 clocks) 
     168:	00 93 46 00 	sts	0x0046, r16
		
		
		;;=============================increment tick counter===============================;;
		;; total 26 clocks for reloading, 40 bit counter
		LDI   R16                , 0x01                   ;load 1 to R16,           (1 clock )
     16c:	01 e0       	ldi	r16, 0x01	; 1
		LDS   R17                , Kernel+0x00            ;load Byte0,              (2 clocks)
     16e:	10 91 10 02 	lds	r17, 0x0210
		ADD   R17                , R16                    ;add 1 with Byte0,        (1 clock )
     172:	10 0f       	add	r17, r16
		STS   Kernel+0x00        , R17                    ;set Byte0,               (2 clocks)
     174:	10 93 10 02 	sts	0x0210, r17
		LDS   R17                , Kernel+0x01            ;load Byte1,              (2 clocks)
     178:	10 91 11 02 	lds	r17, 0x0211
		ADC   R17                , R1                     ;add carry with Byte1,    (1 clock )
     17c:	11 1d       	adc	r17, r1
		STS   Kernel+0x01        , R17                    ;set Byte1,               (2 clocks)
     17e:	10 93 11 02 	sts	0x0211, r17
		LDS   R17                , Kernel+0x02            ;load Byte2,              (2 clocks)
     182:	10 91 12 02 	lds	r17, 0x0212
		ADC   R17                , R1                     ;add carry with Byte2,    (1 clock )
     186:	11 1d       	adc	r17, r1
		STS   Kernel+0x02        , R17                    ;set Byte2,               (2 clocks)
     188:	10 93 12 02 	sts	0x0212, r17
		LDS   R17                , Kernel+0x03            ;load Byte3,              (2 clocks)
     18c:	10 91 13 02 	lds	r17, 0x0213
		ADC   R17                , R1                     ;add carry with Byte3,    (1 clock )
     190:	11 1d       	adc	r17, r1
		STS   Kernel+0x03        , R17                    ;set Byte3,               (2 clocks)
     192:	10 93 13 02 	sts	0x0213, r17
		LDS   R17                , Kernel+0x04            ;load Byte4,              (2 clocks)
     196:	10 91 14 02 	lds	r17, 0x0214
		ADC   R17                , R1                     ;add carry with Byte4,    (1 clock )
     19a:	11 1d       	adc	r17, r1
		STS   Kernel+0x04        , R17                    ;set Byte4,               (2 clocks)
     19c:	10 93 14 02 	sts	0x0214, r17
		
		
	;RS_CNTXT:
		;;===============================context restore====================================;;
		;; total 68 clocks for context restore
		POP   R31                                         ;restore R31,             (2 clocks) 
     1a0:	ff 91       	pop	r31
		POP   R30                                         ;restore R30,             (2 clocks) 
     1a2:	ef 91       	pop	r30
		POP   R29                                         ;restore R29,             (2 clocks)
     1a4:	df 91       	pop	r29
		POP   R28                                         ;restore R28,             (2 clocks) 
     1a6:	cf 91       	pop	r28
		POP   R27                                         ;restore R27,             (2 clocks) 
     1a8:	bf 91       	pop	r27
		POP   R26                                         ;restore R26,             (2 clocks) 
     1aa:	af 91       	pop	r26
		POP   R25                                         ;restore R25,             (2 clocks) 
     1ac:	9f 91       	pop	r25
		POP   R24                                         ;restore R24,             (2 clocks) 
     1ae:	8f 91       	pop	r24
		POP   R23                                         ;restore R23,             (2 clocks) 
     1b0:	7f 91       	pop	r23
		POP   R22                                         ;restore R22,             (2 clocks) 
     1b2:	6f 91       	pop	r22
		POP   R21                                         ;restore R21,             (2 clocks) 
     1b4:	5f 91       	pop	r21
		POP   R20                                         ;restore R20,             (2 clocks) 
     1b6:	4f 91       	pop	r20
		POP   R19                                         ;restore R19,             (2 clocks) 
     1b8:	3f 91       	pop	r19
		POP   R18                                         ;restore R18,             (2 clocks) 
     1ba:	2f 91       	pop	r18
		POP   R17                                         ;restore R17,             (2 clocks) 
     1bc:	1f 91       	pop	r17
		POP   R16                                         ;restore R16,             (2 clocks) 
     1be:	0f 91       	pop	r16
		POP   R15                                         ;restore R15,             (2 clocks) 
     1c0:	ff 90       	pop	r15
		POP   R14                                         ;restore R14,             (2 clocks) 
     1c2:	ef 90       	pop	r14
		POP   R13                                         ;restore R13,             (2 clocks) 
     1c4:	df 90       	pop	r13
		POP   R12                                         ;restore R12,             (2 clocks) 
     1c6:	cf 90       	pop	r12
		POP   R11                                         ;restore R11,             (2 clocks) 
     1c8:	bf 90       	pop	r11
		POP   R10                                         ;restore R10,             (2 clocks) 
     1ca:	af 90       	pop	r10
		POP   R9                                          ;restore R9,              (2 clocks) 
     1cc:	9f 90       	pop	r9
		POP   R8                                          ;restore R8,              (2 clocks) 
     1ce:	8f 90       	pop	r8
		POP   R7                                          ;restore R7,              (2 clocks) 
     1d0:	7f 90       	pop	r7
		POP   R6                                          ;restore R6,              (2 clocks) 
     1d2:	6f 90       	pop	r6
		POP   R5                                          ;restore R5,              (2 clocks) 
     1d4:	5f 90       	pop	r5
		POP   R4                                          ;restore R4,              (2 clocks) 
     1d6:	4f 90       	pop	r4
		POP   R3                                          ;restore R3,              (2 clocks) 
     1d8:	3f 90       	pop	r3
		POP   R2                                          ;restore R2,              (2 clocks) 
     1da:	2f 90       	pop	r2
		POP   R1                                          ;restore R1,              (2 clocks) 
     1dc:	1f 90       	pop	r1
		POP   R0                                          ;fetch SREG,              (2 clocks) 
     1de:	0f 90       	pop	r0
		OUT   0x3F               , R0                     ;load SREG,               (1 clock ) 
     1e0:	0f be       	out	0x3f, r0	; 63
		POP   R0                                          ;restore R0,              (2 clocks) 
     1e2:	0f 90       	pop	r0
		
		
		;;============================if kernel debug enabled===============================;;
		#ifdef KER_DBG_ENABLE
		CBI   KER_DBG_PORT       , KER_DBG_PIN            ;clear gpio,              (2 clocks)
     1e4:	29 98       	cbi	0x05, 1	; 5
		#endif
		
		RETI                                              ;return from interrupt,   (4 clocks) 
     1e6:	18 95       	reti

000001e8 <Kernel_SysTick_Reg_Init>:

;;====================================SysTick Reg Init=======================================;;
;; total 32 clocks for SysTick Reg Init, omited debug gpio config
Kernel_SysTick_Reg_Init:
        ;clear all kernel variables
		LDI   R16                , 0x00                   ;set ker_tski to 0,       (1 clock )
     1e8:	00 e0       	ldi	r16, 0x00	; 0
		STS   ker_tski           , R16                    ;load  ker_tski=0,        (2 clocks)
     1ea:	00 93 16 02 	sts	0x0216, r16
		STS   Kernel+0x00        , R16                    ;clear  kernel[0],        (2 clocks)
     1ee:	00 93 10 02 	sts	0x0210, r16
		STS   Kernel+0x01        , R16                    ;clear  kernel[1],        (2 clocks)
     1f2:	00 93 11 02 	sts	0x0211, r16
		STS   Kernel+0x02        , R16                    ;clear  kernel[2],        (2 clocks)
     1f6:	00 93 12 02 	sts	0x0212, r16
		STS   Kernel+0x03        , R16                    ;clear  kernel[3],        (2 clocks)
     1fa:	00 93 13 02 	sts	0x0213, r16
		STS   Kernel+0x04        , R16                    ;clear  kernel[4],        (2 clocks)
     1fe:	00 93 14 02 	sts	0x0214, r16
		STS   Kernel+0x05        , R16                    ;clear  kernel[5],        (2 clocks)
     202:	00 93 15 02 	sts	0x0215, r16
		
		#ifdef KER_DBG_ENABLE
		SBI   KER_DBG_DDR        , KER_DBG_PIN            ;set bit in DDR,          (2 clocks) 
     206:	21 9a       	sbi	0x04, 1	; 4
		CBI   KER_DBG_PORT       , KER_DBG_PIN            ;clear port bit,          (2 clocks) 
     208:	29 98       	cbi	0x05, 1	; 5
		#endif
		
		
        CLI                                               ;disable global interrupt,(1 clock ) 
     20a:	f8 94       	cli
		LDI   R16                , 0x00                   ;store r16 with 0,        (1 clock ) 
     20c:	00 e0       	ldi	r16, 0x00	; 0
		STS   SRTCCR0A           , R16                    ;clear TCCR0A,            (2 clocks) 
     20e:	00 93 44 00 	sts	0x0044, r16
		STS   SRTCCR0B           , R16                    ;clear TCCR0B,            (2 clocks) 
     212:	00 93 45 00 	sts	0x0045, r16
		STS   SRTIMSK0           , R16                    ;clear TIMSK0,            (2 clocks) 
     216:	00 93 6e 00 	sts	0x006E, r16
		STS   SRTIFR0            , R16                    ;clear TIFR0,             (2 clocks) 
     21a:	00 93 35 00 	sts	0x0035, r16
		STS   SROCR0A            , R16                    ;clear OCR0A,             (2 clocks) 
     21e:	00 93 47 00 	sts	0x0047, r16
		STS   SROCR0B            , R16                    ;clear OCR0B,             (2 clocks) 
     222:	00 93 48 00 	sts	0x0048, r16
		STS   SRTCNT0            , R16                    ;clear TCNT0,             (2 clocks) 
     226:	00 93 46 00 	sts	0x0046, r16
		LDI   R16                , KER_PRS                ;prescaler 64,            (1 clock ) 
     22a:	03 e0       	ldi	r16, 0x03	; 3
		STS   SRTCCR0B           , R16                    ;set to TCCR0B,           (2 clocks)
     22c:	00 93 45 00 	sts	0x0045, r16
		LDI   R16                , KER_RLD                ;reload value (130),      (1 clock ) 
     230:	02 e8       	ldi	r16, 0x82	; 130
		STS   Kernel+0x05        , R16                    ;Kernel[5] reload value,  (2 clocks) 
     232:	00 93 15 02 	sts	0x0215, r16
		STS   SRTCNT0            , R16                    ;set to TCNT0,            (2 clocks) 
     236:	00 93 46 00 	sts	0x0046, r16
		LDI   R16                , 0x01                   ;store with TOIE0 enabled,(1 clock ) 
     23a:	01 e0       	ldi	r16, 0x01	; 1
		STS   SRTIMSK0           , R16                    ;set to TIMSK0,           (2 clocks) 
     23c:	00 93 6e 00 	sts	0x006E, r16
		SEI                                               ;enable global interrupt, (1 clock ) 
     240:	78 94       	sei
		RET                                               ;return from subroutine,  (4 clocks) 
     242:	08 95       	ret

00000244 <Kernel_SysTick_Val_Get>:

;;===================================SysTick Value Get======================================;;
;; total 20 clocks for SysTick Value Get
;; interrupts disabled for 16 clocks
Kernel_SysTick_Val_Get:
        IN    R16                , IOSREG                 ;Save SREG,               (1 clock ) 
     244:	0f b7       	in	r16, 0x3f	; 63
        CLI                                               ;Disable interrupts,      (1 clock ) 
     246:	f8 94       	cli
		LDS   R18		         , Kernel+0x00            ;Byte0 -> R18 (LSB),      (2 clocks) 
     248:	20 91 10 02 	lds	r18, 0x0210
		LDS   R19		         , Kernel+0x01            ;Byte1 -> R19,            (2 clocks) 
     24c:	30 91 11 02 	lds	r19, 0x0211
		LDS   R20		         , Kernel+0x02            ;Byte2 -> R20,            (2 clocks) 
     250:	40 91 12 02 	lds	r20, 0x0212
		LDS   R21		         , Kernel+0x03            ;Byte3 -> R21,            (2 clocks) 
     254:	50 91 13 02 	lds	r21, 0x0213
		LDS   R22		         , Kernel+0x04            ;Byte4 -> R22,            (2 clocks) 
     258:	60 91 14 02 	lds	r22, 0x0214
		LDI   R23		         , 0x00                   ;Byte4 -> R23,            (2 clocks) 
     25c:	70 e0       	ldi	r23, 0x00	; 0
		LDI   R24		         , 0x00                   ;Byte4 -> R24,            (2 clocks) 
     25e:	80 e0       	ldi	r24, 0x00	; 0
		LDI   R25		         , 0x00                   ;Byte4 -> R25 (MSB),      (2 clocks) 
     260:	90 e0       	ldi	r25, 0x00	; 0
		OUT   IOSREG             , R16          		  ;Restore SREG,            (1 clock )
     262:	0f bf       	out	0x3f, r16	; 63
		RET                                               ;return from subroutine,  (4 clocks) 
     264:	08 95       	ret

00000266 <Kernel_Interrupt_Sts_Get>:


;;=================================Interrupt Status Get=====================================;;
;; total 10 clocks for Interrupt Status Get
Kernel_Interrupt_Sts_Get:
        LDI   R24		         , 0x00                   ;clear R24,               (1 clock ) 
     266:	80 e0       	ldi	r24, 0x00	; 0
        IN    R16		         , IOSREG                 ;save SREG in R16,        (1 clock )
     268:	0f b7       	in	r16, 0x3f	; 63
		SBRC  R16		         , 0x07                   ;check I flag->bit7,      (3 clocks)
     26a:	07 fd       	sbrc	r16, 7
		LDI   R24		         , 0x01                   ;set R24 to 1,            (1 clock ) 
     26c:	81 e0       	ldi	r24, 0x01	; 1
		RET                                               ;return from subroutine,  (4 clocks) 
     26e:	08 95       	ret

00000270 <Kernel_Test_Task0>:


;;===================================Kernel Test Task0======================================;;
Kernel_Test_Task0:
        ;initialize DDR and Port register, total 4 clocks
        SBI   KER_TSK0_DDR       , KER_TSK0_PIN           ;set bit in DDR,          (2 clocks) 
     270:	55 9a       	sbi	0x0a, 5	; 10
		CBI   KER_TSK0_PORT      , KER_TSK0_PIN           ;clear port bit,          (2 clocks)
     272:	5d 98       	cbi	0x0b, 5	; 11

00000274 <LOOP0>:
		 
    LOOP0:
	    ;pin toggle, total 5 clocks
		IN    R16                , KER_TSK0_PORT          ;load PORT val,           (2 clocks)
     274:	0b b1       	in	r16, 0x0b	; 11
		LDI   R17                , (1<<KER_TSK0_PIN)      ;bit mask for port pin    (1 clock )
     276:	10 e2       	ldi	r17, 0x20	; 32
		EOR   R16                , R17                    ;XOR with current val     (1 clock )
     278:	01 27       	eor	r16, r17
		OUT   KER_TSK0_PORT      , R16                    ;set new PORT val,        (1 clock )
     27a:	0b b9       	out	0x0b, r16	; 11
		
		;assign delay loop count val, for 30ms 
		LDI   R16                , 0xEB                   ;set loop cnt val,        (1 clock )
     27c:	0b ee       	ldi	r16, 0xEB	; 235

0000027e <DLY00>:
		
    DLY00:
	    LDI   R17                , 0xFF                   ;set loop cnt val,        (1 clock )
     27e:	1f ef       	ldi	r17, 0xFF	; 255

00000280 <DLY01>:
		
	DLY01:                                                ;inner loop,127.5uS@8Mhz  (4 clocks)
		NOP                                               ;no operation,            (1 clock )
     280:	00 00       	nop
		DEC   R17                                         ;decrement R17 val,       (1 clock )
     282:	1a 95       	dec	r17
		BRNE  DLY01                                       ;if R17 not equal to 0,   (2 clock ) 
     284:	e9 f7       	brne	.-6      	; 0x280 <DLY01>
		DEC   R16                                         ;decrement R16 val,       (1 clock )
     286:	0a 95       	dec	r16
		BRNE  DLY00                                       ;if R16 not equal to 0,   (2 clock ) 
     288:	d1 f7       	brne	.-12     	; 0x27e <DLY00>
		RJMP  LOOP0                                       ;if R16 is 0->jump,       (2 clock ) 
     28a:	f4 cf       	rjmp	.-24     	; 0x274 <LOOP0>
		RET                                               ;return from subroutine,  (4 clocks) 
     28c:	08 95       	ret

0000028e <Kernel_Test_Task1>:


;;===================================Kernel Test Task1======================================;;
Kernel_Test_Task1:
        ;initialize DDR and Port register, total 4 clocks
        SBI   KER_TSK1_DDR       , KER_TSK1_PIN           ;set bit in DDR,          (2 clocks) 
     28e:	56 9a       	sbi	0x0a, 6	; 10
		CBI   KER_TSK1_PORT      , KER_TSK1_PIN           ;clear port bit,          (2 clocks)
     290:	5e 98       	cbi	0x0b, 6	; 11

00000292 <LOOP1>:
		 
    LOOP1:
	    ;pin toggle, total 5 clocks
		IN    R16                , KER_TSK1_PORT          ;load PORT val,           (2 clocks)
     292:	0b b1       	in	r16, 0x0b	; 11
		LDI   R17                , (1<<KER_TSK1_PIN)      ;bit mask for port pin    (1 clock )
     294:	10 e4       	ldi	r17, 0x40	; 64
		EOR   R16                , R17                    ;XOR with current val     (1 clock )
     296:	01 27       	eor	r16, r17
		OUT   KER_TSK1_PORT      , R16                    ;set new PORT val,        (1 clock )
     298:	0b b9       	out	0x0b, r16	; 11
		
		;assign delay loop count val, for 30ms 
		LDI   R16                , 0xEB                   ;set loop cnt val,        (1 clock )
     29a:	0b ee       	ldi	r16, 0xEB	; 235

0000029c <DLY10>:
		
    DLY10:
	    LDI   R17                , 0xFF                   ;set loop cnt val,        (1 clock )
     29c:	1f ef       	ldi	r17, 0xFF	; 255

0000029e <DLY11>:
		
	DLY11:                                                ;inner loop,127.5uS@8Mhz  (4 clocks)
		NOP                                               ;no operation,            (1 clock )
     29e:	00 00       	nop
		DEC   R17                                         ;decrement R17 val,       (1 clock )
     2a0:	1a 95       	dec	r17
		BRNE  DLY11                                       ;if R17 not equal to 0,   (2 clock ) 
     2a2:	e9 f7       	brne	.-6      	; 0x29e <DLY11>
		DEC   R16                                         ;decrement R16 val,       (1 clock )
     2a4:	0a 95       	dec	r16
		BRNE  DLY10                                       ;if R16 not equal to 0,   (2 clock ) 
     2a6:	d1 f7       	brne	.-12     	; 0x29c <DLY10>
		RJMP  LOOP1                                       ;if R16 is 0->jump,       (2 clock ) 
     2a8:	f4 cf       	rjmp	.-24     	; 0x292 <LOOP1>

000002aa <Kernel_Test_Task2>:


;;===================================Kernel Test Task2======================================;;
Kernel_Test_Task2:
        ;initialize DDR and Port register, total 4 clocks
        SBI   KER_TSK2_DDR       , KER_TSK2_PIN           ;set bit in DDR,          (2 clocks) 
     2aa:	57 9a       	sbi	0x0a, 7	; 10
		CBI   KER_TSK2_PORT      , KER_TSK2_PIN           ;clear port bit,          (2 clocks)
     2ac:	5f 98       	cbi	0x0b, 7	; 11

000002ae <LOOP2>:
		 
    LOOP2:
	    ;pin toggle, total 5 clocks
		IN    R16                , KER_TSK2_PORT          ;load PORT val,           (2 clocks)
     2ae:	0b b1       	in	r16, 0x0b	; 11
		LDI   R17                , (1<<KER_TSK2_PIN)      ;bit mask for port pin    (1 clock )
     2b0:	10 e8       	ldi	r17, 0x80	; 128
		EOR   R16                , R17                    ;XOR with current val     (1 clock )
     2b2:	01 27       	eor	r16, r17
		OUT   KER_TSK2_PORT      , R16                    ;set new PORT val,        (1 clock )
     2b4:	0b b9       	out	0x0b, r16	; 11
		
		;assign delay loop count val, for 30ms 
		LDI   R16                , 0xEB                   ;set loop cnt val,        (1 clock )
     2b6:	0b ee       	ldi	r16, 0xEB	; 235

000002b8 <DLY20>:
		
    DLY20:
	    LDI   R17                , 0xFF                   ;set loop cnt val,        (1 clock )
     2b8:	1f ef       	ldi	r17, 0xFF	; 255

000002ba <DLY21>:
		
	DLY21:                                                ;inner loop, 127.5uS@8Mhz (4 clocks)
		NOP                                               ;no operation,            (1 clock )
     2ba:	00 00       	nop
		DEC   R17                                         ;decrement R17 val,       (1 clock )
     2bc:	1a 95       	dec	r17
		BRNE  DLY21                                       ;if R17 not equal to 0,   (2 clock ) 
     2be:	e9 f7       	brne	.-6      	; 0x2ba <DLY21>
		DEC   R16                                         ;decrement R16 val,       (1 clock )
     2c0:	0a 95       	dec	r16
		BRNE  DLY20                                       ;if R16 not equal to 0,   (2 clock ) 
     2c2:	d1 f7       	brne	.-12     	; 0x2b8 <DLY20>
		RJMP  LOOP2                                       ;if R16 is 0->jump,       (2 clock ) 
     2c4:	f4 cf       	rjmp	.-24     	; 0x2ae <LOOP2>

000002c6 <Kernel_Task0_Init>:
    

;;====================================Kernel Task0 Init=====================================;;
Kernel_Task0_Init:
        ;init stack for task0
		LDI   R18                , lo8(ker_stk0+KER_STZ)  ;fetch top SPL1,          (1 clock )
     2c6:	2d e9       	ldi	r18, 0x9D	; 157
		LDI   R19                , hi8(ker_stk0+KER_STZ)  ;fetch top SPH1,          (1 clock )
     2c8:	32 e0       	ldi	r19, 0x02	; 2
		
		OUT   IOSPL              , R18
     2ca:	2d bf       	out	0x3d, r18	; 61
        OUT   IOSPH              , R19
     2cc:	3e bf       	out	0x3e, r19	; 62
		
		LDI   R16                , lo8(Kernel_Test_Task0)
     2ce:	00 e7       	ldi	r16, 0x70	; 112
        PUSH  R16
     2d0:	0f 93       	push	r16
        LDI   R16                , hi8(Kernel_Test_Task0)
     2d2:	02 e0       	ldi	r16, 0x02	; 2
        PUSH  R16
     2d4:	0f 93       	push	r16
		
		;push task1 entry to stack1
		LDI   R16                , lo8(Kernel_Test_Task0) ;fetch task1 entry low,   (1 clock )
     2d6:	00 e7       	ldi	r16, 0x70	; 112
		PUSH  R16                                         ;push to SPL1,            (1 clock )
     2d8:	0f 93       	push	r16
		LDI   R16                , hi8(Kernel_Test_Task0) ;fetch task1 entry high,  (1 clock )
     2da:	02 e0       	ldi	r16, 0x02	; 2
		PUSH  R16                                         ;push to SPH1,            (1 clock )
     2dc:	0f 93       	push	r16
		
		
        ;;==============================context save========================================;;
		;; total 68 clocks for context saving
        PUSH  R0                                          ;save R0,                 (2 clocks)
     2de:	0f 92       	push	r0
		IN    R0                 , IOSREG                 ;load SREG,               (1 clock )
     2e0:	0f b6       	in	r0, 0x3f	; 63
		PUSH  R0                                          ;save SREG,               (2 clocks)
     2e2:	0f 92       	push	r0
		PUSH  R1                                          ;save R1,                 (2 clocks)   
     2e4:	1f 92       	push	r1
		CLR   R1                                          ;clear R1,                (1 clock )
     2e6:	11 24       	eor	r1, r1
		PUSH  R2                                          ;save R2,                 (2 clocks)   
     2e8:	2f 92       	push	r2
		PUSH  R3                                          ;save R3,                 (2 clocks)   
     2ea:	3f 92       	push	r3
		PUSH  R4                                          ;save R4,                 (2 clocks)   
     2ec:	4f 92       	push	r4
		PUSH  R5                                          ;save R5,                 (2 clocks)   
     2ee:	5f 92       	push	r5
		PUSH  R6                                          ;save R6,                 (2 clocks)   
     2f0:	6f 92       	push	r6
		PUSH  R7                                          ;save R7,                 (2 clocks)   
     2f2:	7f 92       	push	r7
		PUSH  R8                                          ;save R8,                 (2 clocks)   
     2f4:	8f 92       	push	r8
		PUSH  R9                                          ;save R9,                 (2 clocks)   
     2f6:	9f 92       	push	r9
		PUSH  R10                                         ;save R10,                (2 clocks)   
     2f8:	af 92       	push	r10
		PUSH  R11                                         ;save R11,                (2 clocks)  
     2fa:	bf 92       	push	r11
		PUSH  R12                                         ;save R12,                (2 clocks)  
     2fc:	cf 92       	push	r12
		PUSH  R13                                         ;save R13,                (2 clocks)  
     2fe:	df 92       	push	r13
		PUSH  R14                                         ;save R14,                (2 clocks)  
     300:	ef 92       	push	r14
		PUSH  R15                                         ;save R15,                (2 clocks)  
     302:	ff 92       	push	r15
		PUSH  R16                                         ;save R16,                (2 clocks)  
     304:	0f 93       	push	r16
		PUSH  R17                                         ;save R17,                (2 clocks)  
     306:	1f 93       	push	r17
		PUSH  R18                                         ;save R18,                (2 clocks)  
     308:	2f 93       	push	r18
		PUSH  R19                                         ;save R19,                (2 clocks)  
     30a:	3f 93       	push	r19
		PUSH  R20                                         ;save R20,                (2 clocks)  
     30c:	4f 93       	push	r20
		PUSH  R21                                         ;save R21,                (2 clocks)  
     30e:	5f 93       	push	r21
		PUSH  R22                                         ;save R22,                (2 clocks)  
     310:	6f 93       	push	r22
		PUSH  R23                                         ;save R23,                (2 clocks)  
     312:	7f 93       	push	r23
		PUSH  R24                                         ;save R24,                (2 clocks)  
     314:	8f 93       	push	r24
		PUSH  R25                                         ;save R25,                (2 clocks)  
     316:	9f 93       	push	r25
		PUSH  R26                                         ;save R26,                (2 clocks)  
     318:	af 93       	push	r26
		PUSH  R27                                         ;save R27,                (2 clocks)  
     31a:	bf 93       	push	r27
		PUSH  R28                                         ;save R28,                (2 clocks)  
     31c:	cf 93       	push	r28
		PUSH  R29                                         ;save R29,                (2 clocks)  
     31e:	df 93       	push	r29
		PUSH  R30                                         ;save R30,                (2 clocks)  
     320:	ef 93       	push	r30
		PUSH  R31                                         ;save R31,                (2 clocks) 
     322:	ff 93       	push	r31
		
		;--- Step 5: Save current SP into ker_stp[1] (task1 pointer) ---
        IN    R20, IOSPL
     324:	4d b7       	in	r20, 0x3d	; 61
        IN    R21, IOSPH
     326:	5e b7       	in	r21, 0x3e	; 62
        STS   ker_stp + 0        , R20                    ; Task 1 is index 1
     328:	40 93 17 02 	sts	0x0217, r20
        STS   ker_stp + 1        , R21
     32c:	50 93 18 02 	sts	0x0218, r21
        RET                                               ;return from subroutine,  (4 clocks) 
     330:	08 95       	ret

00000332 <Kernel_Task1_Init>:


;;====================================Kernel Task0 Init=====================================;;
Kernel_Task1_Init:
        ;init stack for task0
		LDI   R18                , lo8(ker_stk1+KER_STZ)  ;fetch top SPL1,          (1 clock )
     332:	2d e1       	ldi	r18, 0x1D	; 29
		LDI   R19                , hi8(ker_stk1+KER_STZ)  ;fetch top SPH1,          (1 clock )
     334:	33 e0       	ldi	r19, 0x03	; 3
		
		OUT   IOSPL              , R18
     336:	2d bf       	out	0x3d, r18	; 61
        OUT   IOSPH              , R19
     338:	3e bf       	out	0x3e, r19	; 62
		
		LDI   R16                , lo8(Kernel_Test_Task1)
     33a:	0e e8       	ldi	r16, 0x8E	; 142
        PUSH  R16
     33c:	0f 93       	push	r16
        LDI   R16                , hi8(Kernel_Test_Task1)
     33e:	02 e0       	ldi	r16, 0x02	; 2
        PUSH  R16
     340:	0f 93       	push	r16
		
		;push task1 entry to stack1
		LDI   R16                , lo8(Kernel_Test_Task1) ;fetch task1 entry low,   (1 clock )
     342:	0e e8       	ldi	r16, 0x8E	; 142
		PUSH  R16                                         ;push to SPL1,            (1 clock )
     344:	0f 93       	push	r16
		LDI   R16                , hi8(Kernel_Test_Task1) ;fetch task1 entry high,  (1 clock )
     346:	02 e0       	ldi	r16, 0x02	; 2
		PUSH  R16                                         ;push to SPH1,            (1 clock )
     348:	0f 93       	push	r16
		
		
        ;;==============================context save========================================;;
		;; total 68 clocks for context saving
        PUSH  R0                                          ;save R0,                 (2 clocks)
     34a:	0f 92       	push	r0
		IN    R0                 , IOSREG                 ;load SREG,               (1 clock )
     34c:	0f b6       	in	r0, 0x3f	; 63
		PUSH  R0                                          ;save SREG,               (2 clocks)
     34e:	0f 92       	push	r0
		PUSH  R1                                          ;save R1,                 (2 clocks)   
     350:	1f 92       	push	r1
		CLR   R1                                          ;clear R1,                (1 clock )
     352:	11 24       	eor	r1, r1
		PUSH  R2                                          ;save R2,                 (2 clocks)   
     354:	2f 92       	push	r2
		PUSH  R3                                          ;save R3,                 (2 clocks)   
     356:	3f 92       	push	r3
		PUSH  R4                                          ;save R4,                 (2 clocks)   
     358:	4f 92       	push	r4
		PUSH  R5                                          ;save R5,                 (2 clocks)   
     35a:	5f 92       	push	r5
		PUSH  R6                                          ;save R6,                 (2 clocks)   
     35c:	6f 92       	push	r6
		PUSH  R7                                          ;save R7,                 (2 clocks)   
     35e:	7f 92       	push	r7
		PUSH  R8                                          ;save R8,                 (2 clocks)   
     360:	8f 92       	push	r8
		PUSH  R9                                          ;save R9,                 (2 clocks)   
     362:	9f 92       	push	r9
		PUSH  R10                                         ;save R10,                (2 clocks)   
     364:	af 92       	push	r10
		PUSH  R11                                         ;save R11,                (2 clocks)  
     366:	bf 92       	push	r11
		PUSH  R12                                         ;save R12,                (2 clocks)  
     368:	cf 92       	push	r12
		PUSH  R13                                         ;save R13,                (2 clocks)  
     36a:	df 92       	push	r13
		PUSH  R14                                         ;save R14,                (2 clocks)  
     36c:	ef 92       	push	r14
		PUSH  R15                                         ;save R15,                (2 clocks)  
     36e:	ff 92       	push	r15
		PUSH  R16                                         ;save R16,                (2 clocks)  
     370:	0f 93       	push	r16
		PUSH  R17                                         ;save R17,                (2 clocks)  
     372:	1f 93       	push	r17
		PUSH  R18                                         ;save R18,                (2 clocks)  
     374:	2f 93       	push	r18
		PUSH  R19                                         ;save R19,                (2 clocks)  
     376:	3f 93       	push	r19
		PUSH  R20                                         ;save R20,                (2 clocks)  
     378:	4f 93       	push	r20
		PUSH  R21                                         ;save R21,                (2 clocks)  
     37a:	5f 93       	push	r21
		PUSH  R22                                         ;save R22,                (2 clocks)  
     37c:	6f 93       	push	r22
		PUSH  R23                                         ;save R23,                (2 clocks)  
     37e:	7f 93       	push	r23
		PUSH  R24                                         ;save R24,                (2 clocks)  
     380:	8f 93       	push	r24
		PUSH  R25                                         ;save R25,                (2 clocks)  
     382:	9f 93       	push	r25
		PUSH  R26                                         ;save R26,                (2 clocks)  
     384:	af 93       	push	r26
		PUSH  R27                                         ;save R27,                (2 clocks)  
     386:	bf 93       	push	r27
		PUSH  R28                                         ;save R28,                (2 clocks)  
     388:	cf 93       	push	r28
		PUSH  R29                                         ;save R29,                (2 clocks)  
     38a:	df 93       	push	r29
		PUSH  R30                                         ;save R30,                (2 clocks)  
     38c:	ef 93       	push	r30
		PUSH  R31                                         ;save R31,                (2 clocks) 
     38e:	ff 93       	push	r31
		
		;--- Step 5: Save current SP into ker_stp[1] (task1 pointer) ---
        IN    R20, IOSPL
     390:	4d b7       	in	r20, 0x3d	; 61
        IN    R21, IOSPH
     392:	5e b7       	in	r21, 0x3e	; 62
        STS   ker_stp + 2        , R20                    ; Task 1 is index 1
     394:	40 93 19 02 	sts	0x0219, r20
        STS   ker_stp + 3        , R21
     398:	50 93 1a 02 	sts	0x021A, r21
        RET                                               ;return from subroutine,  (4 clocks) 
     39c:	08 95       	ret

0000039e <__umoddi3>:
     39e:	ab e5       	ldi	r26, 0x5B	; 91
     3a0:	b0 e0       	ldi	r27, 0x00	; 0
     3a2:	e5 ed       	ldi	r30, 0xD5	; 213
     3a4:	f1 e0       	ldi	r31, 0x01	; 1
     3a6:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__prologue_saves__>
     3aa:	a8 e0       	ldi	r26, 0x08	; 8
     3ac:	4e 01       	movw	r8, r28
     3ae:	08 94       	sec
     3b0:	81 1c       	adc	r8, r1
     3b2:	91 1c       	adc	r9, r1
     3b4:	f4 01       	movw	r30, r8
     3b6:	6a 2e       	mov	r6, r26
     3b8:	11 92       	st	Z+, r1
     3ba:	6a 94       	dec	r6
     3bc:	e9 f7       	brne	.-6      	; 0x3b8 <__umoddi3+0x1a>
     3be:	29 83       	std	Y+1, r18	; 0x01
     3c0:	3a 83       	std	Y+2, r19	; 0x02
     3c2:	4b 83       	std	Y+3, r20	; 0x03
     3c4:	5c 83       	std	Y+4, r21	; 0x04
     3c6:	6d 83       	std	Y+5, r22	; 0x05
     3c8:	7e 83       	std	Y+6, r23	; 0x06
     3ca:	8f 83       	std	Y+7, r24	; 0x07
     3cc:	98 87       	std	Y+8, r25	; 0x08
     3ce:	ce 01       	movw	r24, r28
     3d0:	09 96       	adiw	r24, 0x09	; 9
     3d2:	fc 01       	movw	r30, r24
     3d4:	11 92       	st	Z+, r1
     3d6:	aa 95       	dec	r26
     3d8:	e9 f7       	brne	.-6      	; 0x3d4 <__umoddi3+0x36>
     3da:	a9 86       	std	Y+9, r10	; 0x09
     3dc:	ba 86       	std	Y+10, r11	; 0x0a
     3de:	cb 86       	std	Y+11, r12	; 0x0b
     3e0:	dc 86       	std	Y+12, r13	; 0x0c
     3e2:	ed 86       	std	Y+13, r14	; 0x0d
     3e4:	fe 86       	std	Y+14, r15	; 0x0e
     3e6:	0f 87       	std	Y+15, r16	; 0x0f
     3e8:	18 8b       	std	Y+16, r17	; 0x10
     3ea:	29 84       	ldd	r2, Y+9	; 0x09
     3ec:	3a 84       	ldd	r3, Y+10	; 0x0a
     3ee:	4b 84       	ldd	r4, Y+11	; 0x0b
     3f0:	5c 84       	ldd	r5, Y+12	; 0x0c
     3f2:	ad 84       	ldd	r10, Y+13	; 0x0d
     3f4:	be 84       	ldd	r11, Y+14	; 0x0e
     3f6:	cf 84       	ldd	r12, Y+15	; 0x0f
     3f8:	d8 88       	ldd	r13, Y+16	; 0x10
     3fa:	29 81       	ldd	r18, Y+1	; 0x01
     3fc:	3a 81       	ldd	r19, Y+2	; 0x02
     3fe:	4b 81       	ldd	r20, Y+3	; 0x03
     400:	5c 81       	ldd	r21, Y+4	; 0x04
     402:	69 96       	adiw	r28, 0x19	; 25
     404:	2f af       	std	Y+63, r18	; 0x3f
     406:	69 97       	sbiw	r28, 0x19	; 25
     408:	6a 96       	adiw	r28, 0x1a	; 26
     40a:	3f af       	std	Y+63, r19	; 0x3f
     40c:	6a 97       	sbiw	r28, 0x1a	; 26
     40e:	6b 96       	adiw	r28, 0x1b	; 27
     410:	4f af       	std	Y+63, r20	; 0x3f
     412:	6b 97       	sbiw	r28, 0x1b	; 27
     414:	6c 96       	adiw	r28, 0x1c	; 28
     416:	5f af       	std	Y+63, r21	; 0x3f
     418:	6c 97       	sbiw	r28, 0x1c	; 28
     41a:	6c 96       	adiw	r28, 0x1c	; 28
     41c:	6c ac       	ldd	r6, Y+60	; 0x3c
     41e:	7d ac       	ldd	r7, Y+61	; 0x3d
     420:	8e ac       	ldd	r8, Y+62	; 0x3e
     422:	9f ac       	ldd	r9, Y+63	; 0x3f
     424:	6c 97       	sbiw	r28, 0x1c	; 28
     426:	69 aa       	std	Y+49, r6	; 0x31
     428:	7a aa       	std	Y+50, r7	; 0x32
     42a:	8b aa       	std	Y+51, r8	; 0x33
     42c:	9c aa       	std	Y+52, r9	; 0x34
     42e:	6d 81       	ldd	r22, Y+5	; 0x05
     430:	7e 81       	ldd	r23, Y+6	; 0x06
     432:	8f 81       	ldd	r24, Y+7	; 0x07
     434:	98 85       	ldd	r25, Y+8	; 0x08
     436:	3b 01       	movw	r6, r22
     438:	4c 01       	movw	r8, r24
     43a:	6d aa       	std	Y+53, r6	; 0x35
     43c:	7e aa       	std	Y+54, r7	; 0x36
     43e:	8f aa       	std	Y+55, r8	; 0x37
     440:	98 ae       	std	Y+56, r9	; 0x38
     442:	a1 14       	cp	r10, r1
     444:	b1 04       	cpc	r11, r1
     446:	c1 04       	cpc	r12, r1
     448:	d1 04       	cpc	r13, r1
     44a:	09 f0       	breq	.+2      	; 0x44e <KER_TR+0x66>
     44c:	04 c3       	rjmp	.+1544   	; 0xa56 <__stack+0x157>
     44e:	62 14       	cp	r6, r2
     450:	73 04       	cpc	r7, r3
     452:	84 04       	cpc	r8, r4
     454:	95 04       	cpc	r9, r5
     456:	08 f0       	brcs	.+2      	; 0x45a <KER_TR+0x72>
     458:	00 c1       	rjmp	.+512    	; 0x65a <KER_TR+0x272>
     45a:	00 e0       	ldi	r16, 0x00	; 0
     45c:	20 16       	cp	r2, r16
     45e:	00 e0       	ldi	r16, 0x00	; 0
     460:	30 06       	cpc	r3, r16
     462:	01 e0       	ldi	r16, 0x01	; 1
     464:	40 06       	cpc	r4, r16
     466:	00 e0       	ldi	r16, 0x00	; 0
     468:	50 06       	cpc	r5, r16
     46a:	88 f4       	brcc	.+34     	; 0x48e <KER_TR+0xa6>
     46c:	1f ef       	ldi	r17, 0xFF	; 255
     46e:	21 16       	cp	r2, r17
     470:	31 04       	cpc	r3, r1
     472:	41 04       	cpc	r4, r1
     474:	51 04       	cpc	r5, r1
     476:	39 f0       	breq	.+14     	; 0x486 <KER_TR+0x9e>
     478:	30 f0       	brcs	.+12     	; 0x486 <KER_TR+0x9e>
     47a:	88 e0       	ldi	r24, 0x08	; 8
     47c:	e8 2e       	mov	r14, r24
     47e:	f1 2c       	mov	r15, r1
     480:	01 2d       	mov	r16, r1
     482:	11 2d       	mov	r17, r1
     484:	18 c0       	rjmp	.+48     	; 0x4b6 <KER_TR+0xce>
     486:	ee 24       	eor	r14, r14
     488:	ff 24       	eor	r15, r15
     48a:	87 01       	movw	r16, r14
     48c:	14 c0       	rjmp	.+40     	; 0x4b6 <KER_TR+0xce>
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	24 16       	cp	r2, r20
     492:	40 e0       	ldi	r20, 0x00	; 0
     494:	34 06       	cpc	r3, r20
     496:	40 e0       	ldi	r20, 0x00	; 0
     498:	44 06       	cpc	r4, r20
     49a:	41 e0       	ldi	r20, 0x01	; 1
     49c:	54 06       	cpc	r5, r20
     49e:	30 f0       	brcs	.+12     	; 0x4ac <KER_TR+0xc4>
     4a0:	b8 e1       	ldi	r27, 0x18	; 24
     4a2:	eb 2e       	mov	r14, r27
     4a4:	f1 2c       	mov	r15, r1
     4a6:	01 2d       	mov	r16, r1
     4a8:	11 2d       	mov	r17, r1
     4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <KER_TR+0xce>
     4ac:	a0 e1       	ldi	r26, 0x10	; 16
     4ae:	ea 2e       	mov	r14, r26
     4b0:	f1 2c       	mov	r15, r1
     4b2:	01 2d       	mov	r16, r1
     4b4:	11 2d       	mov	r17, r1
     4b6:	d2 01       	movw	r26, r4
     4b8:	c1 01       	movw	r24, r2
     4ba:	0e 2c       	mov	r0, r14
     4bc:	04 c0       	rjmp	.+8      	; 0x4c6 <KER_TR+0xde>
     4be:	b6 95       	lsr	r27
     4c0:	a7 95       	ror	r26
     4c2:	97 95       	ror	r25
     4c4:	87 95       	ror	r24
     4c6:	0a 94       	dec	r0
     4c8:	d2 f7       	brpl	.-12     	; 0x4be <KER_TR+0xd6>
     4ca:	80 50       	subi	r24, 0x00	; 0
     4cc:	9f 4f       	sbci	r25, 0xFF	; 255
     4ce:	dc 01       	movw	r26, r24
     4d0:	2c 91       	ld	r18, X
     4d2:	80 e2       	ldi	r24, 0x20	; 32
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	a0 e0       	ldi	r26, 0x00	; 0
     4d8:	b0 e0       	ldi	r27, 0x00	; 0
     4da:	8e 19       	sub	r24, r14
     4dc:	9f 09       	sbc	r25, r15
     4de:	a0 0b       	sbc	r26, r16
     4e0:	b1 0b       	sbc	r27, r17
     4e2:	5c 01       	movw	r10, r24
     4e4:	6d 01       	movw	r12, r26
     4e6:	a2 1a       	sub	r10, r18
     4e8:	b1 08       	sbc	r11, r1
     4ea:	c1 08       	sbc	r12, r1
     4ec:	d1 08       	sbc	r13, r1
     4ee:	a9 ae       	std	Y+57, r10	; 0x39
     4f0:	ba ae       	std	Y+58, r11	; 0x3a
     4f2:	cb ae       	std	Y+59, r12	; 0x3b
     4f4:	dc ae       	std	Y+60, r13	; 0x3c
     4f6:	a1 14       	cp	r10, r1
     4f8:	b1 04       	cpc	r11, r1
     4fa:	c1 04       	cpc	r12, r1
     4fc:	d1 04       	cpc	r13, r1
     4fe:	09 f4       	brne	.+2      	; 0x502 <KER_TR+0x11a>
     500:	3f c0       	rjmp	.+126    	; 0x580 <KER_TR+0x198>
     502:	69 ad       	ldd	r22, Y+57	; 0x39
     504:	06 2e       	mov	r0, r22
     506:	04 c0       	rjmp	.+8      	; 0x510 <KER_TR+0x128>
     508:	22 0c       	add	r2, r2
     50a:	33 1c       	adc	r3, r3
     50c:	44 1c       	adc	r4, r4
     50e:	55 1c       	adc	r5, r5
     510:	0a 94       	dec	r0
     512:	d2 f7       	brpl	.-12     	; 0x508 <KER_TR+0x120>
     514:	a4 01       	movw	r20, r8
     516:	93 01       	movw	r18, r6
     518:	06 2e       	mov	r0, r22
     51a:	04 c0       	rjmp	.+8      	; 0x524 <KER_TR+0x13c>
     51c:	22 0f       	add	r18, r18
     51e:	33 1f       	adc	r19, r19
     520:	44 1f       	adc	r20, r20
     522:	55 1f       	adc	r21, r21
     524:	0a 94       	dec	r0
     526:	d2 f7       	brpl	.-12     	; 0x51c <KER_TR+0x134>
     528:	80 e2       	ldi	r24, 0x20	; 32
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	8a 19       	sub	r24, r10
     52e:	9b 09       	sbc	r25, r11
     530:	6c 96       	adiw	r28, 0x1c	; 28
     532:	cc ac       	ldd	r12, Y+60	; 0x3c
     534:	dd ac       	ldd	r13, Y+61	; 0x3d
     536:	ee ac       	ldd	r14, Y+62	; 0x3e
     538:	ff ac       	ldd	r15, Y+63	; 0x3f
     53a:	6c 97       	sbiw	r28, 0x1c	; 28
     53c:	04 c0       	rjmp	.+8      	; 0x546 <KER_TR+0x15e>
     53e:	f6 94       	lsr	r15
     540:	e7 94       	ror	r14
     542:	d7 94       	ror	r13
     544:	c7 94       	ror	r12
     546:	8a 95       	dec	r24
     548:	d2 f7       	brpl	.-12     	; 0x53e <KER_TR+0x156>
     54a:	87 01       	movw	r16, r14
     54c:	76 01       	movw	r14, r12
     54e:	e2 2a       	or	r14, r18
     550:	f3 2a       	or	r15, r19
     552:	04 2b       	or	r16, r20
     554:	15 2b       	or	r17, r21
     556:	ed aa       	std	Y+53, r14	; 0x35
     558:	fe aa       	std	Y+54, r15	; 0x36
     55a:	0f ab       	std	Y+55, r16	; 0x37
     55c:	18 af       	std	Y+56, r17	; 0x38
     55e:	6c 96       	adiw	r28, 0x1c	; 28
     560:	8c ad       	ldd	r24, Y+60	; 0x3c
     562:	9d ad       	ldd	r25, Y+61	; 0x3d
     564:	ae ad       	ldd	r26, Y+62	; 0x3e
     566:	bf ad       	ldd	r27, Y+63	; 0x3f
     568:	6c 97       	sbiw	r28, 0x1c	; 28
     56a:	04 c0       	rjmp	.+8      	; 0x574 <KER_TR+0x18c>
     56c:	88 0f       	add	r24, r24
     56e:	99 1f       	adc	r25, r25
     570:	aa 1f       	adc	r26, r26
     572:	bb 1f       	adc	r27, r27
     574:	6a 95       	dec	r22
     576:	d2 f7       	brpl	.-12     	; 0x56c <KER_TR+0x184>
     578:	89 ab       	std	Y+49, r24	; 0x31
     57a:	9a ab       	std	Y+50, r25	; 0x32
     57c:	ab ab       	std	Y+51, r26	; 0x33
     57e:	bc ab       	std	Y+52, r27	; 0x34
     580:	32 01       	movw	r6, r4
     582:	88 24       	eor	r8, r8
     584:	99 24       	eor	r9, r9
     586:	b2 01       	movw	r22, r4
     588:	a1 01       	movw	r20, r2
     58a:	60 70       	andi	r22, 0x00	; 0
     58c:	70 70       	andi	r23, 0x00	; 0
     58e:	21 96       	adiw	r28, 0x01	; 1
     590:	4c af       	std	Y+60, r20	; 0x3c
     592:	5d af       	std	Y+61, r21	; 0x3d
     594:	6e af       	std	Y+62, r22	; 0x3e
     596:	7f af       	std	Y+63, r23	; 0x3f
     598:	21 97       	sbiw	r28, 0x01	; 1
     59a:	6d a9       	ldd	r22, Y+53	; 0x35
     59c:	7e a9       	ldd	r23, Y+54	; 0x36
     59e:	8f a9       	ldd	r24, Y+55	; 0x37
     5a0:	98 ad       	ldd	r25, Y+56	; 0x38
     5a2:	a4 01       	movw	r20, r8
     5a4:	93 01       	movw	r18, r6
     5a6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     5aa:	7b 01       	movw	r14, r22
     5ac:	8c 01       	movw	r16, r24
     5ae:	6d a9       	ldd	r22, Y+53	; 0x35
     5b0:	7e a9       	ldd	r23, Y+54	; 0x36
     5b2:	8f a9       	ldd	r24, Y+55	; 0x37
     5b4:	98 ad       	ldd	r25, Y+56	; 0x38
     5b6:	a4 01       	movw	r20, r8
     5b8:	93 01       	movw	r18, r6
     5ba:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     5be:	ca 01       	movw	r24, r20
     5c0:	b9 01       	movw	r22, r18
     5c2:	21 96       	adiw	r28, 0x01	; 1
     5c4:	2c ad       	ldd	r18, Y+60	; 0x3c
     5c6:	3d ad       	ldd	r19, Y+61	; 0x3d
     5c8:	4e ad       	ldd	r20, Y+62	; 0x3e
     5ca:	5f ad       	ldd	r21, Y+63	; 0x3f
     5cc:	21 97       	sbiw	r28, 0x01	; 1
     5ce:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     5d2:	9b 01       	movw	r18, r22
     5d4:	ac 01       	movw	r20, r24
     5d6:	87 01       	movw	r16, r14
     5d8:	ff 24       	eor	r15, r15
     5da:	ee 24       	eor	r14, r14
     5dc:	a9 a8       	ldd	r10, Y+49	; 0x31
     5de:	ba a8       	ldd	r11, Y+50	; 0x32
     5e0:	cb a8       	ldd	r12, Y+51	; 0x33
     5e2:	dc a8       	ldd	r13, Y+52	; 0x34
     5e4:	c6 01       	movw	r24, r12
     5e6:	aa 27       	eor	r26, r26
     5e8:	bb 27       	eor	r27, r27
     5ea:	57 01       	movw	r10, r14
     5ec:	68 01       	movw	r12, r16
     5ee:	a8 2a       	or	r10, r24
     5f0:	b9 2a       	or	r11, r25
     5f2:	ca 2a       	or	r12, r26
     5f4:	db 2a       	or	r13, r27
     5f6:	a2 16       	cp	r10, r18
     5f8:	b3 06       	cpc	r11, r19
     5fa:	c4 06       	cpc	r12, r20
     5fc:	d5 06       	cpc	r13, r21
     5fe:	90 f4       	brcc	.+36     	; 0x624 <KER_TR+0x23c>
     600:	a2 0c       	add	r10, r2
     602:	b3 1c       	adc	r11, r3
     604:	c4 1c       	adc	r12, r4
     606:	d5 1c       	adc	r13, r5
     608:	a2 14       	cp	r10, r2
     60a:	b3 04       	cpc	r11, r3
     60c:	c4 04       	cpc	r12, r4
     60e:	d5 04       	cpc	r13, r5
     610:	48 f0       	brcs	.+18     	; 0x624 <KER_TR+0x23c>
     612:	a2 16       	cp	r10, r18
     614:	b3 06       	cpc	r11, r19
     616:	c4 06       	cpc	r12, r20
     618:	d5 06       	cpc	r13, r21
     61a:	20 f4       	brcc	.+8      	; 0x624 <KER_TR+0x23c>
     61c:	a2 0c       	add	r10, r2
     61e:	b3 1c       	adc	r11, r3
     620:	c4 1c       	adc	r12, r4
     622:	d5 1c       	adc	r13, r5
     624:	a2 1a       	sub	r10, r18
     626:	b3 0a       	sbc	r11, r19
     628:	c4 0a       	sbc	r12, r20
     62a:	d5 0a       	sbc	r13, r21
     62c:	c6 01       	movw	r24, r12
     62e:	b5 01       	movw	r22, r10
     630:	a4 01       	movw	r20, r8
     632:	93 01       	movw	r18, r6
     634:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     638:	7b 01       	movw	r14, r22
     63a:	8c 01       	movw	r16, r24
     63c:	c6 01       	movw	r24, r12
     63e:	b5 01       	movw	r22, r10
     640:	a4 01       	movw	r20, r8
     642:	93 01       	movw	r18, r6
     644:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     648:	ca 01       	movw	r24, r20
     64a:	b9 01       	movw	r22, r18
     64c:	21 96       	adiw	r28, 0x01	; 1
     64e:	2c ad       	ldd	r18, Y+60	; 0x3c
     650:	3d ad       	ldd	r19, Y+61	; 0x3d
     652:	4e ad       	ldd	r20, Y+62	; 0x3e
     654:	5f ad       	ldd	r21, Y+63	; 0x3f
     656:	21 97       	sbiw	r28, 0x01	; 1
     658:	ba c1       	rjmp	.+884    	; 0x9ce <__stack+0xcf>
     65a:	21 14       	cp	r2, r1
     65c:	31 04       	cpc	r3, r1
     65e:	41 04       	cpc	r4, r1
     660:	51 04       	cpc	r5, r1
     662:	71 f4       	brne	.+28     	; 0x680 <KER_TR+0x298>
     664:	61 e0       	ldi	r22, 0x01	; 1
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	40 e0       	ldi	r20, 0x00	; 0
     672:	50 e0       	ldi	r21, 0x00	; 0
     674:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     678:	c9 01       	movw	r24, r18
     67a:	da 01       	movw	r26, r20
     67c:	1c 01       	movw	r2, r24
     67e:	2d 01       	movw	r4, r26
     680:	00 e0       	ldi	r16, 0x00	; 0
     682:	20 16       	cp	r2, r16
     684:	00 e0       	ldi	r16, 0x00	; 0
     686:	30 06       	cpc	r3, r16
     688:	01 e0       	ldi	r16, 0x01	; 1
     68a:	40 06       	cpc	r4, r16
     68c:	00 e0       	ldi	r16, 0x00	; 0
     68e:	50 06       	cpc	r5, r16
     690:	88 f4       	brcc	.+34     	; 0x6b4 <KER_TR+0x2cc>
     692:	1f ef       	ldi	r17, 0xFF	; 255
     694:	21 16       	cp	r2, r17
     696:	31 04       	cpc	r3, r1
     698:	41 04       	cpc	r4, r1
     69a:	51 04       	cpc	r5, r1
     69c:	39 f0       	breq	.+14     	; 0x6ac <KER_TR+0x2c4>
     69e:	30 f0       	brcs	.+12     	; 0x6ac <KER_TR+0x2c4>
     6a0:	68 e0       	ldi	r22, 0x08	; 8
     6a2:	e6 2e       	mov	r14, r22
     6a4:	f1 2c       	mov	r15, r1
     6a6:	01 2d       	mov	r16, r1
     6a8:	11 2d       	mov	r17, r1
     6aa:	18 c0       	rjmp	.+48     	; 0x6dc <KER_TR+0x2f4>
     6ac:	ee 24       	eor	r14, r14
     6ae:	ff 24       	eor	r15, r15
     6b0:	87 01       	movw	r16, r14
     6b2:	14 c0       	rjmp	.+40     	; 0x6dc <KER_TR+0x2f4>
     6b4:	40 e0       	ldi	r20, 0x00	; 0
     6b6:	24 16       	cp	r2, r20
     6b8:	40 e0       	ldi	r20, 0x00	; 0
     6ba:	34 06       	cpc	r3, r20
     6bc:	40 e0       	ldi	r20, 0x00	; 0
     6be:	44 06       	cpc	r4, r20
     6c0:	41 e0       	ldi	r20, 0x01	; 1
     6c2:	54 06       	cpc	r5, r20
     6c4:	30 f0       	brcs	.+12     	; 0x6d2 <KER_TR+0x2ea>
     6c6:	58 e1       	ldi	r21, 0x18	; 24
     6c8:	e5 2e       	mov	r14, r21
     6ca:	f1 2c       	mov	r15, r1
     6cc:	01 2d       	mov	r16, r1
     6ce:	11 2d       	mov	r17, r1
     6d0:	05 c0       	rjmp	.+10     	; 0x6dc <KER_TR+0x2f4>
     6d2:	40 e1       	ldi	r20, 0x10	; 16
     6d4:	e4 2e       	mov	r14, r20
     6d6:	f1 2c       	mov	r15, r1
     6d8:	01 2d       	mov	r16, r1
     6da:	11 2d       	mov	r17, r1
     6dc:	d2 01       	movw	r26, r4
     6de:	c1 01       	movw	r24, r2
     6e0:	0e 2c       	mov	r0, r14
     6e2:	04 c0       	rjmp	.+8      	; 0x6ec <KER_TR+0x304>
     6e4:	b6 95       	lsr	r27
     6e6:	a7 95       	ror	r26
     6e8:	97 95       	ror	r25
     6ea:	87 95       	ror	r24
     6ec:	0a 94       	dec	r0
     6ee:	d2 f7       	brpl	.-12     	; 0x6e4 <KER_TR+0x2fc>
     6f0:	80 50       	subi	r24, 0x00	; 0
     6f2:	9f 4f       	sbci	r25, 0xFF	; 255
     6f4:	dc 01       	movw	r26, r24
     6f6:	2c 91       	ld	r18, X
     6f8:	30 e2       	ldi	r19, 0x20	; 32
     6fa:	a3 2e       	mov	r10, r19
     6fc:	b1 2c       	mov	r11, r1
     6fe:	c1 2c       	mov	r12, r1
     700:	d1 2c       	mov	r13, r1
     702:	d6 01       	movw	r26, r12
     704:	c5 01       	movw	r24, r10
     706:	8e 19       	sub	r24, r14
     708:	9f 09       	sbc	r25, r15
     70a:	a0 0b       	sbc	r26, r16
     70c:	b1 0b       	sbc	r27, r17
     70e:	7c 01       	movw	r14, r24
     710:	8d 01       	movw	r16, r26
     712:	e2 1a       	sub	r14, r18
     714:	f1 08       	sbc	r15, r1
     716:	01 09       	sbc	r16, r1
     718:	11 09       	sbc	r17, r1
     71a:	e9 ae       	std	Y+57, r14	; 0x39
     71c:	fa ae       	std	Y+58, r15	; 0x3a
     71e:	0b af       	std	Y+59, r16	; 0x3b
     720:	1c af       	std	Y+60, r17	; 0x3c
     722:	e1 14       	cp	r14, r1
     724:	f1 04       	cpc	r15, r1
     726:	01 05       	cpc	r16, r1
     728:	11 05       	cpc	r17, r1
     72a:	39 f4       	brne	.+14     	; 0x73a <KER_TR+0x352>
     72c:	64 01       	movw	r12, r8
     72e:	53 01       	movw	r10, r6
     730:	a2 18       	sub	r10, r2
     732:	b3 08       	sbc	r11, r3
     734:	c4 08       	sbc	r12, r4
     736:	d5 08       	sbc	r13, r5
     738:	e2 c0       	rjmp	.+452    	; 0x8fe <KER_TR+0x516>
     73a:	f9 ac       	ldd	r15, Y+57	; 0x39
     73c:	68 96       	adiw	r28, 0x18	; 24
     73e:	ff ae       	std	Y+63, r15	; 0x3f
     740:	68 97       	sbiw	r28, 0x18	; 24
     742:	0f 2c       	mov	r0, r15
     744:	04 c0       	rjmp	.+8      	; 0x74e <KER_TR+0x366>
     746:	22 0c       	add	r2, r2
     748:	33 1c       	adc	r3, r3
     74a:	44 1c       	adc	r4, r4
     74c:	55 1c       	adc	r5, r5
     74e:	0a 94       	dec	r0
     750:	d2 f7       	brpl	.-12     	; 0x746 <KER_TR+0x35e>
     752:	8a 2d       	mov	r24, r10
     754:	8f 19       	sub	r24, r15
     756:	64 01       	movw	r12, r8
     758:	53 01       	movw	r10, r6
     75a:	08 2e       	mov	r0, r24
     75c:	04 c0       	rjmp	.+8      	; 0x766 <KER_TR+0x37e>
     75e:	d6 94       	lsr	r13
     760:	c7 94       	ror	r12
     762:	b7 94       	ror	r11
     764:	a7 94       	ror	r10
     766:	0a 94       	dec	r0
     768:	d2 f7       	brpl	.-12     	; 0x75e <KER_TR+0x376>
     76a:	a4 01       	movw	r20, r8
     76c:	93 01       	movw	r18, r6
     76e:	04 c0       	rjmp	.+8      	; 0x778 <KER_TR+0x390>
     770:	22 0f       	add	r18, r18
     772:	33 1f       	adc	r19, r19
     774:	44 1f       	adc	r20, r20
     776:	55 1f       	adc	r21, r21
     778:	fa 94       	dec	r15
     77a:	d2 f7       	brpl	.-12     	; 0x770 <KER_TR+0x388>
     77c:	6c 96       	adiw	r28, 0x1c	; 28
     77e:	6c ac       	ldd	r6, Y+60	; 0x3c
     780:	7d ac       	ldd	r7, Y+61	; 0x3d
     782:	8e ac       	ldd	r8, Y+62	; 0x3e
     784:	9f ac       	ldd	r9, Y+63	; 0x3f
     786:	6c 97       	sbiw	r28, 0x1c	; 28
     788:	04 c0       	rjmp	.+8      	; 0x792 <KER_TR+0x3aa>
     78a:	96 94       	lsr	r9
     78c:	87 94       	ror	r8
     78e:	77 94       	ror	r7
     790:	67 94       	ror	r6
     792:	8a 95       	dec	r24
     794:	d2 f7       	brpl	.-12     	; 0x78a <KER_TR+0x3a2>
     796:	84 01       	movw	r16, r8
     798:	73 01       	movw	r14, r6
     79a:	e2 2a       	or	r14, r18
     79c:	f3 2a       	or	r15, r19
     79e:	04 2b       	or	r16, r20
     7a0:	15 2b       	or	r17, r21
     7a2:	ed a6       	std	Y+45, r14	; 0x2d
     7a4:	fe a6       	std	Y+46, r15	; 0x2e
     7a6:	0f a7       	std	Y+47, r16	; 0x2f
     7a8:	18 ab       	std	Y+48, r17	; 0x30
     7aa:	32 01       	movw	r6, r4
     7ac:	88 24       	eor	r8, r8
     7ae:	99 24       	eor	r9, r9
     7b0:	b2 01       	movw	r22, r4
     7b2:	a1 01       	movw	r20, r2
     7b4:	60 70       	andi	r22, 0x00	; 0
     7b6:	70 70       	andi	r23, 0x00	; 0
     7b8:	25 96       	adiw	r28, 0x05	; 5
     7ba:	4c af       	std	Y+60, r20	; 0x3c
     7bc:	5d af       	std	Y+61, r21	; 0x3d
     7be:	6e af       	std	Y+62, r22	; 0x3e
     7c0:	7f af       	std	Y+63, r23	; 0x3f
     7c2:	25 97       	sbiw	r28, 0x05	; 5
     7c4:	c6 01       	movw	r24, r12
     7c6:	b5 01       	movw	r22, r10
     7c8:	a4 01       	movw	r20, r8
     7ca:	93 01       	movw	r18, r6
     7cc:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     7d0:	7b 01       	movw	r14, r22
     7d2:	8c 01       	movw	r16, r24
     7d4:	c6 01       	movw	r24, r12
     7d6:	b5 01       	movw	r22, r10
     7d8:	a4 01       	movw	r20, r8
     7da:	93 01       	movw	r18, r6
     7dc:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     7e0:	ca 01       	movw	r24, r20
     7e2:	b9 01       	movw	r22, r18
     7e4:	25 96       	adiw	r28, 0x05	; 5
     7e6:	2c ad       	ldd	r18, Y+60	; 0x3c
     7e8:	3d ad       	ldd	r19, Y+61	; 0x3d
     7ea:	4e ad       	ldd	r20, Y+62	; 0x3e
     7ec:	5f ad       	ldd	r21, Y+63	; 0x3f
     7ee:	25 97       	sbiw	r28, 0x05	; 5
     7f0:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     7f4:	9b 01       	movw	r18, r22
     7f6:	ac 01       	movw	r20, r24
     7f8:	87 01       	movw	r16, r14
     7fa:	ff 24       	eor	r15, r15
     7fc:	ee 24       	eor	r14, r14
     7fe:	ad a4       	ldd	r10, Y+45	; 0x2d
     800:	be a4       	ldd	r11, Y+46	; 0x2e
     802:	cf a4       	ldd	r12, Y+47	; 0x2f
     804:	d8 a8       	ldd	r13, Y+48	; 0x30
     806:	c6 01       	movw	r24, r12
     808:	aa 27       	eor	r26, r26
     80a:	bb 27       	eor	r27, r27
     80c:	5c 01       	movw	r10, r24
     80e:	6d 01       	movw	r12, r26
     810:	ae 28       	or	r10, r14
     812:	bf 28       	or	r11, r15
     814:	c0 2a       	or	r12, r16
     816:	d1 2a       	or	r13, r17
     818:	a2 16       	cp	r10, r18
     81a:	b3 06       	cpc	r11, r19
     81c:	c4 06       	cpc	r12, r20
     81e:	d5 06       	cpc	r13, r21
     820:	90 f4       	brcc	.+36     	; 0x846 <KER_TR+0x45e>
     822:	a2 0c       	add	r10, r2
     824:	b3 1c       	adc	r11, r3
     826:	c4 1c       	adc	r12, r4
     828:	d5 1c       	adc	r13, r5
     82a:	a2 14       	cp	r10, r2
     82c:	b3 04       	cpc	r11, r3
     82e:	c4 04       	cpc	r12, r4
     830:	d5 04       	cpc	r13, r5
     832:	48 f0       	brcs	.+18     	; 0x846 <KER_TR+0x45e>
     834:	a2 16       	cp	r10, r18
     836:	b3 06       	cpc	r11, r19
     838:	c4 06       	cpc	r12, r20
     83a:	d5 06       	cpc	r13, r21
     83c:	20 f4       	brcc	.+8      	; 0x846 <KER_TR+0x45e>
     83e:	a2 0c       	add	r10, r2
     840:	b3 1c       	adc	r11, r3
     842:	c4 1c       	adc	r12, r4
     844:	d5 1c       	adc	r13, r5
     846:	a2 1a       	sub	r10, r18
     848:	b3 0a       	sbc	r11, r19
     84a:	c4 0a       	sbc	r12, r20
     84c:	d5 0a       	sbc	r13, r21
     84e:	c6 01       	movw	r24, r12
     850:	b5 01       	movw	r22, r10
     852:	a4 01       	movw	r20, r8
     854:	93 01       	movw	r18, r6
     856:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     85a:	7b 01       	movw	r14, r22
     85c:	8c 01       	movw	r16, r24
     85e:	c6 01       	movw	r24, r12
     860:	b5 01       	movw	r22, r10
     862:	a4 01       	movw	r20, r8
     864:	93 01       	movw	r18, r6
     866:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     86a:	ca 01       	movw	r24, r20
     86c:	b9 01       	movw	r22, r18
     86e:	25 96       	adiw	r28, 0x05	; 5
     870:	2c ad       	ldd	r18, Y+60	; 0x3c
     872:	3d ad       	ldd	r19, Y+61	; 0x3d
     874:	4e ad       	ldd	r20, Y+62	; 0x3e
     876:	5f ad       	ldd	r21, Y+63	; 0x3f
     878:	25 97       	sbiw	r28, 0x05	; 5
     87a:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     87e:	9b 01       	movw	r18, r22
     880:	ac 01       	movw	r20, r24
     882:	87 01       	movw	r16, r14
     884:	ff 24       	eor	r15, r15
     886:	ee 24       	eor	r14, r14
     888:	8d a5       	ldd	r24, Y+45	; 0x2d
     88a:	9e a5       	ldd	r25, Y+46	; 0x2e
     88c:	af a5       	ldd	r26, Y+47	; 0x2f
     88e:	b8 a9       	ldd	r27, Y+48	; 0x30
     890:	a0 70       	andi	r26, 0x00	; 0
     892:	b0 70       	andi	r27, 0x00	; 0
     894:	57 01       	movw	r10, r14
     896:	68 01       	movw	r12, r16
     898:	a8 2a       	or	r10, r24
     89a:	b9 2a       	or	r11, r25
     89c:	ca 2a       	or	r12, r26
     89e:	db 2a       	or	r13, r27
     8a0:	a2 16       	cp	r10, r18
     8a2:	b3 06       	cpc	r11, r19
     8a4:	c4 06       	cpc	r12, r20
     8a6:	d5 06       	cpc	r13, r21
     8a8:	90 f4       	brcc	.+36     	; 0x8ce <KER_TR+0x4e6>
     8aa:	a2 0c       	add	r10, r2
     8ac:	b3 1c       	adc	r11, r3
     8ae:	c4 1c       	adc	r12, r4
     8b0:	d5 1c       	adc	r13, r5
     8b2:	a2 14       	cp	r10, r2
     8b4:	b3 04       	cpc	r11, r3
     8b6:	c4 04       	cpc	r12, r4
     8b8:	d5 04       	cpc	r13, r5
     8ba:	48 f0       	brcs	.+18     	; 0x8ce <KER_TR+0x4e6>
     8bc:	a2 16       	cp	r10, r18
     8be:	b3 06       	cpc	r11, r19
     8c0:	c4 06       	cpc	r12, r20
     8c2:	d5 06       	cpc	r13, r21
     8c4:	20 f4       	brcc	.+8      	; 0x8ce <KER_TR+0x4e6>
     8c6:	a2 0c       	add	r10, r2
     8c8:	b3 1c       	adc	r11, r3
     8ca:	c4 1c       	adc	r12, r4
     8cc:	d5 1c       	adc	r13, r5
     8ce:	6c 96       	adiw	r28, 0x1c	; 28
     8d0:	ec ac       	ldd	r14, Y+60	; 0x3c
     8d2:	fd ac       	ldd	r15, Y+61	; 0x3d
     8d4:	0e ad       	ldd	r16, Y+62	; 0x3e
     8d6:	1f ad       	ldd	r17, Y+63	; 0x3f
     8d8:	6c 97       	sbiw	r28, 0x1c	; 28
     8da:	68 96       	adiw	r28, 0x18	; 24
     8dc:	0f ac       	ldd	r0, Y+63	; 0x3f
     8de:	68 97       	sbiw	r28, 0x18	; 24
     8e0:	04 c0       	rjmp	.+8      	; 0x8ea <KER_TR+0x502>
     8e2:	ee 0c       	add	r14, r14
     8e4:	ff 1c       	adc	r15, r15
     8e6:	00 1f       	adc	r16, r16
     8e8:	11 1f       	adc	r17, r17
     8ea:	0a 94       	dec	r0
     8ec:	d2 f7       	brpl	.-12     	; 0x8e2 <KER_TR+0x4fa>
     8ee:	e9 aa       	std	Y+49, r14	; 0x31
     8f0:	fa aa       	std	Y+50, r15	; 0x32
     8f2:	0b ab       	std	Y+51, r16	; 0x33
     8f4:	1c ab       	std	Y+52, r17	; 0x34
     8f6:	a2 1a       	sub	r10, r18
     8f8:	b3 0a       	sbc	r11, r19
     8fa:	c4 0a       	sbc	r12, r20
     8fc:	d5 0a       	sbc	r13, r21
     8fe:	32 01       	movw	r6, r4
     900:	88 24       	eor	r8, r8
     902:	99 24       	eor	r9, r9
     904:	b2 01       	movw	r22, r4
     906:	a1 01       	movw	r20, r2
     908:	60 70       	andi	r22, 0x00	; 0
     90a:	70 70       	andi	r23, 0x00	; 0
     90c:	29 96       	adiw	r28, 0x09	; 9
     90e:	4c af       	std	Y+60, r20	; 0x3c
     910:	5d af       	std	Y+61, r21	; 0x3d
     912:	6e af       	std	Y+62, r22	; 0x3e
     914:	7f af       	std	Y+63, r23	; 0x3f
     916:	29 97       	sbiw	r28, 0x09	; 9
     918:	c6 01       	movw	r24, r12
     91a:	b5 01       	movw	r22, r10
     91c:	a4 01       	movw	r20, r8
     91e:	93 01       	movw	r18, r6
     920:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     924:	7b 01       	movw	r14, r22
     926:	8c 01       	movw	r16, r24
     928:	c6 01       	movw	r24, r12
     92a:	b5 01       	movw	r22, r10
     92c:	a4 01       	movw	r20, r8
     92e:	93 01       	movw	r18, r6
     930:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     934:	ca 01       	movw	r24, r20
     936:	b9 01       	movw	r22, r18
     938:	29 96       	adiw	r28, 0x09	; 9
     93a:	2c ad       	ldd	r18, Y+60	; 0x3c
     93c:	3d ad       	ldd	r19, Y+61	; 0x3d
     93e:	4e ad       	ldd	r20, Y+62	; 0x3e
     940:	5f ad       	ldd	r21, Y+63	; 0x3f
     942:	29 97       	sbiw	r28, 0x09	; 9
     944:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     948:	9b 01       	movw	r18, r22
     94a:	ac 01       	movw	r20, r24
     94c:	87 01       	movw	r16, r14
     94e:	ff 24       	eor	r15, r15
     950:	ee 24       	eor	r14, r14
     952:	a9 a8       	ldd	r10, Y+49	; 0x31
     954:	ba a8       	ldd	r11, Y+50	; 0x32
     956:	cb a8       	ldd	r12, Y+51	; 0x33
     958:	dc a8       	ldd	r13, Y+52	; 0x34
     95a:	c6 01       	movw	r24, r12
     95c:	aa 27       	eor	r26, r26
     95e:	bb 27       	eor	r27, r27
     960:	57 01       	movw	r10, r14
     962:	68 01       	movw	r12, r16
     964:	a8 2a       	or	r10, r24
     966:	b9 2a       	or	r11, r25
     968:	ca 2a       	or	r12, r26
     96a:	db 2a       	or	r13, r27
     96c:	a2 16       	cp	r10, r18
     96e:	b3 06       	cpc	r11, r19
     970:	c4 06       	cpc	r12, r20
     972:	d5 06       	cpc	r13, r21
     974:	90 f4       	brcc	.+36     	; 0x99a <__stack+0x9b>
     976:	a2 0c       	add	r10, r2
     978:	b3 1c       	adc	r11, r3
     97a:	c4 1c       	adc	r12, r4
     97c:	d5 1c       	adc	r13, r5
     97e:	a2 14       	cp	r10, r2
     980:	b3 04       	cpc	r11, r3
     982:	c4 04       	cpc	r12, r4
     984:	d5 04       	cpc	r13, r5
     986:	48 f0       	brcs	.+18     	; 0x99a <__stack+0x9b>
     988:	a2 16       	cp	r10, r18
     98a:	b3 06       	cpc	r11, r19
     98c:	c4 06       	cpc	r12, r20
     98e:	d5 06       	cpc	r13, r21
     990:	20 f4       	brcc	.+8      	; 0x99a <__stack+0x9b>
     992:	a2 0c       	add	r10, r2
     994:	b3 1c       	adc	r11, r3
     996:	c4 1c       	adc	r12, r4
     998:	d5 1c       	adc	r13, r5
     99a:	a2 1a       	sub	r10, r18
     99c:	b3 0a       	sbc	r11, r19
     99e:	c4 0a       	sbc	r12, r20
     9a0:	d5 0a       	sbc	r13, r21
     9a2:	c6 01       	movw	r24, r12
     9a4:	b5 01       	movw	r22, r10
     9a6:	a4 01       	movw	r20, r8
     9a8:	93 01       	movw	r18, r6
     9aa:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     9ae:	7b 01       	movw	r14, r22
     9b0:	8c 01       	movw	r16, r24
     9b2:	c6 01       	movw	r24, r12
     9b4:	b5 01       	movw	r22, r10
     9b6:	a4 01       	movw	r20, r8
     9b8:	93 01       	movw	r18, r6
     9ba:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     9be:	ca 01       	movw	r24, r20
     9c0:	b9 01       	movw	r22, r18
     9c2:	29 96       	adiw	r28, 0x09	; 9
     9c4:	2c ad       	ldd	r18, Y+60	; 0x3c
     9c6:	3d ad       	ldd	r19, Y+61	; 0x3d
     9c8:	4e ad       	ldd	r20, Y+62	; 0x3e
     9ca:	5f ad       	ldd	r21, Y+63	; 0x3f
     9cc:	29 97       	sbiw	r28, 0x09	; 9
     9ce:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     9d2:	9b 01       	movw	r18, r22
     9d4:	ac 01       	movw	r20, r24
     9d6:	87 01       	movw	r16, r14
     9d8:	ff 24       	eor	r15, r15
     9da:	ee 24       	eor	r14, r14
     9dc:	89 a9       	ldd	r24, Y+49	; 0x31
     9de:	9a a9       	ldd	r25, Y+50	; 0x32
     9e0:	ab a9       	ldd	r26, Y+51	; 0x33
     9e2:	bc a9       	ldd	r27, Y+52	; 0x34
     9e4:	a0 70       	andi	r26, 0x00	; 0
     9e6:	b0 70       	andi	r27, 0x00	; 0
     9e8:	e8 2a       	or	r14, r24
     9ea:	f9 2a       	or	r15, r25
     9ec:	0a 2b       	or	r16, r26
     9ee:	1b 2b       	or	r17, r27
     9f0:	e2 16       	cp	r14, r18
     9f2:	f3 06       	cpc	r15, r19
     9f4:	04 07       	cpc	r16, r20
     9f6:	15 07       	cpc	r17, r21
     9f8:	90 f4       	brcc	.+36     	; 0xa1e <__stack+0x11f>
     9fa:	e2 0c       	add	r14, r2
     9fc:	f3 1c       	adc	r15, r3
     9fe:	04 1d       	adc	r16, r4
     a00:	15 1d       	adc	r17, r5
     a02:	e2 14       	cp	r14, r2
     a04:	f3 04       	cpc	r15, r3
     a06:	04 05       	cpc	r16, r4
     a08:	15 05       	cpc	r17, r5
     a0a:	48 f0       	brcs	.+18     	; 0xa1e <__stack+0x11f>
     a0c:	e2 16       	cp	r14, r18
     a0e:	f3 06       	cpc	r15, r19
     a10:	04 07       	cpc	r16, r20
     a12:	15 07       	cpc	r17, r21
     a14:	20 f4       	brcc	.+8      	; 0xa1e <__stack+0x11f>
     a16:	e2 0c       	add	r14, r2
     a18:	f3 1c       	adc	r15, r3
     a1a:	04 1d       	adc	r16, r4
     a1c:	15 1d       	adc	r17, r5
     a1e:	e2 1a       	sub	r14, r18
     a20:	f3 0a       	sbc	r15, r19
     a22:	04 0b       	sbc	r16, r20
     a24:	15 0b       	sbc	r17, r21
     a26:	d8 01       	movw	r26, r16
     a28:	c7 01       	movw	r24, r14
     a2a:	09 ac       	ldd	r0, Y+57	; 0x39
     a2c:	04 c0       	rjmp	.+8      	; 0xa36 <__stack+0x137>
     a2e:	b6 95       	lsr	r27
     a30:	a7 95       	ror	r26
     a32:	97 95       	ror	r25
     a34:	87 95       	ror	r24
     a36:	0a 94       	dec	r0
     a38:	d2 f7       	brpl	.-12     	; 0xa2e <__stack+0x12f>
     a3a:	89 8b       	std	Y+17, r24	; 0x11
     a3c:	9a 8b       	std	Y+18, r25	; 0x12
     a3e:	ab 8b       	std	Y+19, r26	; 0x13
     a40:	bc 8b       	std	Y+20, r27	; 0x14
     a42:	1d 8a       	std	Y+21, r1	; 0x15
     a44:	1e 8a       	std	Y+22, r1	; 0x16
     a46:	1f 8a       	std	Y+23, r1	; 0x17
     a48:	18 8e       	std	Y+24, r1	; 0x18
     a4a:	28 2f       	mov	r18, r24
     a4c:	3a 89       	ldd	r19, Y+18	; 0x12
     a4e:	4b 89       	ldd	r20, Y+19	; 0x13
     a50:	5c 89       	ldd	r21, Y+20	; 0x14
     a52:	6d 89       	ldd	r22, Y+21	; 0x15
     a54:	0c c3       	rjmp	.+1560   	; 0x106e <__stack+0x76f>
     a56:	6a 14       	cp	r6, r10
     a58:	7b 04       	cpc	r7, r11
     a5a:	8c 04       	cpc	r8, r12
     a5c:	9d 04       	cpc	r9, r13
     a5e:	08 f4       	brcc	.+2      	; 0xa62 <__stack+0x163>
     a60:	09 c3       	rjmp	.+1554   	; 0x1074 <__stack+0x775>
     a62:	00 e0       	ldi	r16, 0x00	; 0
     a64:	a0 16       	cp	r10, r16
     a66:	00 e0       	ldi	r16, 0x00	; 0
     a68:	b0 06       	cpc	r11, r16
     a6a:	01 e0       	ldi	r16, 0x01	; 1
     a6c:	c0 06       	cpc	r12, r16
     a6e:	00 e0       	ldi	r16, 0x00	; 0
     a70:	d0 06       	cpc	r13, r16
     a72:	88 f4       	brcc	.+34     	; 0xa96 <__stack+0x197>
     a74:	1f ef       	ldi	r17, 0xFF	; 255
     a76:	a1 16       	cp	r10, r17
     a78:	b1 04       	cpc	r11, r1
     a7a:	c1 04       	cpc	r12, r1
     a7c:	d1 04       	cpc	r13, r1
     a7e:	39 f0       	breq	.+14     	; 0xa8e <__stack+0x18f>
     a80:	30 f0       	brcs	.+12     	; 0xa8e <__stack+0x18f>
     a82:	28 e0       	ldi	r18, 0x08	; 8
     a84:	e2 2e       	mov	r14, r18
     a86:	f1 2c       	mov	r15, r1
     a88:	01 2d       	mov	r16, r1
     a8a:	11 2d       	mov	r17, r1
     a8c:	18 c0       	rjmp	.+48     	; 0xabe <__stack+0x1bf>
     a8e:	ee 24       	eor	r14, r14
     a90:	ff 24       	eor	r15, r15
     a92:	87 01       	movw	r16, r14
     a94:	14 c0       	rjmp	.+40     	; 0xabe <__stack+0x1bf>
     a96:	40 e0       	ldi	r20, 0x00	; 0
     a98:	a4 16       	cp	r10, r20
     a9a:	40 e0       	ldi	r20, 0x00	; 0
     a9c:	b4 06       	cpc	r11, r20
     a9e:	40 e0       	ldi	r20, 0x00	; 0
     aa0:	c4 06       	cpc	r12, r20
     aa2:	41 e0       	ldi	r20, 0x01	; 1
     aa4:	d4 06       	cpc	r13, r20
     aa6:	30 f0       	brcs	.+12     	; 0xab4 <__stack+0x1b5>
     aa8:	98 e1       	ldi	r25, 0x18	; 24
     aaa:	e9 2e       	mov	r14, r25
     aac:	f1 2c       	mov	r15, r1
     aae:	01 2d       	mov	r16, r1
     ab0:	11 2d       	mov	r17, r1
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__stack+0x1bf>
     ab4:	80 e1       	ldi	r24, 0x10	; 16
     ab6:	e8 2e       	mov	r14, r24
     ab8:	f1 2c       	mov	r15, r1
     aba:	01 2d       	mov	r16, r1
     abc:	11 2d       	mov	r17, r1
     abe:	d6 01       	movw	r26, r12
     ac0:	c5 01       	movw	r24, r10
     ac2:	0e 2c       	mov	r0, r14
     ac4:	04 c0       	rjmp	.+8      	; 0xace <__stack+0x1cf>
     ac6:	b6 95       	lsr	r27
     ac8:	a7 95       	ror	r26
     aca:	97 95       	ror	r25
     acc:	87 95       	ror	r24
     ace:	0a 94       	dec	r0
     ad0:	d2 f7       	brpl	.-12     	; 0xac6 <__stack+0x1c7>
     ad2:	80 50       	subi	r24, 0x00	; 0
     ad4:	9f 4f       	sbci	r25, 0xFF	; 255
     ad6:	dc 01       	movw	r26, r24
     ad8:	2c 91       	ld	r18, X
     ada:	80 e2       	ldi	r24, 0x20	; 32
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	a0 e0       	ldi	r26, 0x00	; 0
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	8e 19       	sub	r24, r14
     ae4:	9f 09       	sbc	r25, r15
     ae6:	a0 0b       	sbc	r26, r16
     ae8:	b1 0b       	sbc	r27, r17
     aea:	82 1b       	sub	r24, r18
     aec:	91 09       	sbc	r25, r1
     aee:	a1 09       	sbc	r26, r1
     af0:	b1 09       	sbc	r27, r1
     af2:	00 97       	sbiw	r24, 0x00	; 0
     af4:	a1 05       	cpc	r26, r1
     af6:	b1 05       	cpc	r27, r1
     af8:	09 f0       	breq	.+2      	; 0xafc <__stack+0x1fd>
     afa:	4f c0       	rjmp	.+158    	; 0xb9a <__stack+0x29b>
     afc:	a6 14       	cp	r10, r6
     afe:	b7 04       	cpc	r11, r7
     b00:	c8 04       	cpc	r12, r8
     b02:	d9 04       	cpc	r13, r9
     b04:	58 f0       	brcs	.+22     	; 0xb1c <__stack+0x21d>
     b06:	6c 96       	adiw	r28, 0x1c	; 28
     b08:	ec ac       	ldd	r14, Y+60	; 0x3c
     b0a:	fd ac       	ldd	r15, Y+61	; 0x3d
     b0c:	0e ad       	ldd	r16, Y+62	; 0x3e
     b0e:	1f ad       	ldd	r17, Y+63	; 0x3f
     b10:	6c 97       	sbiw	r28, 0x1c	; 28
     b12:	e2 14       	cp	r14, r2
     b14:	f3 04       	cpc	r15, r3
     b16:	04 05       	cpc	r16, r4
     b18:	15 05       	cpc	r17, r5
     b1a:	68 f1       	brcs	.+90     	; 0xb76 <__stack+0x277>
     b1c:	6c 96       	adiw	r28, 0x1c	; 28
     b1e:	ec ac       	ldd	r14, Y+60	; 0x3c
     b20:	fd ac       	ldd	r15, Y+61	; 0x3d
     b22:	0e ad       	ldd	r16, Y+62	; 0x3e
     b24:	1f ad       	ldd	r17, Y+63	; 0x3f
     b26:	6c 97       	sbiw	r28, 0x1c	; 28
     b28:	e2 18       	sub	r14, r2
     b2a:	f3 08       	sbc	r15, r3
     b2c:	04 09       	sbc	r16, r4
     b2e:	15 09       	sbc	r17, r5
     b30:	a4 01       	movw	r20, r8
     b32:	93 01       	movw	r18, r6
     b34:	2a 19       	sub	r18, r10
     b36:	3b 09       	sbc	r19, r11
     b38:	4c 09       	sbc	r20, r12
     b3a:	5d 09       	sbc	r21, r13
     b3c:	aa 24       	eor	r10, r10
     b3e:	bb 24       	eor	r11, r11
     b40:	65 01       	movw	r12, r10
     b42:	6c 96       	adiw	r28, 0x1c	; 28
     b44:	6c ad       	ldd	r22, Y+60	; 0x3c
     b46:	7d ad       	ldd	r23, Y+61	; 0x3d
     b48:	8e ad       	ldd	r24, Y+62	; 0x3e
     b4a:	9f ad       	ldd	r25, Y+63	; 0x3f
     b4c:	6c 97       	sbiw	r28, 0x1c	; 28
     b4e:	6e 15       	cp	r22, r14
     b50:	7f 05       	cpc	r23, r15
     b52:	80 07       	cpc	r24, r16
     b54:	91 07       	cpc	r25, r17
     b56:	28 f4       	brcc	.+10     	; 0xb62 <__stack+0x263>
     b58:	b1 e0       	ldi	r27, 0x01	; 1
     b5a:	ab 2e       	mov	r10, r27
     b5c:	b1 2c       	mov	r11, r1
     b5e:	c1 2c       	mov	r12, r1
     b60:	d1 2c       	mov	r13, r1
     b62:	da 01       	movw	r26, r20
     b64:	c9 01       	movw	r24, r18
     b66:	8a 19       	sub	r24, r10
     b68:	9b 09       	sbc	r25, r11
     b6a:	ac 09       	sbc	r26, r12
     b6c:	bd 09       	sbc	r27, r13
     b6e:	8d ab       	std	Y+53, r24	; 0x35
     b70:	9e ab       	std	Y+54, r25	; 0x36
     b72:	af ab       	std	Y+55, r26	; 0x37
     b74:	b8 af       	std	Y+56, r27	; 0x38
     b76:	e9 8a       	std	Y+17, r14	; 0x11
     b78:	fa 8a       	std	Y+18, r15	; 0x12
     b7a:	0b 8b       	std	Y+19, r16	; 0x13
     b7c:	1c 8b       	std	Y+20, r17	; 0x14
     b7e:	6d a8       	ldd	r6, Y+53	; 0x35
     b80:	7e a8       	ldd	r7, Y+54	; 0x36
     b82:	8f a8       	ldd	r8, Y+55	; 0x37
     b84:	98 ac       	ldd	r9, Y+56	; 0x38
     b86:	6d 8a       	std	Y+21, r6	; 0x15
     b88:	7e 8a       	std	Y+22, r7	; 0x16
     b8a:	8f 8a       	std	Y+23, r8	; 0x17
     b8c:	98 8e       	std	Y+24, r9	; 0x18
     b8e:	2e 2d       	mov	r18, r14
     b90:	3a 89       	ldd	r19, Y+18	; 0x12
     b92:	4b 89       	ldd	r20, Y+19	; 0x13
     b94:	5c 89       	ldd	r21, Y+20	; 0x14
     b96:	6d a9       	ldd	r22, Y+53	; 0x35
     b98:	6a c2       	rjmp	.+1236   	; 0x106e <__stack+0x76f>
     b9a:	67 96       	adiw	r28, 0x17	; 23
     b9c:	8f af       	std	Y+63, r24	; 0x3f
     b9e:	67 97       	sbiw	r28, 0x17	; 23
     ba0:	a6 01       	movw	r20, r12
     ba2:	95 01       	movw	r18, r10
     ba4:	08 2e       	mov	r0, r24
     ba6:	04 c0       	rjmp	.+8      	; 0xbb0 <__stack+0x2b1>
     ba8:	22 0f       	add	r18, r18
     baa:	33 1f       	adc	r19, r19
     bac:	44 1f       	adc	r20, r20
     bae:	55 1f       	adc	r21, r21
     bb0:	0a 94       	dec	r0
     bb2:	d2 f7       	brpl	.-12     	; 0xba8 <__stack+0x2a9>
     bb4:	a0 e2       	ldi	r26, 0x20	; 32
     bb6:	aa 2e       	mov	r10, r26
     bb8:	a8 1a       	sub	r10, r24
     bba:	66 96       	adiw	r28, 0x16	; 22
     bbc:	af ae       	std	Y+63, r10	; 0x3f
     bbe:	66 97       	sbiw	r28, 0x16	; 22
     bc0:	d2 01       	movw	r26, r4
     bc2:	c1 01       	movw	r24, r2
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__stack+0x2cf>
     bc6:	b6 95       	lsr	r27
     bc8:	a7 95       	ror	r26
     bca:	97 95       	ror	r25
     bcc:	87 95       	ror	r24
     bce:	aa 94       	dec	r10
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <__stack+0x2c7>
     bd2:	6c 01       	movw	r12, r24
     bd4:	7d 01       	movw	r14, r26
     bd6:	c2 2a       	or	r12, r18
     bd8:	d3 2a       	or	r13, r19
     bda:	e4 2a       	or	r14, r20
     bdc:	f5 2a       	or	r15, r21
     bde:	c9 a6       	std	Y+41, r12	; 0x29
     be0:	da a6       	std	Y+42, r13	; 0x2a
     be2:	eb a6       	std	Y+43, r14	; 0x2b
     be4:	fc a6       	std	Y+44, r15	; 0x2c
     be6:	82 01       	movw	r16, r4
     be8:	71 01       	movw	r14, r2
     bea:	67 96       	adiw	r28, 0x17	; 23
     bec:	0f ac       	ldd	r0, Y+63	; 0x3f
     bee:	67 97       	sbiw	r28, 0x17	; 23
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__stack+0x2fb>
     bf2:	ee 0c       	add	r14, r14
     bf4:	ff 1c       	adc	r15, r15
     bf6:	00 1f       	adc	r16, r16
     bf8:	11 1f       	adc	r17, r17
     bfa:	0a 94       	dec	r0
     bfc:	d2 f7       	brpl	.-12     	; 0xbf2 <__stack+0x2f3>
     bfe:	ed a2       	std	Y+37, r14	; 0x25
     c00:	fe a2       	std	Y+38, r15	; 0x26
     c02:	0f a3       	std	Y+39, r16	; 0x27
     c04:	18 a7       	std	Y+40, r17	; 0x28
     c06:	64 01       	movw	r12, r8
     c08:	53 01       	movw	r10, r6
     c0a:	66 96       	adiw	r28, 0x16	; 22
     c0c:	0f ac       	ldd	r0, Y+63	; 0x3f
     c0e:	66 97       	sbiw	r28, 0x16	; 22
     c10:	04 c0       	rjmp	.+8      	; 0xc1a <__stack+0x31b>
     c12:	d6 94       	lsr	r13
     c14:	c7 94       	ror	r12
     c16:	b7 94       	ror	r11
     c18:	a7 94       	ror	r10
     c1a:	0a 94       	dec	r0
     c1c:	d2 f7       	brpl	.-12     	; 0xc12 <__stack+0x313>
     c1e:	a4 01       	movw	r20, r8
     c20:	93 01       	movw	r18, r6
     c22:	67 96       	adiw	r28, 0x17	; 23
     c24:	0f ac       	ldd	r0, Y+63	; 0x3f
     c26:	67 97       	sbiw	r28, 0x17	; 23
     c28:	04 c0       	rjmp	.+8      	; 0xc32 <__stack+0x333>
     c2a:	22 0f       	add	r18, r18
     c2c:	33 1f       	adc	r19, r19
     c2e:	44 1f       	adc	r20, r20
     c30:	55 1f       	adc	r21, r21
     c32:	0a 94       	dec	r0
     c34:	d2 f7       	brpl	.-12     	; 0xc2a <__stack+0x32b>
     c36:	6c 96       	adiw	r28, 0x1c	; 28
     c38:	8c ad       	ldd	r24, Y+60	; 0x3c
     c3a:	9d ad       	ldd	r25, Y+61	; 0x3d
     c3c:	ae ad       	ldd	r26, Y+62	; 0x3e
     c3e:	bf ad       	ldd	r27, Y+63	; 0x3f
     c40:	6c 97       	sbiw	r28, 0x1c	; 28
     c42:	66 96       	adiw	r28, 0x16	; 22
     c44:	0f ac       	ldd	r0, Y+63	; 0x3f
     c46:	66 97       	sbiw	r28, 0x16	; 22
     c48:	04 c0       	rjmp	.+8      	; 0xc52 <__stack+0x353>
     c4a:	b6 95       	lsr	r27
     c4c:	a7 95       	ror	r26
     c4e:	97 95       	ror	r25
     c50:	87 95       	ror	r24
     c52:	0a 94       	dec	r0
     c54:	d2 f7       	brpl	.-12     	; 0xc4a <__stack+0x34b>
     c56:	3c 01       	movw	r6, r24
     c58:	4d 01       	movw	r8, r26
     c5a:	62 2a       	or	r6, r18
     c5c:	73 2a       	or	r7, r19
     c5e:	84 2a       	or	r8, r20
     c60:	95 2a       	or	r9, r21
     c62:	69 a2       	std	Y+33, r6	; 0x21
     c64:	7a a2       	std	Y+34, r7	; 0x22
     c66:	8b a2       	std	Y+35, r8	; 0x23
     c68:	9c a2       	std	Y+36, r9	; 0x24
     c6a:	6c 96       	adiw	r28, 0x1c	; 28
     c6c:	ec ac       	ldd	r14, Y+60	; 0x3c
     c6e:	fd ac       	ldd	r15, Y+61	; 0x3d
     c70:	0e ad       	ldd	r16, Y+62	; 0x3e
     c72:	1f ad       	ldd	r17, Y+63	; 0x3f
     c74:	6c 97       	sbiw	r28, 0x1c	; 28
     c76:	67 96       	adiw	r28, 0x17	; 23
     c78:	0f ac       	ldd	r0, Y+63	; 0x3f
     c7a:	67 97       	sbiw	r28, 0x17	; 23
     c7c:	04 c0       	rjmp	.+8      	; 0xc86 <__stack+0x387>
     c7e:	ee 0c       	add	r14, r14
     c80:	ff 1c       	adc	r15, r15
     c82:	00 1f       	adc	r16, r16
     c84:	11 1f       	adc	r17, r17
     c86:	0a 94       	dec	r0
     c88:	d2 f7       	brpl	.-12     	; 0xc7e <__stack+0x37f>
     c8a:	ed 8e       	std	Y+29, r14	; 0x1d
     c8c:	fe 8e       	std	Y+30, r15	; 0x1e
     c8e:	0f 8f       	std	Y+31, r16	; 0x1f
     c90:	18 a3       	std	Y+32, r17	; 0x20
     c92:	49 a5       	ldd	r20, Y+41	; 0x29
     c94:	5a a5       	ldd	r21, Y+42	; 0x2a
     c96:	6b a5       	ldd	r22, Y+43	; 0x2b
     c98:	7c a5       	ldd	r23, Y+44	; 0x2c
     c9a:	3b 01       	movw	r6, r22
     c9c:	88 24       	eor	r8, r8
     c9e:	99 24       	eor	r9, r9
     ca0:	60 70       	andi	r22, 0x00	; 0
     ca2:	70 70       	andi	r23, 0x00	; 0
     ca4:	2d 96       	adiw	r28, 0x0d	; 13
     ca6:	4c af       	std	Y+60, r20	; 0x3c
     ca8:	5d af       	std	Y+61, r21	; 0x3d
     caa:	6e af       	std	Y+62, r22	; 0x3e
     cac:	7f af       	std	Y+63, r23	; 0x3f
     cae:	2d 97       	sbiw	r28, 0x0d	; 13
     cb0:	c6 01       	movw	r24, r12
     cb2:	b5 01       	movw	r22, r10
     cb4:	a4 01       	movw	r20, r8
     cb6:	93 01       	movw	r18, r6
     cb8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     cbc:	7b 01       	movw	r14, r22
     cbe:	8c 01       	movw	r16, r24
     cc0:	c6 01       	movw	r24, r12
     cc2:	b5 01       	movw	r22, r10
     cc4:	a4 01       	movw	r20, r8
     cc6:	93 01       	movw	r18, r6
     cc8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     ccc:	c9 01       	movw	r24, r18
     cce:	da 01       	movw	r26, r20
     cd0:	1c 01       	movw	r2, r24
     cd2:	2d 01       	movw	r4, r26
     cd4:	c2 01       	movw	r24, r4
     cd6:	b1 01       	movw	r22, r2
     cd8:	2d 96       	adiw	r28, 0x0d	; 13
     cda:	2c ad       	ldd	r18, Y+60	; 0x3c
     cdc:	3d ad       	ldd	r19, Y+61	; 0x3d
     cde:	4e ad       	ldd	r20, Y+62	; 0x3e
     ce0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ce2:	2d 97       	sbiw	r28, 0x0d	; 13
     ce4:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     ce8:	9b 01       	movw	r18, r22
     cea:	ac 01       	movw	r20, r24
     cec:	87 01       	movw	r16, r14
     cee:	ff 24       	eor	r15, r15
     cf0:	ee 24       	eor	r14, r14
     cf2:	a9 a0       	ldd	r10, Y+33	; 0x21
     cf4:	ba a0       	ldd	r11, Y+34	; 0x22
     cf6:	cb a0       	ldd	r12, Y+35	; 0x23
     cf8:	dc a0       	ldd	r13, Y+36	; 0x24
     cfa:	c6 01       	movw	r24, r12
     cfc:	aa 27       	eor	r26, r26
     cfe:	bb 27       	eor	r27, r27
     d00:	57 01       	movw	r10, r14
     d02:	68 01       	movw	r12, r16
     d04:	a8 2a       	or	r10, r24
     d06:	b9 2a       	or	r11, r25
     d08:	ca 2a       	or	r12, r26
     d0a:	db 2a       	or	r13, r27
     d0c:	a2 16       	cp	r10, r18
     d0e:	b3 06       	cpc	r11, r19
     d10:	c4 06       	cpc	r12, r20
     d12:	d5 06       	cpc	r13, r21
     d14:	00 f5       	brcc	.+64     	; 0xd56 <__stack+0x457>
     d16:	08 94       	sec
     d18:	21 08       	sbc	r2, r1
     d1a:	31 08       	sbc	r3, r1
     d1c:	41 08       	sbc	r4, r1
     d1e:	51 08       	sbc	r5, r1
     d20:	e9 a4       	ldd	r14, Y+41	; 0x29
     d22:	fa a4       	ldd	r15, Y+42	; 0x2a
     d24:	0b a5       	ldd	r16, Y+43	; 0x2b
     d26:	1c a5       	ldd	r17, Y+44	; 0x2c
     d28:	ae 0c       	add	r10, r14
     d2a:	bf 1c       	adc	r11, r15
     d2c:	c0 1e       	adc	r12, r16
     d2e:	d1 1e       	adc	r13, r17
     d30:	ae 14       	cp	r10, r14
     d32:	bf 04       	cpc	r11, r15
     d34:	c0 06       	cpc	r12, r16
     d36:	d1 06       	cpc	r13, r17
     d38:	70 f0       	brcs	.+28     	; 0xd56 <__stack+0x457>
     d3a:	a2 16       	cp	r10, r18
     d3c:	b3 06       	cpc	r11, r19
     d3e:	c4 06       	cpc	r12, r20
     d40:	d5 06       	cpc	r13, r21
     d42:	48 f4       	brcc	.+18     	; 0xd56 <__stack+0x457>
     d44:	08 94       	sec
     d46:	21 08       	sbc	r2, r1
     d48:	31 08       	sbc	r3, r1
     d4a:	41 08       	sbc	r4, r1
     d4c:	51 08       	sbc	r5, r1
     d4e:	ae 0c       	add	r10, r14
     d50:	bf 1c       	adc	r11, r15
     d52:	c0 1e       	adc	r12, r16
     d54:	d1 1e       	adc	r13, r17
     d56:	a2 1a       	sub	r10, r18
     d58:	b3 0a       	sbc	r11, r19
     d5a:	c4 0a       	sbc	r12, r20
     d5c:	d5 0a       	sbc	r13, r21
     d5e:	c6 01       	movw	r24, r12
     d60:	b5 01       	movw	r22, r10
     d62:	a4 01       	movw	r20, r8
     d64:	93 01       	movw	r18, r6
     d66:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     d6a:	7b 01       	movw	r14, r22
     d6c:	8c 01       	movw	r16, r24
     d6e:	c6 01       	movw	r24, r12
     d70:	b5 01       	movw	r22, r10
     d72:	a4 01       	movw	r20, r8
     d74:	93 01       	movw	r18, r6
     d76:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodsi4>
     d7a:	c9 01       	movw	r24, r18
     d7c:	da 01       	movw	r26, r20
     d7e:	3c 01       	movw	r6, r24
     d80:	4d 01       	movw	r8, r26
     d82:	c4 01       	movw	r24, r8
     d84:	b3 01       	movw	r22, r6
     d86:	2d 96       	adiw	r28, 0x0d	; 13
     d88:	2c ad       	ldd	r18, Y+60	; 0x3c
     d8a:	3d ad       	ldd	r19, Y+61	; 0x3d
     d8c:	4e ad       	ldd	r20, Y+62	; 0x3e
     d8e:	5f ad       	ldd	r21, Y+63	; 0x3f
     d90:	2d 97       	sbiw	r28, 0x0d	; 13
     d92:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     d96:	9b 01       	movw	r18, r22
     d98:	ac 01       	movw	r20, r24
     d9a:	87 01       	movw	r16, r14
     d9c:	ff 24       	eor	r15, r15
     d9e:	ee 24       	eor	r14, r14
     da0:	89 a1       	ldd	r24, Y+33	; 0x21
     da2:	9a a1       	ldd	r25, Y+34	; 0x22
     da4:	ab a1       	ldd	r26, Y+35	; 0x23
     da6:	bc a1       	ldd	r27, Y+36	; 0x24
     da8:	a0 70       	andi	r26, 0x00	; 0
     daa:	b0 70       	andi	r27, 0x00	; 0
     dac:	57 01       	movw	r10, r14
     dae:	68 01       	movw	r12, r16
     db0:	a8 2a       	or	r10, r24
     db2:	b9 2a       	or	r11, r25
     db4:	ca 2a       	or	r12, r26
     db6:	db 2a       	or	r13, r27
     db8:	a2 16       	cp	r10, r18
     dba:	b3 06       	cpc	r11, r19
     dbc:	c4 06       	cpc	r12, r20
     dbe:	d5 06       	cpc	r13, r21
     dc0:	00 f5       	brcc	.+64     	; 0xe02 <__stack+0x503>
     dc2:	08 94       	sec
     dc4:	61 08       	sbc	r6, r1
     dc6:	71 08       	sbc	r7, r1
     dc8:	81 08       	sbc	r8, r1
     dca:	91 08       	sbc	r9, r1
     dcc:	69 a5       	ldd	r22, Y+41	; 0x29
     dce:	7a a5       	ldd	r23, Y+42	; 0x2a
     dd0:	8b a5       	ldd	r24, Y+43	; 0x2b
     dd2:	9c a5       	ldd	r25, Y+44	; 0x2c
     dd4:	a6 0e       	add	r10, r22
     dd6:	b7 1e       	adc	r11, r23
     dd8:	c8 1e       	adc	r12, r24
     dda:	d9 1e       	adc	r13, r25
     ddc:	a6 16       	cp	r10, r22
     dde:	b7 06       	cpc	r11, r23
     de0:	c8 06       	cpc	r12, r24
     de2:	d9 06       	cpc	r13, r25
     de4:	70 f0       	brcs	.+28     	; 0xe02 <__stack+0x503>
     de6:	a2 16       	cp	r10, r18
     de8:	b3 06       	cpc	r11, r19
     dea:	c4 06       	cpc	r12, r20
     dec:	d5 06       	cpc	r13, r21
     dee:	48 f4       	brcc	.+18     	; 0xe02 <__stack+0x503>
     df0:	08 94       	sec
     df2:	61 08       	sbc	r6, r1
     df4:	71 08       	sbc	r7, r1
     df6:	81 08       	sbc	r8, r1
     df8:	91 08       	sbc	r9, r1
     dfa:	a6 0e       	add	r10, r22
     dfc:	b7 1e       	adc	r11, r23
     dfe:	c8 1e       	adc	r12, r24
     e00:	d9 1e       	adc	r13, r25
     e02:	d6 01       	movw	r26, r12
     e04:	c5 01       	movw	r24, r10
     e06:	82 1b       	sub	r24, r18
     e08:	93 0b       	sbc	r25, r19
     e0a:	a4 0b       	sbc	r26, r20
     e0c:	b5 0b       	sbc	r27, r21
     e0e:	89 8f       	std	Y+25, r24	; 0x19
     e10:	9a 8f       	std	Y+26, r25	; 0x1a
     e12:	ab 8f       	std	Y+27, r26	; 0x1b
     e14:	bc 8f       	std	Y+28, r27	; 0x1c
     e16:	d1 01       	movw	r26, r2
     e18:	99 27       	eor	r25, r25
     e1a:	88 27       	eor	r24, r24
     e1c:	84 01       	movw	r16, r8
     e1e:	73 01       	movw	r14, r6
     e20:	e8 2a       	or	r14, r24
     e22:	f9 2a       	or	r15, r25
     e24:	0a 2b       	or	r16, r26
     e26:	1b 2b       	or	r17, r27
     e28:	4f ef       	ldi	r20, 0xFF	; 255
     e2a:	a4 2e       	mov	r10, r20
     e2c:	4f ef       	ldi	r20, 0xFF	; 255
     e2e:	b4 2e       	mov	r11, r20
     e30:	c1 2c       	mov	r12, r1
     e32:	d1 2c       	mov	r13, r1
     e34:	ae 20       	and	r10, r14
     e36:	bf 20       	and	r11, r15
     e38:	c0 22       	and	r12, r16
     e3a:	d1 22       	and	r13, r17
     e3c:	78 01       	movw	r14, r16
     e3e:	00 27       	eor	r16, r16
     e40:	11 27       	eor	r17, r17
     e42:	6d a0       	ldd	r6, Y+37	; 0x25
     e44:	7e a0       	ldd	r7, Y+38	; 0x26
     e46:	8f a0       	ldd	r8, Y+39	; 0x27
     e48:	98 a4       	ldd	r9, Y+40	; 0x28
     e4a:	4f ef       	ldi	r20, 0xFF	; 255
     e4c:	5f ef       	ldi	r21, 0xFF	; 255
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	64 22       	and	r6, r20
     e54:	75 22       	and	r7, r21
     e56:	86 22       	and	r8, r22
     e58:	97 22       	and	r9, r23
     e5a:	8d a1       	ldd	r24, Y+37	; 0x25
     e5c:	9e a1       	ldd	r25, Y+38	; 0x26
     e5e:	af a1       	ldd	r26, Y+39	; 0x27
     e60:	b8 a5       	ldd	r27, Y+40	; 0x28
     e62:	bd 01       	movw	r22, r26
     e64:	88 27       	eor	r24, r24
     e66:	99 27       	eor	r25, r25
     e68:	65 96       	adiw	r28, 0x15	; 21
     e6a:	6c af       	std	Y+60, r22	; 0x3c
     e6c:	7d af       	std	Y+61, r23	; 0x3d
     e6e:	8e af       	std	Y+62, r24	; 0x3e
     e70:	9f af       	std	Y+63, r25	; 0x3f
     e72:	65 97       	sbiw	r28, 0x15	; 21
     e74:	c6 01       	movw	r24, r12
     e76:	b5 01       	movw	r22, r10
     e78:	a4 01       	movw	r20, r8
     e7a:	93 01       	movw	r18, r6
     e7c:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     e80:	61 96       	adiw	r28, 0x11	; 17
     e82:	6c af       	std	Y+60, r22	; 0x3c
     e84:	7d af       	std	Y+61, r23	; 0x3d
     e86:	8e af       	std	Y+62, r24	; 0x3e
     e88:	9f af       	std	Y+63, r25	; 0x3f
     e8a:	61 97       	sbiw	r28, 0x11	; 17
     e8c:	c6 01       	movw	r24, r12
     e8e:	b5 01       	movw	r22, r10
     e90:	65 96       	adiw	r28, 0x15	; 21
     e92:	2c ad       	ldd	r18, Y+60	; 0x3c
     e94:	3d ad       	ldd	r19, Y+61	; 0x3d
     e96:	4e ad       	ldd	r20, Y+62	; 0x3e
     e98:	5f ad       	ldd	r21, Y+63	; 0x3f
     e9a:	65 97       	sbiw	r28, 0x15	; 21
     e9c:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     ea0:	1b 01       	movw	r2, r22
     ea2:	2c 01       	movw	r4, r24
     ea4:	c8 01       	movw	r24, r16
     ea6:	b7 01       	movw	r22, r14
     ea8:	a4 01       	movw	r20, r8
     eaa:	93 01       	movw	r18, r6
     eac:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     eb0:	5b 01       	movw	r10, r22
     eb2:	6c 01       	movw	r12, r24
     eb4:	c8 01       	movw	r24, r16
     eb6:	b7 01       	movw	r22, r14
     eb8:	65 96       	adiw	r28, 0x15	; 21
     eba:	2c ad       	ldd	r18, Y+60	; 0x3c
     ebc:	3d ad       	ldd	r19, Y+61	; 0x3d
     ebe:	4e ad       	ldd	r20, Y+62	; 0x3e
     ec0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ec2:	65 97       	sbiw	r28, 0x15	; 21
     ec4:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsi3>
     ec8:	7b 01       	movw	r14, r22
     eca:	8c 01       	movw	r16, r24
     ecc:	a6 01       	movw	r20, r12
     ece:	95 01       	movw	r18, r10
     ed0:	22 0d       	add	r18, r2
     ed2:	33 1d       	adc	r19, r3
     ed4:	44 1d       	adc	r20, r4
     ed6:	55 1d       	adc	r21, r5
     ed8:	61 96       	adiw	r28, 0x11	; 17
     eda:	6c ac       	ldd	r6, Y+60	; 0x3c
     edc:	7d ac       	ldd	r7, Y+61	; 0x3d
     ede:	8e ac       	ldd	r8, Y+62	; 0x3e
     ee0:	9f ac       	ldd	r9, Y+63	; 0x3f
     ee2:	61 97       	sbiw	r28, 0x11	; 17
     ee4:	c4 01       	movw	r24, r8
     ee6:	aa 27       	eor	r26, r26
     ee8:	bb 27       	eor	r27, r27
     eea:	28 0f       	add	r18, r24
     eec:	39 1f       	adc	r19, r25
     eee:	4a 1f       	adc	r20, r26
     ef0:	5b 1f       	adc	r21, r27
     ef2:	2a 15       	cp	r18, r10
     ef4:	3b 05       	cpc	r19, r11
     ef6:	4c 05       	cpc	r20, r12
     ef8:	5d 05       	cpc	r21, r13
     efa:	48 f4       	brcc	.+18     	; 0xf0e <__stack+0x60f>
     efc:	81 2c       	mov	r8, r1
     efe:	91 2c       	mov	r9, r1
     f00:	e1 e0       	ldi	r30, 0x01	; 1
     f02:	ae 2e       	mov	r10, r30
     f04:	b1 2c       	mov	r11, r1
     f06:	e8 0c       	add	r14, r8
     f08:	f9 1c       	adc	r15, r9
     f0a:	0a 1d       	adc	r16, r10
     f0c:	1b 1d       	adc	r17, r11
     f0e:	ca 01       	movw	r24, r20
     f10:	aa 27       	eor	r26, r26
     f12:	bb 27       	eor	r27, r27
     f14:	57 01       	movw	r10, r14
     f16:	68 01       	movw	r12, r16
     f18:	a8 0e       	add	r10, r24
     f1a:	b9 1e       	adc	r11, r25
     f1c:	ca 1e       	adc	r12, r26
     f1e:	db 1e       	adc	r13, r27
     f20:	a9 01       	movw	r20, r18
     f22:	33 27       	eor	r19, r19
     f24:	22 27       	eor	r18, r18
     f26:	61 96       	adiw	r28, 0x11	; 17
     f28:	8c ad       	ldd	r24, Y+60	; 0x3c
     f2a:	9d ad       	ldd	r25, Y+61	; 0x3d
     f2c:	ae ad       	ldd	r26, Y+62	; 0x3e
     f2e:	bf ad       	ldd	r27, Y+63	; 0x3f
     f30:	61 97       	sbiw	r28, 0x11	; 17
     f32:	a0 70       	andi	r26, 0x00	; 0
     f34:	b0 70       	andi	r27, 0x00	; 0
     f36:	28 0f       	add	r18, r24
     f38:	39 1f       	adc	r19, r25
     f3a:	4a 1f       	adc	r20, r26
     f3c:	5b 1f       	adc	r21, r27
     f3e:	e9 8c       	ldd	r14, Y+25	; 0x19
     f40:	fa 8c       	ldd	r15, Y+26	; 0x1a
     f42:	0b 8d       	ldd	r16, Y+27	; 0x1b
     f44:	1c 8d       	ldd	r17, Y+28	; 0x1c
     f46:	ea 14       	cp	r14, r10
     f48:	fb 04       	cpc	r15, r11
     f4a:	0c 05       	cpc	r16, r12
     f4c:	1d 05       	cpc	r17, r13
     f4e:	70 f0       	brcs	.+28     	; 0xf6c <__stack+0x66d>
     f50:	ae 14       	cp	r10, r14
     f52:	bf 04       	cpc	r11, r15
     f54:	c0 06       	cpc	r12, r16
     f56:	d1 06       	cpc	r13, r17
     f58:	69 f5       	brne	.+90     	; 0xfb4 <__stack+0x6b5>
     f5a:	6d 8d       	ldd	r22, Y+29	; 0x1d
     f5c:	7e 8d       	ldd	r23, Y+30	; 0x1e
     f5e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f60:	98 a1       	ldd	r25, Y+32	; 0x20
     f62:	62 17       	cp	r22, r18
     f64:	73 07       	cpc	r23, r19
     f66:	84 07       	cpc	r24, r20
     f68:	95 07       	cpc	r25, r21
     f6a:	20 f5       	brcc	.+72     	; 0xfb4 <__stack+0x6b5>
     f6c:	da 01       	movw	r26, r20
     f6e:	c9 01       	movw	r24, r18
     f70:	6d a0       	ldd	r6, Y+37	; 0x25
     f72:	7e a0       	ldd	r7, Y+38	; 0x26
     f74:	8f a0       	ldd	r8, Y+39	; 0x27
     f76:	98 a4       	ldd	r9, Y+40	; 0x28
     f78:	86 19       	sub	r24, r6
     f7a:	97 09       	sbc	r25, r7
     f7c:	a8 09       	sbc	r26, r8
     f7e:	b9 09       	sbc	r27, r9
     f80:	e9 a4       	ldd	r14, Y+41	; 0x29
     f82:	fa a4       	ldd	r15, Y+42	; 0x2a
     f84:	0b a5       	ldd	r16, Y+43	; 0x2b
     f86:	1c a5       	ldd	r17, Y+44	; 0x2c
     f88:	ae 18       	sub	r10, r14
     f8a:	bf 08       	sbc	r11, r15
     f8c:	c0 0a       	sbc	r12, r16
     f8e:	d1 0a       	sbc	r13, r17
     f90:	ee 24       	eor	r14, r14
     f92:	ff 24       	eor	r15, r15
     f94:	87 01       	movw	r16, r14
     f96:	28 17       	cp	r18, r24
     f98:	39 07       	cpc	r19, r25
     f9a:	4a 07       	cpc	r20, r26
     f9c:	5b 07       	cpc	r21, r27
     f9e:	28 f4       	brcc	.+10     	; 0xfaa <__stack+0x6ab>
     fa0:	21 e0       	ldi	r18, 0x01	; 1
     fa2:	e2 2e       	mov	r14, r18
     fa4:	f1 2c       	mov	r15, r1
     fa6:	01 2d       	mov	r16, r1
     fa8:	11 2d       	mov	r17, r1
     faa:	ae 18       	sub	r10, r14
     fac:	bf 08       	sbc	r11, r15
     fae:	c0 0a       	sbc	r12, r16
     fb0:	d1 0a       	sbc	r13, r17
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <__stack+0x6b9>
     fb4:	da 01       	movw	r26, r20
     fb6:	c9 01       	movw	r24, r18
     fb8:	6d 8c       	ldd	r6, Y+29	; 0x1d
     fba:	7e 8c       	ldd	r7, Y+30	; 0x1e
     fbc:	8f 8c       	ldd	r8, Y+31	; 0x1f
     fbe:	98 a0       	ldd	r9, Y+32	; 0x20
     fc0:	68 1a       	sub	r6, r24
     fc2:	79 0a       	sbc	r7, r25
     fc4:	8a 0a       	sbc	r8, r26
     fc6:	9b 0a       	sbc	r9, r27
     fc8:	49 8d       	ldd	r20, Y+25	; 0x19
     fca:	5a 8d       	ldd	r21, Y+26	; 0x1a
     fcc:	6b 8d       	ldd	r22, Y+27	; 0x1b
     fce:	7c 8d       	ldd	r23, Y+28	; 0x1c
     fd0:	4a 19       	sub	r20, r10
     fd2:	5b 09       	sbc	r21, r11
     fd4:	6c 09       	sbc	r22, r12
     fd6:	7d 09       	sbc	r23, r13
     fd8:	5a 01       	movw	r10, r20
     fda:	6b 01       	movw	r12, r22
     fdc:	22 24       	eor	r2, r2
     fde:	33 24       	eor	r3, r3
     fe0:	21 01       	movw	r4, r2
     fe2:	6d 8d       	ldd	r22, Y+29	; 0x1d
     fe4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     fe6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     fe8:	98 a1       	ldd	r25, Y+32	; 0x20
     fea:	66 15       	cp	r22, r6
     fec:	77 05       	cpc	r23, r7
     fee:	88 05       	cpc	r24, r8
     ff0:	99 05       	cpc	r25, r9
     ff2:	28 f4       	brcc	.+10     	; 0xffe <__stack+0x6ff>
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	28 2e       	mov	r2, r24
     ff8:	31 2c       	mov	r3, r1
     ffa:	41 2c       	mov	r4, r1
     ffc:	51 2c       	mov	r5, r1
     ffe:	86 01       	movw	r16, r12
    1000:	75 01       	movw	r14, r10
    1002:	e2 18       	sub	r14, r2
    1004:	f3 08       	sbc	r15, r3
    1006:	04 09       	sbc	r16, r4
    1008:	15 09       	sbc	r17, r5
    100a:	a8 01       	movw	r20, r16
    100c:	97 01       	movw	r18, r14
    100e:	66 96       	adiw	r28, 0x16	; 22
    1010:	0f ac       	ldd	r0, Y+63	; 0x3f
    1012:	66 97       	sbiw	r28, 0x16	; 22
    1014:	04 c0       	rjmp	.+8      	; 0x101e <__stack+0x71f>
    1016:	22 0f       	add	r18, r18
    1018:	33 1f       	adc	r19, r19
    101a:	44 1f       	adc	r20, r20
    101c:	55 1f       	adc	r21, r21
    101e:	0a 94       	dec	r0
    1020:	d2 f7       	brpl	.-12     	; 0x1016 <__stack+0x717>
    1022:	d4 01       	movw	r26, r8
    1024:	c3 01       	movw	r24, r6
    1026:	67 96       	adiw	r28, 0x17	; 23
    1028:	0f ac       	ldd	r0, Y+63	; 0x3f
    102a:	67 97       	sbiw	r28, 0x17	; 23
    102c:	04 c0       	rjmp	.+8      	; 0x1036 <__stack+0x737>
    102e:	b6 95       	lsr	r27
    1030:	a7 95       	ror	r26
    1032:	97 95       	ror	r25
    1034:	87 95       	ror	r24
    1036:	0a 94       	dec	r0
    1038:	d2 f7       	brpl	.-12     	; 0x102e <__stack+0x72f>
    103a:	28 2b       	or	r18, r24
    103c:	39 2b       	or	r19, r25
    103e:	4a 2b       	or	r20, r26
    1040:	5b 2b       	or	r21, r27
    1042:	29 8b       	std	Y+17, r18	; 0x11
    1044:	3a 8b       	std	Y+18, r19	; 0x12
    1046:	4b 8b       	std	Y+19, r20	; 0x13
    1048:	5c 8b       	std	Y+20, r21	; 0x14
    104a:	67 96       	adiw	r28, 0x17	; 23
    104c:	0f ac       	ldd	r0, Y+63	; 0x3f
    104e:	67 97       	sbiw	r28, 0x17	; 23
    1050:	04 c0       	rjmp	.+8      	; 0x105a <__stack+0x75b>
    1052:	16 95       	lsr	r17
    1054:	07 95       	ror	r16
    1056:	f7 94       	ror	r15
    1058:	e7 94       	ror	r14
    105a:	0a 94       	dec	r0
    105c:	d2 f7       	brpl	.-12     	; 0x1052 <__stack+0x753>
    105e:	ed 8a       	std	Y+21, r14	; 0x15
    1060:	fe 8a       	std	Y+22, r15	; 0x16
    1062:	0f 8b       	std	Y+23, r16	; 0x17
    1064:	18 8f       	std	Y+24, r17	; 0x18
    1066:	3a 89       	ldd	r19, Y+18	; 0x12
    1068:	4b 89       	ldd	r20, Y+19	; 0x13
    106a:	5c 89       	ldd	r21, Y+20	; 0x14
    106c:	6e 2d       	mov	r22, r14
    106e:	7e 89       	ldd	r23, Y+22	; 0x16
    1070:	8f 89       	ldd	r24, Y+23	; 0x17
    1072:	98 8d       	ldd	r25, Y+24	; 0x18
    1074:	c5 5a       	subi	r28, 0xA5	; 165
    1076:	df 4f       	sbci	r29, 0xFF	; 255
    1078:	e2 e1       	ldi	r30, 0x12	; 18
    107a:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__epilogue_restores__>

0000107e <__mulsi3>:
    107e:	62 9f       	mul	r22, r18
    1080:	d0 01       	movw	r26, r0
    1082:	73 9f       	mul	r23, r19
    1084:	f0 01       	movw	r30, r0
    1086:	82 9f       	mul	r24, r18
    1088:	e0 0d       	add	r30, r0
    108a:	f1 1d       	adc	r31, r1
    108c:	64 9f       	mul	r22, r20
    108e:	e0 0d       	add	r30, r0
    1090:	f1 1d       	adc	r31, r1
    1092:	92 9f       	mul	r25, r18
    1094:	f0 0d       	add	r31, r0
    1096:	83 9f       	mul	r24, r19
    1098:	f0 0d       	add	r31, r0
    109a:	74 9f       	mul	r23, r20
    109c:	f0 0d       	add	r31, r0
    109e:	65 9f       	mul	r22, r21
    10a0:	f0 0d       	add	r31, r0
    10a2:	99 27       	eor	r25, r25
    10a4:	72 9f       	mul	r23, r18
    10a6:	b0 0d       	add	r27, r0
    10a8:	e1 1d       	adc	r30, r1
    10aa:	f9 1f       	adc	r31, r25
    10ac:	63 9f       	mul	r22, r19
    10ae:	b0 0d       	add	r27, r0
    10b0:	e1 1d       	adc	r30, r1
    10b2:	f9 1f       	adc	r31, r25
    10b4:	bd 01       	movw	r22, r26
    10b6:	cf 01       	movw	r24, r30
    10b8:	11 24       	eor	r1, r1
    10ba:	08 95       	ret

000010bc <__udivmodsi4>:
    10bc:	a1 e2       	ldi	r26, 0x21	; 33
    10be:	1a 2e       	mov	r1, r26
    10c0:	aa 1b       	sub	r26, r26
    10c2:	bb 1b       	sub	r27, r27
    10c4:	fd 01       	movw	r30, r26
    10c6:	0d c0       	rjmp	.+26     	; 0x10e2 <__udivmodsi4_ep>

000010c8 <__udivmodsi4_loop>:
    10c8:	aa 1f       	adc	r26, r26
    10ca:	bb 1f       	adc	r27, r27
    10cc:	ee 1f       	adc	r30, r30
    10ce:	ff 1f       	adc	r31, r31
    10d0:	a2 17       	cp	r26, r18
    10d2:	b3 07       	cpc	r27, r19
    10d4:	e4 07       	cpc	r30, r20
    10d6:	f5 07       	cpc	r31, r21
    10d8:	20 f0       	brcs	.+8      	; 0x10e2 <__udivmodsi4_ep>
    10da:	a2 1b       	sub	r26, r18
    10dc:	b3 0b       	sbc	r27, r19
    10de:	e4 0b       	sbc	r30, r20
    10e0:	f5 0b       	sbc	r31, r21

000010e2 <__udivmodsi4_ep>:
    10e2:	66 1f       	adc	r22, r22
    10e4:	77 1f       	adc	r23, r23
    10e6:	88 1f       	adc	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	1a 94       	dec	r1
    10ec:	69 f7       	brne	.-38     	; 0x10c8 <__udivmodsi4_loop>
    10ee:	60 95       	com	r22
    10f0:	70 95       	com	r23
    10f2:	80 95       	com	r24
    10f4:	90 95       	com	r25
    10f6:	9b 01       	movw	r18, r22
    10f8:	ac 01       	movw	r20, r24
    10fa:	bd 01       	movw	r22, r26
    10fc:	cf 01       	movw	r24, r30
    10fe:	08 95       	ret

00001100 <__prologue_saves__>:
    1100:	2f 92       	push	r2
    1102:	3f 92       	push	r3
    1104:	4f 92       	push	r4
    1106:	5f 92       	push	r5
    1108:	6f 92       	push	r6
    110a:	7f 92       	push	r7
    110c:	8f 92       	push	r8
    110e:	9f 92       	push	r9
    1110:	af 92       	push	r10
    1112:	bf 92       	push	r11
    1114:	cf 92       	push	r12
    1116:	df 92       	push	r13
    1118:	ef 92       	push	r14
    111a:	ff 92       	push	r15
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	cd b7       	in	r28, 0x3d	; 61
    1126:	de b7       	in	r29, 0x3e	; 62
    1128:	ca 1b       	sub	r28, r26
    112a:	db 0b       	sbc	r29, r27
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	09 94       	ijmp

00001138 <__epilogue_restores__>:
    1138:	2a 88       	ldd	r2, Y+18	; 0x12
    113a:	39 88       	ldd	r3, Y+17	; 0x11
    113c:	48 88       	ldd	r4, Y+16	; 0x10
    113e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1140:	6e 84       	ldd	r6, Y+14	; 0x0e
    1142:	7d 84       	ldd	r7, Y+13	; 0x0d
    1144:	8c 84       	ldd	r8, Y+12	; 0x0c
    1146:	9b 84       	ldd	r9, Y+11	; 0x0b
    1148:	aa 84       	ldd	r10, Y+10	; 0x0a
    114a:	b9 84       	ldd	r11, Y+9	; 0x09
    114c:	c8 84       	ldd	r12, Y+8	; 0x08
    114e:	df 80       	ldd	r13, Y+7	; 0x07
    1150:	ee 80       	ldd	r14, Y+6	; 0x06
    1152:	fd 80       	ldd	r15, Y+5	; 0x05
    1154:	0c 81       	ldd	r16, Y+4	; 0x04
    1156:	1b 81       	ldd	r17, Y+3	; 0x03
    1158:	aa 81       	ldd	r26, Y+2	; 0x02
    115a:	b9 81       	ldd	r27, Y+1	; 0x01
    115c:	ce 0f       	add	r28, r30
    115e:	d1 1d       	adc	r29, r1
    1160:	0f b6       	in	r0, 0x3f	; 63
    1162:	f8 94       	cli
    1164:	de bf       	out	0x3e, r29	; 62
    1166:	0f be       	out	0x3f, r0	; 63
    1168:	cd bf       	out	0x3d, r28	; 61
    116a:	ed 01       	movw	r28, r26
    116c:	08 95       	ret

0000116e <_exit>:
    116e:	f8 94       	cli

00001170 <__stop_program>:
    1170:	ff cf       	rjmp	.-2      	; 0x1170 <__stop_program>
