
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800100  00800100  0000016a  2**0
                  ALLOC
  2 .stab         000001d4  00000000  00000000  0000016c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000038  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000001b  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000076  00000000  00000000  000003b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000041  00000000  00000000  00000429  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000068  00000000  00000000  0000046a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000020  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000099  00000000  00000000  000004f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 45 00 	jmp	0x8a	; 0x8a <__vector_16>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 79 00 	jmp	0xf2	; 0xf2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/interrupt.h>
#include "kernel.h"

int main(void) {
    
	DDRC |= (1<<5);
  80:	3d 9a       	sbi	0x07, 5	; 7
	PORTC&=~(1<<5);
  82:	45 98       	cbi	0x08, 5	; 8
    Kernel_SysTick_Reg_Init();
  84:	0e 94 5a 00 	call	0xb4	; 0xb4 <Kernel_SysTick_Reg_Init>
  88:	ff cf       	rjmp	.-2      	; 0x88 <main+0x8>

0000008a <__vector_16>:


;Initialize interrupt vector subroutine
.global  __vector_16
__vector_16:
        PUSH  R17                      ;save r17
  8a:	1f 93       	push	r17
		PUSH  R18                      ;save r18
  8c:	2f 93       	push	r18
		IN    R17          ,  0x3F     ;load SREG
  8e:	1f b7       	in	r17, 0x3f	; 63
		PUSH  R17                      ;save SREG
  90:	1f 93       	push	r17
		
		LDS   R17          ,  Kernel+0x00
  92:	10 91 00 01 	lds	r17, 0x0100
		STS   TCNT0        ,  R17      ;Set Reload value to TCNT0
  96:	10 93 46 00 	sts	0x0046, r17
		
		IN    R17          ,  0x08     ;fetch PORTC value
  9a:	18 b1       	in	r17, 0x08	; 8
		LDI   R18          ,  (1<<5)   ;Bit mask for Bit pos 5
  9c:	20 e2       	ldi	r18, 0x20	; 32
		EOR   R17          ,  R18      ;XOR with current val
  9e:	12 27       	eor	r17, r18
		OUT   0x08         ,  R17      ;set to PORTC
  a0:	18 b9       	out	0x08, r17	; 8
		
		POP   R17                      ;fetch SREG val
  a2:	1f 91       	pop	r17
		OUT   0x3F         ,  R17      ;restore SREG
  a4:	1f bf       	out	0x3f, r17	; 63
		POP   R18                      ;restore R18
  a6:	2f 91       	pop	r18
		POP   R17                      ;restore R17
  a8:	1f 91       	pop	r17
		RETI
  aa:	18 95       	reti
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 00       	nop

.org    0x28
        RJMP  __vector_16
  b2:	eb cf       	rjmp	.-42     	; 0x8a <__vector_16>

000000b4 <Kernel_SysTick_Reg_Init>:

Kernel_SysTick_Reg_Init:
        CLI                            ;disable global interrupt
  b4:	f8 94       	cli
		LDI   R16          ,  0x00     ;store r16 with 0
  b6:	00 e0       	ldi	r16, 0x00	; 0
		STS   TCCR0A       ,  R16      ;clear TCCR0A
  b8:	00 93 44 00 	sts	0x0044, r16
		STS   TCCR0B       ,  R16      ;clear TCCR0B
  bc:	00 93 45 00 	sts	0x0045, r16
		STS   TIMSK0       ,  R16      ;clear TIMSK0
  c0:	00 93 6e 00 	sts	0x006E, r16
		STS   TIFR0        ,  R16      ;clear TIFR0
  c4:	00 93 35 00 	sts	0x0035, r16
		STS   OCR0A        ,  R16      ;clear OCR0A
  c8:	00 93 47 00 	sts	0x0047, r16
		STS   OCR0B        ,  R16      ;clear OCR0B
  cc:	00 93 48 00 	sts	0x0048, r16
		STS   TCNT0        ,  R16      ;clear TCNT0
  d0:	00 93 46 00 	sts	0x0046, r16
		
		LDI   R16          ,  0x03     ;store r16 with prescaler 64
  d4:	03 e0       	ldi	r16, 0x03	; 3
		STS   TCCR0B       ,  R16      ;set to TCCR0B
  d6:	00 93 45 00 	sts	0x0045, r16
		
		LDI   R16          ,  0x84     ;r16 with reload value (130)
  da:	04 e8       	ldi	r16, 0x84	; 132
		STS   Kernel + 0x00,  R16      ;Kernel[0] with reload value (130)
  dc:	00 93 00 01 	sts	0x0100, r16
		
		STS   TCNT0        ,  R16      ;set to TCNT0
  e0:	00 93 46 00 	sts	0x0046, r16
		LDI   R16          ,  0x01     ;store r16 with TOIE0 enabled
  e4:	01 e0       	ldi	r16, 0x01	; 1
		STS   TIMSK0       ,  R16      ;set to TIMSK0
  e6:	00 93 6e 00 	sts	0x006E, r16
		SEI
  ea:	78 94       	sei
		
		RET
  ec:	08 95       	ret

000000ee <Kernel_SysTick_Val_Get>:
		
Kernel_SysTick_Val_Get:
        
		RET
  ee:	08 95       	ret

000000f0 <Kernel_Interrupt_Sts_Get>:
		
Kernel_Interrupt_Sts_Get:
        
		RET
  f0:	08 95       	ret

000000f2 <_exit>:
  f2:	f8 94       	cli

000000f4 <__stop_program>:
  f4:	ff cf       	rjmp	.-2      	; 0xf4 <__stop_program>
