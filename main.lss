
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000100  00800100  0000117e  00001212  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000117e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a0  00800200  00800200  00001312  2**0
                  ALLOC
  3 .stab         00000d8c  00000000  00000000  00001314  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000037  00000000  00000000  000020a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  000020d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000006c  00000000  00000000  00002117  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000008a5  00000000  00000000  00002183  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000026a  00000000  00000000  00002a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000035d  00000000  00000000  00002c92  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000040  00000000  00000000  00002ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001a5  00000000  00000000  00003030  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000ab2  00000000  00000000  000031d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000018  00000000  00000000  00003c87  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__ctors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__vector_16>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 00       	nop
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	00 00       	nop
      82:	00 00       	nop
      84:	00 00       	nop
      86:	00 00       	nop
      88:	49 c0       	rjmp	.+146    	; 0x11c <__vector_16>

0000008a <__ctors_end>:
      8a:	11 24       	eor	r1, r1
      8c:	1f be       	out	0x3f, r1	; 63
      8e:	cf ef       	ldi	r28, 0xFF	; 255
      90:	d8 e0       	ldi	r29, 0x08	; 8
      92:	de bf       	out	0x3e, r29	; 62
      94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_clear_bss>:
      96:	13 e0       	ldi	r17, 0x03	; 3
      98:	a0 e0       	ldi	r26, 0x00	; 0
      9a:	b2 e0       	ldi	r27, 0x02	; 2
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a0 3a       	cpi	r26, 0xA0	; 160
      a2:	b1 07       	cpc	r27, r17
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>

000000a6 <__do_copy_data>:
      a6:	12 e0       	ldi	r17, 0x02	; 2
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	ee e7       	ldi	r30, 0x7E	; 126
      ae:	f1 e1       	ldi	r31, 0x11	; 17
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <.do_copy_data_start>

000000b2 <.do_copy_data_loop>:
      b2:	05 90       	lpm	r0, Z+
      b4:	0d 92       	st	X+, r0

000000b6 <.do_copy_data_start>:
      b6:	a0 30       	cpi	r26, 0x00	; 0
      b8:	b1 07       	cpc	r27, r17
      ba:	d9 f7       	brne	.-10     	; 0xb2 <.do_copy_data_loop>
      bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
      c0:	0c 94 bd 08 	jmp	0x117a	; 0x117a <_exit>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
#include <avr/interrupt.h>
#include "kernel.h"

int64_t cur = 0, next = 0;

int main(void) {
      c8:	9f 92       	push	r9
      ca:	af 92       	push	r10
      cc:	bf 92       	push	r11
      ce:	cf 92       	push	r12
      d0:	df 92       	push	r13
      d2:	ef 92       	push	r14
      d4:	ff 92       	push	r15
      d6:	0f 93       	push	r16
      d8:	1f 93       	push	r17
    
	DDRD |= (1<<5);
      da:	55 9a       	sbi	0x0a, 5	; 10
    Kernel_SysTick_Reg_Init(1000);
      dc:	88 ee       	ldi	r24, 0xE8	; 232
      de:	93 e0       	ldi	r25, 0x03	; 3
      e0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Kernel_SysTick_Reg_Init>
		//next  = cur + 200;
		
		//while(next < Kernel_SysTick_Val_Get());
		
		if(Kernel_SysTick_Val_Get() % 1000 == 0){
		  PORTD ^= (1<<5);
      e4:	a0 e2       	ldi	r26, 0x20	; 32
      e6:	9a 2e       	mov	r9, r26
        //cur   = Kernel_SysTick_Val_Get();
		//next  = cur + 200;
		
		//while(next < Kernel_SysTick_Val_Get());
		
		if(Kernel_SysTick_Val_Get() % 1000 == 0){
      e8:	0e 94 28 01 	call	0x250	; 0x250 <Kernel_SysTick_Val_Get>
      ec:	f8 ee       	ldi	r31, 0xE8	; 232
      ee:	af 2e       	mov	r10, r31
      f0:	e3 e0       	ldi	r30, 0x03	; 3
      f2:	be 2e       	mov	r11, r30
      f4:	cc 24       	eor	r12, r12
      f6:	dd 24       	eor	r13, r13
      f8:	ee 24       	eor	r14, r14
      fa:	ff 24       	eor	r15, r15
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	10 e0       	ldi	r17, 0x00	; 0
     100:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__umoddi3>
     104:	23 2b       	or	r18, r19
     106:	24 2b       	or	r18, r20
     108:	25 2b       	or	r18, r21
     10a:	26 2b       	or	r18, r22
     10c:	27 2b       	or	r18, r23
     10e:	28 2b       	or	r18, r24
     110:	29 2b       	or	r18, r25
     112:	51 f7       	brne	.-44     	; 0xe8 <main+0x20>
		  PORTD ^= (1<<5);
     114:	8b b1       	in	r24, 0x0b	; 11
     116:	89 25       	eor	r24, r9
     118:	8b b9       	out	0x0b, r24	; 11
     11a:	e6 cf       	rjmp	.-52     	; 0xe8 <main+0x20>

0000011c <__vector_16>:
.global  __vector_16
    __vector_16:
	    
		;;============================if kernel debug enabled===============================;;
	    #ifdef KER_DBG_ENABLE
        SBI   KER_DBG_PORT       , KER_DBG_PIN            ;set gpio,                (2 clocks)
     11c:	29 9a       	sbi	0x05, 1	; 5
		#endif
		
		
		;;==============================context save========================================;;
		;; total 68 clocks for context saving
        PUSH  R0                                          ;save R0,                 (2 clocks)
     11e:	0f 92       	push	r0
		IN    R0                 , IOSREG                 ;load SREG,               (1 clock )
     120:	0f b6       	in	r0, 0x3f	; 63
		PUSH  R0                                          ;save SREG,               (2 clocks)
     122:	0f 92       	push	r0
		PUSH  R1                                          ;save R1,                 (2 clocks)   
     124:	1f 92       	push	r1
		CLR   R1                                          ;clear R1,                (1 clock )
     126:	11 24       	eor	r1, r1
		PUSH  R2                                          ;save R2,                 (2 clocks)   
     128:	2f 92       	push	r2
		PUSH  R3                                          ;save R3,                 (2 clocks)   
     12a:	3f 92       	push	r3
		PUSH  R4                                          ;save R4,                 (2 clocks)   
     12c:	4f 92       	push	r4
		PUSH  R5                                          ;save R5,                 (2 clocks)   
     12e:	5f 92       	push	r5
		PUSH  R6                                          ;save R6,                 (2 clocks)   
     130:	6f 92       	push	r6
		PUSH  R7                                          ;save R7,                 (2 clocks)   
     132:	7f 92       	push	r7
		PUSH  R8                                          ;save R8,                 (2 clocks)   
     134:	8f 92       	push	r8
		PUSH  R9                                          ;save R9,                 (2 clocks)   
     136:	9f 92       	push	r9
		PUSH  R10                                         ;save R10,                (2 clocks)   
     138:	af 92       	push	r10
		PUSH  R11                                         ;save R11,                (2 clocks)  
     13a:	bf 92       	push	r11
		PUSH  R12                                         ;save R12,                (2 clocks)  
     13c:	cf 92       	push	r12
		PUSH  R13                                         ;save R13,                (2 clocks)  
     13e:	df 92       	push	r13
		PUSH  R14                                         ;save R14,                (2 clocks)  
     140:	ef 92       	push	r14
		PUSH  R15                                         ;save R15,                (2 clocks)  
     142:	ff 92       	push	r15
		PUSH  R16                                         ;save R16,                (2 clocks)  
     144:	0f 93       	push	r16
		PUSH  R17                                         ;save R17,                (2 clocks)  
     146:	1f 93       	push	r17
		PUSH  R18                                         ;save R18,                (2 clocks)  
     148:	2f 93       	push	r18
		PUSH  R19                                         ;save R19,                (2 clocks)  
     14a:	3f 93       	push	r19
		PUSH  R20                                         ;save R20,                (2 clocks)  
     14c:	4f 93       	push	r20
		PUSH  R21                                         ;save R21,                (2 clocks)  
     14e:	5f 93       	push	r21
		PUSH  R22                                         ;save R22,                (2 clocks)  
     150:	6f 93       	push	r22
		PUSH  R23                                         ;save R23,                (2 clocks)  
     152:	7f 93       	push	r23
		PUSH  R24                                         ;save R24,                (2 clocks)  
     154:	8f 93       	push	r24
		PUSH  R25                                         ;save R25,                (2 clocks)  
     156:	9f 93       	push	r25
		PUSH  R26                                         ;save R26,                (2 clocks)  
     158:	af 93       	push	r26
		PUSH  R27                                         ;save R27,                (2 clocks)  
     15a:	bf 93       	push	r27
		PUSH  R28                                         ;save R28,                (2 clocks)  
     15c:	cf 93       	push	r28
		PUSH  R29                                         ;save R29,                (2 clocks)  
     15e:	df 93       	push	r29
		PUSH  R30                                         ;save R30,                (2 clocks)  
     160:	ef 93       	push	r30
		PUSH  R31                                         ;save R31,                (2 clocks)  
     162:	ff 93       	push	r31
		
		
		;;=============================reload counter value=================================;;
		;; total 4 clocks for reloading
		LDS   R16                , Kernel+0x08            ;fetch reload value,      (2 clocks) 
     164:	00 91 18 02 	lds	r16, 0x0218
		STS   SRTCNT0            , R16                    ;Set value to TCNT0,      (2 clocks) 
     168:	00 93 46 00 	sts	0x0046, r16
		
		
		;;=============================increment tick counter===============================;;
		;; total 26 clocks for reloading, 40 bit counter
		LDI   R16                , 0x01                   ;load 1 to R16,           (1 clock )
     16c:	01 e0       	ldi	r16, 0x01	; 1
		LDS   R17                , Kernel+0x00            ;load Byte0,              (2 clocks)
     16e:	10 91 10 02 	lds	r17, 0x0210
		ADD   R17                , R16                    ;add 1 with Byte0,        (1 clock )
     172:	10 0f       	add	r17, r16
		STS   Kernel+0x00        , R17                    ;set Byte0,               (2 clocks)
     174:	10 93 10 02 	sts	0x0210, r17
		LDS   R17                , Kernel+0x01            ;load Byte1,              (2 clocks)
     178:	10 91 11 02 	lds	r17, 0x0211
		ADC   R17                , R1                     ;add carry with Byte1,    (1 clock )
     17c:	11 1d       	adc	r17, r1
		STS   Kernel+0x01        , R17                    ;set Byte1,               (2 clocks)
     17e:	10 93 11 02 	sts	0x0211, r17
		LDS   R17                , Kernel+0x02            ;load Byte2,              (2 clocks)
     182:	10 91 12 02 	lds	r17, 0x0212
		ADC   R17                , R1                     ;add carry with Byte2,    (1 clock )
     186:	11 1d       	adc	r17, r1
		STS   Kernel+0x02        , R17                    ;set Byte2,               (2 clocks)
     188:	10 93 12 02 	sts	0x0212, r17
		LDS   R17                , Kernel+0x03            ;load Byte3,              (2 clocks)
     18c:	10 91 13 02 	lds	r17, 0x0213
		ADC   R17                , R1                     ;add carry with Byte3,    (1 clock )
     190:	11 1d       	adc	r17, r1
		STS   Kernel+0x03        , R17                    ;set Byte3,               (2 clocks)
     192:	10 93 13 02 	sts	0x0213, r17
		LDS   R17                , Kernel+0x04            ;load Byte4,              (2 clocks)
     196:	10 91 14 02 	lds	r17, 0x0214
		ADC   R17                , R1                     ;add carry with Byte4,    (1 clock )
     19a:	11 1d       	adc	r17, r1
		STS   Kernel+0x04        , R17                    ;set Byte4,               (2 clocks)
     19c:	10 93 14 02 	sts	0x0214, r17
		
		
	;RS_CNTXT:
		;;===============================context restore====================================;;
		;; total 68 clocks for context restore
		POP   R31                                         ;restore R31,             (2 clocks) 
     1a0:	ff 91       	pop	r31
		POP   R30                                         ;restore R30,             (2 clocks) 
     1a2:	ef 91       	pop	r30
		POP   R29                                         ;restore R29,             (2 clocks)
     1a4:	df 91       	pop	r29
		POP   R28                                         ;restore R28,             (2 clocks) 
     1a6:	cf 91       	pop	r28
		POP   R27                                         ;restore R27,             (2 clocks) 
     1a8:	bf 91       	pop	r27
		POP   R26                                         ;restore R26,             (2 clocks) 
     1aa:	af 91       	pop	r26
		POP   R25                                         ;restore R25,             (2 clocks) 
     1ac:	9f 91       	pop	r25
		POP   R24                                         ;restore R24,             (2 clocks) 
     1ae:	8f 91       	pop	r24
		POP   R23                                         ;restore R23,             (2 clocks) 
     1b0:	7f 91       	pop	r23
		POP   R22                                         ;restore R22,             (2 clocks) 
     1b2:	6f 91       	pop	r22
		POP   R21                                         ;restore R21,             (2 clocks) 
     1b4:	5f 91       	pop	r21
		POP   R20                                         ;restore R20,             (2 clocks) 
     1b6:	4f 91       	pop	r20
		POP   R19                                         ;restore R19,             (2 clocks) 
     1b8:	3f 91       	pop	r19
		POP   R18                                         ;restore R18,             (2 clocks) 
     1ba:	2f 91       	pop	r18
		POP   R17                                         ;restore R17,             (2 clocks) 
     1bc:	1f 91       	pop	r17
		POP   R16                                         ;restore R16,             (2 clocks) 
     1be:	0f 91       	pop	r16
		POP   R15                                         ;restore R15,             (2 clocks) 
     1c0:	ff 90       	pop	r15
		POP   R14                                         ;restore R14,             (2 clocks) 
     1c2:	ef 90       	pop	r14
		POP   R13                                         ;restore R13,             (2 clocks) 
     1c4:	df 90       	pop	r13
		POP   R12                                         ;restore R12,             (2 clocks) 
     1c6:	cf 90       	pop	r12
		POP   R11                                         ;restore R11,             (2 clocks) 
     1c8:	bf 90       	pop	r11
		POP   R10                                         ;restore R10,             (2 clocks) 
     1ca:	af 90       	pop	r10
		POP   R9                                          ;restore R9,              (2 clocks) 
     1cc:	9f 90       	pop	r9
		POP   R8                                          ;restore R8,              (2 clocks) 
     1ce:	8f 90       	pop	r8
		POP   R7                                          ;restore R7,              (2 clocks) 
     1d0:	7f 90       	pop	r7
		POP   R6                                          ;restore R6,              (2 clocks) 
     1d2:	6f 90       	pop	r6
		POP   R5                                          ;restore R5,              (2 clocks) 
     1d4:	5f 90       	pop	r5
		POP   R4                                          ;restore R4,              (2 clocks) 
     1d6:	4f 90       	pop	r4
		POP   R3                                          ;restore R3,              (2 clocks) 
     1d8:	3f 90       	pop	r3
		POP   R2                                          ;restore R2,              (2 clocks) 
     1da:	2f 90       	pop	r2
		POP   R1                                          ;restore R1,              (2 clocks) 
     1dc:	1f 90       	pop	r1
		POP   R0                                          ;fetch SREG,              (2 clocks) 
     1de:	0f 90       	pop	r0
		OUT   0x3F               , R0                     ;load SREG,               (1 clock ) 
     1e0:	0f be       	out	0x3f, r0	; 63
		POP   R0                                          ;restore R0,              (2 clocks) 
     1e2:	0f 90       	pop	r0
		
		
		;;============================if kernel debug enabled===============================;;
		#ifdef KER_DBG_ENABLE
		CBI   KER_DBG_PORT       , KER_DBG_PIN            ;clear gpio,              (2 clocks)
     1e4:	29 98       	cbi	0x05, 1	; 5
		#endif
		
		RETI                                              ;return from interrupt,   (4 clocks) 
     1e6:	18 95       	reti

000001e8 <Kernel_SysTick_Reg_Init>:

;;====================================SysTick Reg Init=======================================;;
;; total 32 clocks for SysTick Reg Init, omited debug gpio config
Kernel_SysTick_Reg_Init:
        ;clear all kernel variables
		LDI   R16                , 0x00                   ;set ker_tski to 0,       (1 clock )
     1e8:	00 e0       	ldi	r16, 0x00	; 0
		STS   ker_tski           , R16                    ;load  ker_tski=0,        (2 clocks)
     1ea:	00 93 19 02 	sts	0x0219, r16
		STS   Kernel+0x00        , R16                    ;clear  kernel[0],        (2 clocks)
     1ee:	00 93 10 02 	sts	0x0210, r16
		STS   Kernel+0x01        , R16                    ;clear  kernel[1],        (2 clocks)
     1f2:	00 93 11 02 	sts	0x0211, r16
		STS   Kernel+0x02        , R16                    ;clear  kernel[2],        (2 clocks)
     1f6:	00 93 12 02 	sts	0x0212, r16
		STS   Kernel+0x03        , R16                    ;clear  kernel[3],        (2 clocks)
     1fa:	00 93 13 02 	sts	0x0213, r16
		STS   Kernel+0x04        , R16                    ;clear  kernel[4],        (2 clocks)
     1fe:	00 93 14 02 	sts	0x0214, r16
		STS   Kernel+0x05        , R16                    ;clear  kernel[5],        (2 clocks)
     202:	00 93 15 02 	sts	0x0215, r16
		STS   Kernel+0x06        , R16                    ;clear  kernel[6],        (2 clocks)
     206:	00 93 16 02 	sts	0x0216, r16
		STS   Kernel+0x07        , R16                    ;clear  kernel[7],        (2 clocks)
     20a:	00 93 17 02 	sts	0x0217, r16
		STS   Kernel+0x08        , R16                    ;clear  kernel[8],        (2 clocks)
     20e:	00 93 18 02 	sts	0x0218, r16
		
		#ifdef KER_DBG_ENABLE
		SBI   KER_DBG_DDR        , KER_DBG_PIN            ;set bit in DDR,          (2 clocks) 
     212:	21 9a       	sbi	0x04, 1	; 4
		CBI   KER_DBG_PORT       , KER_DBG_PIN            ;clear port bit,          (2 clocks) 
     214:	29 98       	cbi	0x05, 1	; 5
		#endif
		
		
        CLI                                               ;disable global interrupt,(1 clock ) 
     216:	f8 94       	cli
		LDI   R16                , 0x00                   ;store r16 with 0,        (1 clock ) 
     218:	00 e0       	ldi	r16, 0x00	; 0
		STS   SRTCCR0A           , R16                    ;clear TCCR0A,            (2 clocks) 
     21a:	00 93 44 00 	sts	0x0044, r16
		STS   SRTCCR0B           , R16                    ;clear TCCR0B,            (2 clocks) 
     21e:	00 93 45 00 	sts	0x0045, r16
		STS   SRTIMSK0           , R16                    ;clear TIMSK0,            (2 clocks) 
     222:	00 93 6e 00 	sts	0x006E, r16
		STS   SRTIFR0            , R16                    ;clear TIFR0,             (2 clocks) 
     226:	00 93 35 00 	sts	0x0035, r16
		STS   SROCR0A            , R16                    ;clear OCR0A,             (2 clocks) 
     22a:	00 93 47 00 	sts	0x0047, r16
		STS   SROCR0B            , R16                    ;clear OCR0B,             (2 clocks) 
     22e:	00 93 48 00 	sts	0x0048, r16
		STS   SRTCNT0            , R16                    ;clear TCNT0,             (2 clocks) 
     232:	00 93 46 00 	sts	0x0046, r16
		LDI   R16                , KER_PRS                ;prescaler 64,            (1 clock ) 
     236:	03 e0       	ldi	r16, 0x03	; 3
		STS   SRTCCR0B           , R16                    ;set to TCCR0B,           (2 clocks)
     238:	00 93 45 00 	sts	0x0045, r16
		LDI   R16                , KER_RLD                ;reload value (130),      (1 clock ) 
     23c:	02 e8       	ldi	r16, 0x82	; 130
		STS   Kernel+0x08        , R16                    ;Kernel[5] reload value,  (2 clocks) 
     23e:	00 93 18 02 	sts	0x0218, r16
		STS   SRTCNT0            , R16                    ;set to TCNT0,            (2 clocks) 
     242:	00 93 46 00 	sts	0x0046, r16
		LDI   R16                , 0x01                   ;store with TOIE0 enabled,(1 clock ) 
     246:	01 e0       	ldi	r16, 0x01	; 1
		STS   SRTIMSK0           , R16                    ;set to TIMSK0,           (2 clocks) 
     248:	00 93 6e 00 	sts	0x006E, r16
		SEI                                               ;enable global interrupt, (1 clock ) 
     24c:	78 94       	sei
		RET                                               ;return from subroutine,  (4 clocks) 
     24e:	08 95       	ret

00000250 <Kernel_SysTick_Val_Get>:

;;===================================SysTick Value Get======================================;;
;; total 20 clocks for SysTick Value Get
;; interrupts disabled for 16 clocks
Kernel_SysTick_Val_Get:
        IN    R16                , IOSREG                 ;Save SREG,               (1 clock ) 
     250:	0f b7       	in	r16, 0x3f	; 63
        CLI                                               ;Disable interrupts,      (1 clock ) 
     252:	f8 94       	cli
		LDS   R18		         , Kernel+0x00            ;Byte0 -> R18 (LSB),      (2 clocks) 
     254:	20 91 10 02 	lds	r18, 0x0210
		LDS   R19		         , Kernel+0x01            ;Byte1 -> R19,            (2 clocks) 
     258:	30 91 11 02 	lds	r19, 0x0211
		LDS   R20		         , Kernel+0x02            ;Byte2 -> R20,            (2 clocks) 
     25c:	40 91 12 02 	lds	r20, 0x0212
		LDS   R21		         , Kernel+0x03            ;Byte3 -> R21,            (2 clocks) 
     260:	50 91 13 02 	lds	r21, 0x0213
		LDS   R22		         , Kernel+0x04            ;Byte4 -> R22,            (2 clocks) 
     264:	60 91 14 02 	lds	r22, 0x0214
		LDI   R23		         , 0x00                   ;Byte4 -> R23,            (2 clocks) 
     268:	70 e0       	ldi	r23, 0x00	; 0
		LDI   R24		         , 0x00                   ;Byte4 -> R24,            (2 clocks) 
     26a:	80 e0       	ldi	r24, 0x00	; 0
		LDI   R25		         , 0x00                   ;Byte4 -> R25 (MSB),      (2 clocks) 
     26c:	90 e0       	ldi	r25, 0x00	; 0
		OUT   IOSREG             , R16          		  ;Restore SREG,            (1 clock )
     26e:	0f bf       	out	0x3f, r16	; 63
		RET                                               ;return from subroutine,  (4 clocks) 
     270:	08 95       	ret

00000272 <Kernel_Interrupt_Sts_Get>:


;;=================================Interrupt Status Get=====================================;;
;; total 10 clocks for Interrupt Status Get
Kernel_Interrupt_Sts_Get:
        LDI   R24		         , 0x00                   ;clear R24,               (1 clock ) 
     272:	80 e0       	ldi	r24, 0x00	; 0
        IN    R16		         , IOSREG                 ;save SREG in R16,        (1 clock )
     274:	0f b7       	in	r16, 0x3f	; 63
		SBRC  R16		         , 0x07                   ;check I flag->bit7,      (3 clocks)
     276:	07 fd       	sbrc	r16, 7
		LDI   R24		         , 0x01                   ;set R24 to 1,            (1 clock ) 
     278:	81 e0       	ldi	r24, 0x01	; 1
		RET                                               ;return from subroutine,  (4 clocks) 
     27a:	08 95       	ret

0000027c <Kernel_Test_Task0>:


;;===================================Kernel Test Task0======================================;;
Kernel_Test_Task0:
        ;initialize DDR and Port register, total 4 clocks
        SBI   KER_TSK0_DDR       , KER_TSK0_PIN           ;set bit in DDR,          (2 clocks) 
     27c:	55 9a       	sbi	0x0a, 5	; 10
		CBI   KER_TSK0_PORT      , KER_TSK0_PIN           ;clear port bit,          (2 clocks)
     27e:	5d 98       	cbi	0x0b, 5	; 11

00000280 <LOOP0>:
		 
    LOOP0:
	    ;pin toggle, total 5 clocks
		IN    R16                , KER_TSK0_PORT          ;load PORT val,           (2 clocks)
     280:	0b b1       	in	r16, 0x0b	; 11
		LDI   R17                , (1<<KER_TSK0_PIN)      ;bit mask for port pin    (1 clock )
     282:	10 e2       	ldi	r17, 0x20	; 32
		EOR   R16                , R17                    ;XOR with current val     (1 clock )
     284:	01 27       	eor	r16, r17
		OUT   KER_TSK0_PORT      , R16                    ;set new PORT val,        (1 clock )
     286:	0b b9       	out	0x0b, r16	; 11
		
		;assign delay loop count val, for 30ms 
		LDI   R16                , 0xEB                   ;set loop cnt val,        (1 clock )
     288:	0b ee       	ldi	r16, 0xEB	; 235

0000028a <DLY00>:
		
    DLY00:
	    LDI   R17                , 0xFF                   ;set loop cnt val,        (1 clock )
     28a:	1f ef       	ldi	r17, 0xFF	; 255

0000028c <DLY01>:
		
	DLY01:                                                ;inner loop,127.5uS@8Mhz  (4 clocks)
		NOP                                               ;no operation,            (1 clock )
     28c:	00 00       	nop
		DEC   R17                                         ;decrement R17 val,       (1 clock )
     28e:	1a 95       	dec	r17
		BRNE  DLY01                                       ;if R17 not equal to 0,   (2 clock ) 
     290:	e9 f7       	brne	.-6      	; 0x28c <DLY01>
		DEC   R16                                         ;decrement R16 val,       (1 clock )
     292:	0a 95       	dec	r16
		BRNE  DLY00                                       ;if R16 not equal to 0,   (2 clock ) 
     294:	d1 f7       	brne	.-12     	; 0x28a <DLY00>
		RJMP  LOOP0                                       ;if R16 is 0->jump,       (2 clock ) 
     296:	f4 cf       	rjmp	.-24     	; 0x280 <LOOP0>
		RET                                               ;return from subroutine,  (4 clocks) 
     298:	08 95       	ret

0000029a <Kernel_Test_Task1>:


;;===================================Kernel Test Task1======================================;;
Kernel_Test_Task1:
        ;initialize DDR and Port register, total 4 clocks
        SBI   KER_TSK1_DDR       , KER_TSK1_PIN           ;set bit in DDR,          (2 clocks) 
     29a:	56 9a       	sbi	0x0a, 6	; 10
		CBI   KER_TSK1_PORT      , KER_TSK1_PIN           ;clear port bit,          (2 clocks)
     29c:	5e 98       	cbi	0x0b, 6	; 11

0000029e <LOOP1>:
		 
    LOOP1:
	    ;pin toggle, total 5 clocks
		IN    R16                , KER_TSK1_PORT          ;load PORT val,           (2 clocks)
     29e:	0b b1       	in	r16, 0x0b	; 11
		LDI   R17                , (1<<KER_TSK1_PIN)      ;bit mask for port pin    (1 clock )
     2a0:	10 e4       	ldi	r17, 0x40	; 64
		EOR   R16                , R17                    ;XOR with current val     (1 clock )
     2a2:	01 27       	eor	r16, r17
		OUT   KER_TSK1_PORT      , R16                    ;set new PORT val,        (1 clock )
     2a4:	0b b9       	out	0x0b, r16	; 11
		
		;assign delay loop count val, for 30ms 
		LDI   R16                , 0xEB                   ;set loop cnt val,        (1 clock )
     2a6:	0b ee       	ldi	r16, 0xEB	; 235

000002a8 <DLY10>:
		
    DLY10:
	    LDI   R17                , 0xFF                   ;set loop cnt val,        (1 clock )
     2a8:	1f ef       	ldi	r17, 0xFF	; 255

000002aa <DLY11>:
		
	DLY11:                                                ;inner loop,127.5uS@8Mhz  (4 clocks)
		NOP                                               ;no operation,            (1 clock )
     2aa:	00 00       	nop
		DEC   R17                                         ;decrement R17 val,       (1 clock )
     2ac:	1a 95       	dec	r17
		BRNE  DLY11                                       ;if R17 not equal to 0,   (2 clock ) 
     2ae:	e9 f7       	brne	.-6      	; 0x2aa <DLY11>
		DEC   R16                                         ;decrement R16 val,       (1 clock )
     2b0:	0a 95       	dec	r16
		BRNE  DLY10                                       ;if R16 not equal to 0,   (2 clock ) 
     2b2:	d1 f7       	brne	.-12     	; 0x2a8 <DLY10>
		RJMP  LOOP1                                       ;if R16 is 0->jump,       (2 clock ) 
     2b4:	f4 cf       	rjmp	.-24     	; 0x29e <LOOP1>

000002b6 <Kernel_Test_Task2>:


;;===================================Kernel Test Task2======================================;;
Kernel_Test_Task2:
        ;initialize DDR and Port register, total 4 clocks
        SBI   KER_TSK2_DDR       , KER_TSK2_PIN           ;set bit in DDR,          (2 clocks) 
     2b6:	57 9a       	sbi	0x0a, 7	; 10
		CBI   KER_TSK2_PORT      , KER_TSK2_PIN           ;clear port bit,          (2 clocks)
     2b8:	5f 98       	cbi	0x0b, 7	; 11

000002ba <LOOP2>:
		 
    LOOP2:
	    ;pin toggle, total 5 clocks
		IN    R16                , KER_TSK2_PORT          ;load PORT val,           (2 clocks)
     2ba:	0b b1       	in	r16, 0x0b	; 11
		LDI   R17                , (1<<KER_TSK2_PIN)      ;bit mask for port pin    (1 clock )
     2bc:	10 e8       	ldi	r17, 0x80	; 128
		EOR   R16                , R17                    ;XOR with current val     (1 clock )
     2be:	01 27       	eor	r16, r17
		OUT   KER_TSK2_PORT      , R16                    ;set new PORT val,        (1 clock )
     2c0:	0b b9       	out	0x0b, r16	; 11
		
		;assign delay loop count val, for 30ms 
		LDI   R16                , 0xEB                   ;set loop cnt val,        (1 clock )
     2c2:	0b ee       	ldi	r16, 0xEB	; 235

000002c4 <DLY20>:
		
    DLY20:
	    LDI   R17                , 0xFF                   ;set loop cnt val,        (1 clock )
     2c4:	1f ef       	ldi	r17, 0xFF	; 255

000002c6 <DLY21>:
		
	DLY21:                                                ;inner loop, 127.5uS@8Mhz (4 clocks)
		NOP                                               ;no operation,            (1 clock )
     2c6:	00 00       	nop
		DEC   R17                                         ;decrement R17 val,       (1 clock )
     2c8:	1a 95       	dec	r17
		BRNE  DLY21                                       ;if R17 not equal to 0,   (2 clock ) 
     2ca:	e9 f7       	brne	.-6      	; 0x2c6 <DLY21>
		DEC   R16                                         ;decrement R16 val,       (1 clock )
     2cc:	0a 95       	dec	r16
		BRNE  DLY20                                       ;if R16 not equal to 0,   (2 clock ) 
     2ce:	d1 f7       	brne	.-12     	; 0x2c4 <DLY20>
		RJMP  LOOP2                                       ;if R16 is 0->jump,       (2 clock ) 
     2d0:	f4 cf       	rjmp	.-24     	; 0x2ba <LOOP2>

000002d2 <Kernel_Task0_Init>:
    

;;====================================Kernel Task0 Init=====================================;;
Kernel_Task0_Init:
        ;init stack for task0
		LDI   R18                , lo8(ker_stk0+KER_STZ)  ;fetch top SPL1,          (1 clock )
     2d2:	20 ea       	ldi	r18, 0xA0	; 160
		LDI   R19                , hi8(ker_stk0+KER_STZ)  ;fetch top SPH1,          (1 clock )
     2d4:	32 e0       	ldi	r19, 0x02	; 2
		
		OUT   IOSPL              , R18
     2d6:	2d bf       	out	0x3d, r18	; 61
        OUT   IOSPH              , R19
     2d8:	3e bf       	out	0x3e, r19	; 62
		
		LDI   R16                , lo8(Kernel_Test_Task0)
     2da:	0c e7       	ldi	r16, 0x7C	; 124
        PUSH  R16
     2dc:	0f 93       	push	r16
        LDI   R16                , hi8(Kernel_Test_Task0)
     2de:	02 e0       	ldi	r16, 0x02	; 2
        PUSH  R16
     2e0:	0f 93       	push	r16
		
		;push task1 entry to stack1
		LDI   R16                , lo8(Kernel_Test_Task0) ;fetch task1 entry low,   (1 clock )
     2e2:	0c e7       	ldi	r16, 0x7C	; 124
		PUSH  R16                                         ;push to SPL1,            (1 clock )
     2e4:	0f 93       	push	r16
		LDI   R16                , hi8(Kernel_Test_Task0) ;fetch task1 entry high,  (1 clock )
     2e6:	02 e0       	ldi	r16, 0x02	; 2
		PUSH  R16                                         ;push to SPH1,            (1 clock )
     2e8:	0f 93       	push	r16
		
		
        ;;==============================context save========================================;;
		;; total 68 clocks for context saving
        PUSH  R0                                          ;save R0,                 (2 clocks)
     2ea:	0f 92       	push	r0
		IN    R0                 , IOSREG                 ;load SREG,               (1 clock )
     2ec:	0f b6       	in	r0, 0x3f	; 63
		PUSH  R0                                          ;save SREG,               (2 clocks)
     2ee:	0f 92       	push	r0
		PUSH  R1                                          ;save R1,                 (2 clocks)   
     2f0:	1f 92       	push	r1
		CLR   R1                                          ;clear R1,                (1 clock )
     2f2:	11 24       	eor	r1, r1
		PUSH  R2                                          ;save R2,                 (2 clocks)   
     2f4:	2f 92       	push	r2
		PUSH  R3                                          ;save R3,                 (2 clocks)   
     2f6:	3f 92       	push	r3
		PUSH  R4                                          ;save R4,                 (2 clocks)   
     2f8:	4f 92       	push	r4
		PUSH  R5                                          ;save R5,                 (2 clocks)   
     2fa:	5f 92       	push	r5
		PUSH  R6                                          ;save R6,                 (2 clocks)   
     2fc:	6f 92       	push	r6
		PUSH  R7                                          ;save R7,                 (2 clocks)   
     2fe:	7f 92       	push	r7
		PUSH  R8                                          ;save R8,                 (2 clocks)   
     300:	8f 92       	push	r8
		PUSH  R9                                          ;save R9,                 (2 clocks)   
     302:	9f 92       	push	r9
		PUSH  R10                                         ;save R10,                (2 clocks)   
     304:	af 92       	push	r10
		PUSH  R11                                         ;save R11,                (2 clocks)  
     306:	bf 92       	push	r11
		PUSH  R12                                         ;save R12,                (2 clocks)  
     308:	cf 92       	push	r12
		PUSH  R13                                         ;save R13,                (2 clocks)  
     30a:	df 92       	push	r13
		PUSH  R14                                         ;save R14,                (2 clocks)  
     30c:	ef 92       	push	r14
		PUSH  R15                                         ;save R15,                (2 clocks)  
     30e:	ff 92       	push	r15
		PUSH  R16                                         ;save R16,                (2 clocks)  
     310:	0f 93       	push	r16
		PUSH  R17                                         ;save R17,                (2 clocks)  
     312:	1f 93       	push	r17
		PUSH  R18                                         ;save R18,                (2 clocks)  
     314:	2f 93       	push	r18
		PUSH  R19                                         ;save R19,                (2 clocks)  
     316:	3f 93       	push	r19
		PUSH  R20                                         ;save R20,                (2 clocks)  
     318:	4f 93       	push	r20
		PUSH  R21                                         ;save R21,                (2 clocks)  
     31a:	5f 93       	push	r21
		PUSH  R22                                         ;save R22,                (2 clocks)  
     31c:	6f 93       	push	r22
		PUSH  R23                                         ;save R23,                (2 clocks)  
     31e:	7f 93       	push	r23
		PUSH  R24                                         ;save R24,                (2 clocks)  
     320:	8f 93       	push	r24
		PUSH  R25                                         ;save R25,                (2 clocks)  
     322:	9f 93       	push	r25
		PUSH  R26                                         ;save R26,                (2 clocks)  
     324:	af 93       	push	r26
		PUSH  R27                                         ;save R27,                (2 clocks)  
     326:	bf 93       	push	r27
		PUSH  R28                                         ;save R28,                (2 clocks)  
     328:	cf 93       	push	r28
		PUSH  R29                                         ;save R29,                (2 clocks)  
     32a:	df 93       	push	r29
		PUSH  R30                                         ;save R30,                (2 clocks)  
     32c:	ef 93       	push	r30
		PUSH  R31                                         ;save R31,                (2 clocks) 
     32e:	ff 93       	push	r31
		
		;--- Step 5: Save current SP into ker_stp[1] (task1 pointer) ---
        IN    R20, IOSPL
     330:	4d b7       	in	r20, 0x3d	; 61
        IN    R21, IOSPH
     332:	5e b7       	in	r21, 0x3e	; 62
        STS   ker_stp + 0        , R20                    ; Task 1 is index 1
     334:	40 93 1a 02 	sts	0x021A, r20
        STS   ker_stp + 1        , R21
     338:	50 93 1b 02 	sts	0x021B, r21
        RET                                               ;return from subroutine,  (4 clocks) 
     33c:	08 95       	ret

0000033e <Kernel_Task1_Init>:


;;====================================Kernel Task0 Init=====================================;;
Kernel_Task1_Init:
        ;init stack for task0
		LDI   R18                , lo8(ker_stk1+KER_STZ)  ;fetch top SPL1,          (1 clock )
     33e:	20 e2       	ldi	r18, 0x20	; 32
		LDI   R19                , hi8(ker_stk1+KER_STZ)  ;fetch top SPH1,          (1 clock )
     340:	33 e0       	ldi	r19, 0x03	; 3
		
		OUT   IOSPL              , R18
     342:	2d bf       	out	0x3d, r18	; 61
        OUT   IOSPH              , R19
     344:	3e bf       	out	0x3e, r19	; 62
		
		LDI   R16                , lo8(Kernel_Test_Task1)
     346:	0a e9       	ldi	r16, 0x9A	; 154
        PUSH  R16
     348:	0f 93       	push	r16
        LDI   R16                , hi8(Kernel_Test_Task1)
     34a:	02 e0       	ldi	r16, 0x02	; 2
        PUSH  R16
     34c:	0f 93       	push	r16
		
		;push task1 entry to stack1
		LDI   R16                , lo8(Kernel_Test_Task1) ;fetch task1 entry low,   (1 clock )
     34e:	0a e9       	ldi	r16, 0x9A	; 154
		PUSH  R16                                         ;push to SPL1,            (1 clock )
     350:	0f 93       	push	r16
		LDI   R16                , hi8(Kernel_Test_Task1) ;fetch task1 entry high,  (1 clock )
     352:	02 e0       	ldi	r16, 0x02	; 2
		PUSH  R16                                         ;push to SPH1,            (1 clock )
     354:	0f 93       	push	r16
		
		
        ;;==============================context save========================================;;
		;; total 68 clocks for context saving
        PUSH  R0                                          ;save R0,                 (2 clocks)
     356:	0f 92       	push	r0
		IN    R0                 , IOSREG                 ;load SREG,               (1 clock )
     358:	0f b6       	in	r0, 0x3f	; 63
		PUSH  R0                                          ;save SREG,               (2 clocks)
     35a:	0f 92       	push	r0
		PUSH  R1                                          ;save R1,                 (2 clocks)   
     35c:	1f 92       	push	r1
		CLR   R1                                          ;clear R1,                (1 clock )
     35e:	11 24       	eor	r1, r1
		PUSH  R2                                          ;save R2,                 (2 clocks)   
     360:	2f 92       	push	r2
		PUSH  R3                                          ;save R3,                 (2 clocks)   
     362:	3f 92       	push	r3
		PUSH  R4                                          ;save R4,                 (2 clocks)   
     364:	4f 92       	push	r4
		PUSH  R5                                          ;save R5,                 (2 clocks)   
     366:	5f 92       	push	r5
		PUSH  R6                                          ;save R6,                 (2 clocks)   
     368:	6f 92       	push	r6
		PUSH  R7                                          ;save R7,                 (2 clocks)   
     36a:	7f 92       	push	r7
		PUSH  R8                                          ;save R8,                 (2 clocks)   
     36c:	8f 92       	push	r8
		PUSH  R9                                          ;save R9,                 (2 clocks)   
     36e:	9f 92       	push	r9
		PUSH  R10                                         ;save R10,                (2 clocks)   
     370:	af 92       	push	r10
		PUSH  R11                                         ;save R11,                (2 clocks)  
     372:	bf 92       	push	r11
		PUSH  R12                                         ;save R12,                (2 clocks)  
     374:	cf 92       	push	r12
		PUSH  R13                                         ;save R13,                (2 clocks)  
     376:	df 92       	push	r13
		PUSH  R14                                         ;save R14,                (2 clocks)  
     378:	ef 92       	push	r14
		PUSH  R15                                         ;save R15,                (2 clocks)  
     37a:	ff 92       	push	r15
		PUSH  R16                                         ;save R16,                (2 clocks)  
     37c:	0f 93       	push	r16
		PUSH  R17                                         ;save R17,                (2 clocks)  
     37e:	1f 93       	push	r17
		PUSH  R18                                         ;save R18,                (2 clocks)  
     380:	2f 93       	push	r18
		PUSH  R19                                         ;save R19,                (2 clocks)  
     382:	3f 93       	push	r19
		PUSH  R20                                         ;save R20,                (2 clocks)  
     384:	4f 93       	push	r20
		PUSH  R21                                         ;save R21,                (2 clocks)  
     386:	5f 93       	push	r21
		PUSH  R22                                         ;save R22,                (2 clocks)  
     388:	6f 93       	push	r22
		PUSH  R23                                         ;save R23,                (2 clocks)  
     38a:	7f 93       	push	r23
		PUSH  R24                                         ;save R24,                (2 clocks)  
     38c:	8f 93       	push	r24
		PUSH  R25                                         ;save R25,                (2 clocks)  
     38e:	9f 93       	push	r25
		PUSH  R26                                         ;save R26,                (2 clocks)  
     390:	af 93       	push	r26
		PUSH  R27                                         ;save R27,                (2 clocks)  
     392:	bf 93       	push	r27
		PUSH  R28                                         ;save R28,                (2 clocks)  
     394:	cf 93       	push	r28
		PUSH  R29                                         ;save R29,                (2 clocks)  
     396:	df 93       	push	r29
		PUSH  R30                                         ;save R30,                (2 clocks)  
     398:	ef 93       	push	r30
		PUSH  R31                                         ;save R31,                (2 clocks) 
     39a:	ff 93       	push	r31
		
		;--- Step 5: Save current SP into ker_stp[1] (task1 pointer) ---
        IN    R20, IOSPL
     39c:	4d b7       	in	r20, 0x3d	; 61
        IN    R21, IOSPH
     39e:	5e b7       	in	r21, 0x3e	; 62
        STS   ker_stp + 2        , R20                    ; Task 1 is index 1
     3a0:	40 93 1c 02 	sts	0x021C, r20
        STS   ker_stp + 3        , R21
     3a4:	50 93 1d 02 	sts	0x021D, r21
        RET                                               ;return from subroutine,  (4 clocks) 
     3a8:	08 95       	ret

000003aa <__umoddi3>:
     3aa:	ab e5       	ldi	r26, 0x5B	; 91
     3ac:	b0 e0       	ldi	r27, 0x00	; 0
     3ae:	eb ed       	ldi	r30, 0xDB	; 219
     3b0:	f1 e0       	ldi	r31, 0x01	; 1
     3b2:	0c 94 86 08 	jmp	0x110c	; 0x110c <__prologue_saves__>
     3b6:	a8 e0       	ldi	r26, 0x08	; 8
     3b8:	4e 01       	movw	r8, r28
     3ba:	08 94       	sec
     3bc:	81 1c       	adc	r8, r1
     3be:	91 1c       	adc	r9, r1
     3c0:	f4 01       	movw	r30, r8
     3c2:	6a 2e       	mov	r6, r26
     3c4:	11 92       	st	Z+, r1
     3c6:	6a 94       	dec	r6
     3c8:	e9 f7       	brne	.-6      	; 0x3c4 <__umoddi3+0x1a>
     3ca:	29 83       	std	Y+1, r18	; 0x01
     3cc:	3a 83       	std	Y+2, r19	; 0x02
     3ce:	4b 83       	std	Y+3, r20	; 0x03
     3d0:	5c 83       	std	Y+4, r21	; 0x04
     3d2:	6d 83       	std	Y+5, r22	; 0x05
     3d4:	7e 83       	std	Y+6, r23	; 0x06
     3d6:	8f 83       	std	Y+7, r24	; 0x07
     3d8:	98 87       	std	Y+8, r25	; 0x08
     3da:	ce 01       	movw	r24, r28
     3dc:	09 96       	adiw	r24, 0x09	; 9
     3de:	fc 01       	movw	r30, r24
     3e0:	11 92       	st	Z+, r1
     3e2:	aa 95       	dec	r26
     3e4:	e9 f7       	brne	.-6      	; 0x3e0 <__umoddi3+0x36>
     3e6:	a9 86       	std	Y+9, r10	; 0x09
     3e8:	ba 86       	std	Y+10, r11	; 0x0a
     3ea:	cb 86       	std	Y+11, r12	; 0x0b
     3ec:	dc 86       	std	Y+12, r13	; 0x0c
     3ee:	ed 86       	std	Y+13, r14	; 0x0d
     3f0:	fe 86       	std	Y+14, r15	; 0x0e
     3f2:	0f 87       	std	Y+15, r16	; 0x0f
     3f4:	18 8b       	std	Y+16, r17	; 0x10
     3f6:	29 84       	ldd	r2, Y+9	; 0x09
     3f8:	3a 84       	ldd	r3, Y+10	; 0x0a
     3fa:	4b 84       	ldd	r4, Y+11	; 0x0b
     3fc:	5c 84       	ldd	r5, Y+12	; 0x0c
     3fe:	ad 84       	ldd	r10, Y+13	; 0x0d
     400:	be 84       	ldd	r11, Y+14	; 0x0e
     402:	cf 84       	ldd	r12, Y+15	; 0x0f
     404:	d8 88       	ldd	r13, Y+16	; 0x10
     406:	29 81       	ldd	r18, Y+1	; 0x01
     408:	3a 81       	ldd	r19, Y+2	; 0x02
     40a:	4b 81       	ldd	r20, Y+3	; 0x03
     40c:	5c 81       	ldd	r21, Y+4	; 0x04
     40e:	69 96       	adiw	r28, 0x19	; 25
     410:	2f af       	std	Y+63, r18	; 0x3f
     412:	69 97       	sbiw	r28, 0x19	; 25
     414:	6a 96       	adiw	r28, 0x1a	; 26
     416:	3f af       	std	Y+63, r19	; 0x3f
     418:	6a 97       	sbiw	r28, 0x1a	; 26
     41a:	6b 96       	adiw	r28, 0x1b	; 27
     41c:	4f af       	std	Y+63, r20	; 0x3f
     41e:	6b 97       	sbiw	r28, 0x1b	; 27
     420:	6c 96       	adiw	r28, 0x1c	; 28
     422:	5f af       	std	Y+63, r21	; 0x3f
     424:	6c 97       	sbiw	r28, 0x1c	; 28
     426:	6c 96       	adiw	r28, 0x1c	; 28
     428:	6c ac       	ldd	r6, Y+60	; 0x3c
     42a:	7d ac       	ldd	r7, Y+61	; 0x3d
     42c:	8e ac       	ldd	r8, Y+62	; 0x3e
     42e:	9f ac       	ldd	r9, Y+63	; 0x3f
     430:	6c 97       	sbiw	r28, 0x1c	; 28
     432:	69 aa       	std	Y+49, r6	; 0x31
     434:	7a aa       	std	Y+50, r7	; 0x32
     436:	8b aa       	std	Y+51, r8	; 0x33
     438:	9c aa       	std	Y+52, r9	; 0x34
     43a:	6d 81       	ldd	r22, Y+5	; 0x05
     43c:	7e 81       	ldd	r23, Y+6	; 0x06
     43e:	8f 81       	ldd	r24, Y+7	; 0x07
     440:	98 85       	ldd	r25, Y+8	; 0x08
     442:	3b 01       	movw	r6, r22
     444:	4c 01       	movw	r8, r24
     446:	6d aa       	std	Y+53, r6	; 0x35
     448:	7e aa       	std	Y+54, r7	; 0x36
     44a:	8f aa       	std	Y+55, r8	; 0x37
     44c:	98 ae       	std	Y+56, r9	; 0x38
     44e:	a1 14       	cp	r10, r1
     450:	b1 04       	cpc	r11, r1
     452:	c1 04       	cpc	r12, r1
     454:	d1 04       	cpc	r13, r1
     456:	09 f0       	breq	.+2      	; 0x45a <KER_TR+0x72>
     458:	04 c3       	rjmp	.+1544   	; 0xa62 <__stack+0x163>
     45a:	62 14       	cp	r6, r2
     45c:	73 04       	cpc	r7, r3
     45e:	84 04       	cpc	r8, r4
     460:	95 04       	cpc	r9, r5
     462:	08 f0       	brcs	.+2      	; 0x466 <KER_TR+0x7e>
     464:	00 c1       	rjmp	.+512    	; 0x666 <KER_TR+0x27e>
     466:	00 e0       	ldi	r16, 0x00	; 0
     468:	20 16       	cp	r2, r16
     46a:	00 e0       	ldi	r16, 0x00	; 0
     46c:	30 06       	cpc	r3, r16
     46e:	01 e0       	ldi	r16, 0x01	; 1
     470:	40 06       	cpc	r4, r16
     472:	00 e0       	ldi	r16, 0x00	; 0
     474:	50 06       	cpc	r5, r16
     476:	88 f4       	brcc	.+34     	; 0x49a <KER_TR+0xb2>
     478:	1f ef       	ldi	r17, 0xFF	; 255
     47a:	21 16       	cp	r2, r17
     47c:	31 04       	cpc	r3, r1
     47e:	41 04       	cpc	r4, r1
     480:	51 04       	cpc	r5, r1
     482:	39 f0       	breq	.+14     	; 0x492 <KER_TR+0xaa>
     484:	30 f0       	brcs	.+12     	; 0x492 <KER_TR+0xaa>
     486:	88 e0       	ldi	r24, 0x08	; 8
     488:	e8 2e       	mov	r14, r24
     48a:	f1 2c       	mov	r15, r1
     48c:	01 2d       	mov	r16, r1
     48e:	11 2d       	mov	r17, r1
     490:	18 c0       	rjmp	.+48     	; 0x4c2 <KER_TR+0xda>
     492:	ee 24       	eor	r14, r14
     494:	ff 24       	eor	r15, r15
     496:	87 01       	movw	r16, r14
     498:	14 c0       	rjmp	.+40     	; 0x4c2 <KER_TR+0xda>
     49a:	40 e0       	ldi	r20, 0x00	; 0
     49c:	24 16       	cp	r2, r20
     49e:	40 e0       	ldi	r20, 0x00	; 0
     4a0:	34 06       	cpc	r3, r20
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	44 06       	cpc	r4, r20
     4a6:	41 e0       	ldi	r20, 0x01	; 1
     4a8:	54 06       	cpc	r5, r20
     4aa:	30 f0       	brcs	.+12     	; 0x4b8 <KER_TR+0xd0>
     4ac:	b8 e1       	ldi	r27, 0x18	; 24
     4ae:	eb 2e       	mov	r14, r27
     4b0:	f1 2c       	mov	r15, r1
     4b2:	01 2d       	mov	r16, r1
     4b4:	11 2d       	mov	r17, r1
     4b6:	05 c0       	rjmp	.+10     	; 0x4c2 <KER_TR+0xda>
     4b8:	a0 e1       	ldi	r26, 0x10	; 16
     4ba:	ea 2e       	mov	r14, r26
     4bc:	f1 2c       	mov	r15, r1
     4be:	01 2d       	mov	r16, r1
     4c0:	11 2d       	mov	r17, r1
     4c2:	d2 01       	movw	r26, r4
     4c4:	c1 01       	movw	r24, r2
     4c6:	0e 2c       	mov	r0, r14
     4c8:	04 c0       	rjmp	.+8      	; 0x4d2 <KER_TR+0xea>
     4ca:	b6 95       	lsr	r27
     4cc:	a7 95       	ror	r26
     4ce:	97 95       	ror	r25
     4d0:	87 95       	ror	r24
     4d2:	0a 94       	dec	r0
     4d4:	d2 f7       	brpl	.-12     	; 0x4ca <KER_TR+0xe2>
     4d6:	80 50       	subi	r24, 0x00	; 0
     4d8:	9f 4f       	sbci	r25, 0xFF	; 255
     4da:	dc 01       	movw	r26, r24
     4dc:	2c 91       	ld	r18, X
     4de:	80 e2       	ldi	r24, 0x20	; 32
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	a0 e0       	ldi	r26, 0x00	; 0
     4e4:	b0 e0       	ldi	r27, 0x00	; 0
     4e6:	8e 19       	sub	r24, r14
     4e8:	9f 09       	sbc	r25, r15
     4ea:	a0 0b       	sbc	r26, r16
     4ec:	b1 0b       	sbc	r27, r17
     4ee:	5c 01       	movw	r10, r24
     4f0:	6d 01       	movw	r12, r26
     4f2:	a2 1a       	sub	r10, r18
     4f4:	b1 08       	sbc	r11, r1
     4f6:	c1 08       	sbc	r12, r1
     4f8:	d1 08       	sbc	r13, r1
     4fa:	a9 ae       	std	Y+57, r10	; 0x39
     4fc:	ba ae       	std	Y+58, r11	; 0x3a
     4fe:	cb ae       	std	Y+59, r12	; 0x3b
     500:	dc ae       	std	Y+60, r13	; 0x3c
     502:	a1 14       	cp	r10, r1
     504:	b1 04       	cpc	r11, r1
     506:	c1 04       	cpc	r12, r1
     508:	d1 04       	cpc	r13, r1
     50a:	09 f4       	brne	.+2      	; 0x50e <KER_TR+0x126>
     50c:	3f c0       	rjmp	.+126    	; 0x58c <KER_TR+0x1a4>
     50e:	69 ad       	ldd	r22, Y+57	; 0x39
     510:	06 2e       	mov	r0, r22
     512:	04 c0       	rjmp	.+8      	; 0x51c <KER_TR+0x134>
     514:	22 0c       	add	r2, r2
     516:	33 1c       	adc	r3, r3
     518:	44 1c       	adc	r4, r4
     51a:	55 1c       	adc	r5, r5
     51c:	0a 94       	dec	r0
     51e:	d2 f7       	brpl	.-12     	; 0x514 <KER_TR+0x12c>
     520:	a4 01       	movw	r20, r8
     522:	93 01       	movw	r18, r6
     524:	06 2e       	mov	r0, r22
     526:	04 c0       	rjmp	.+8      	; 0x530 <KER_TR+0x148>
     528:	22 0f       	add	r18, r18
     52a:	33 1f       	adc	r19, r19
     52c:	44 1f       	adc	r20, r20
     52e:	55 1f       	adc	r21, r21
     530:	0a 94       	dec	r0
     532:	d2 f7       	brpl	.-12     	; 0x528 <KER_TR+0x140>
     534:	80 e2       	ldi	r24, 0x20	; 32
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	8a 19       	sub	r24, r10
     53a:	9b 09       	sbc	r25, r11
     53c:	6c 96       	adiw	r28, 0x1c	; 28
     53e:	cc ac       	ldd	r12, Y+60	; 0x3c
     540:	dd ac       	ldd	r13, Y+61	; 0x3d
     542:	ee ac       	ldd	r14, Y+62	; 0x3e
     544:	ff ac       	ldd	r15, Y+63	; 0x3f
     546:	6c 97       	sbiw	r28, 0x1c	; 28
     548:	04 c0       	rjmp	.+8      	; 0x552 <KER_TR+0x16a>
     54a:	f6 94       	lsr	r15
     54c:	e7 94       	ror	r14
     54e:	d7 94       	ror	r13
     550:	c7 94       	ror	r12
     552:	8a 95       	dec	r24
     554:	d2 f7       	brpl	.-12     	; 0x54a <KER_TR+0x162>
     556:	87 01       	movw	r16, r14
     558:	76 01       	movw	r14, r12
     55a:	e2 2a       	or	r14, r18
     55c:	f3 2a       	or	r15, r19
     55e:	04 2b       	or	r16, r20
     560:	15 2b       	or	r17, r21
     562:	ed aa       	std	Y+53, r14	; 0x35
     564:	fe aa       	std	Y+54, r15	; 0x36
     566:	0f ab       	std	Y+55, r16	; 0x37
     568:	18 af       	std	Y+56, r17	; 0x38
     56a:	6c 96       	adiw	r28, 0x1c	; 28
     56c:	8c ad       	ldd	r24, Y+60	; 0x3c
     56e:	9d ad       	ldd	r25, Y+61	; 0x3d
     570:	ae ad       	ldd	r26, Y+62	; 0x3e
     572:	bf ad       	ldd	r27, Y+63	; 0x3f
     574:	6c 97       	sbiw	r28, 0x1c	; 28
     576:	04 c0       	rjmp	.+8      	; 0x580 <KER_TR+0x198>
     578:	88 0f       	add	r24, r24
     57a:	99 1f       	adc	r25, r25
     57c:	aa 1f       	adc	r26, r26
     57e:	bb 1f       	adc	r27, r27
     580:	6a 95       	dec	r22
     582:	d2 f7       	brpl	.-12     	; 0x578 <KER_TR+0x190>
     584:	89 ab       	std	Y+49, r24	; 0x31
     586:	9a ab       	std	Y+50, r25	; 0x32
     588:	ab ab       	std	Y+51, r26	; 0x33
     58a:	bc ab       	std	Y+52, r27	; 0x34
     58c:	32 01       	movw	r6, r4
     58e:	88 24       	eor	r8, r8
     590:	99 24       	eor	r9, r9
     592:	b2 01       	movw	r22, r4
     594:	a1 01       	movw	r20, r2
     596:	60 70       	andi	r22, 0x00	; 0
     598:	70 70       	andi	r23, 0x00	; 0
     59a:	21 96       	adiw	r28, 0x01	; 1
     59c:	4c af       	std	Y+60, r20	; 0x3c
     59e:	5d af       	std	Y+61, r21	; 0x3d
     5a0:	6e af       	std	Y+62, r22	; 0x3e
     5a2:	7f af       	std	Y+63, r23	; 0x3f
     5a4:	21 97       	sbiw	r28, 0x01	; 1
     5a6:	6d a9       	ldd	r22, Y+53	; 0x35
     5a8:	7e a9       	ldd	r23, Y+54	; 0x36
     5aa:	8f a9       	ldd	r24, Y+55	; 0x37
     5ac:	98 ad       	ldd	r25, Y+56	; 0x38
     5ae:	a4 01       	movw	r20, r8
     5b0:	93 01       	movw	r18, r6
     5b2:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     5b6:	7b 01       	movw	r14, r22
     5b8:	8c 01       	movw	r16, r24
     5ba:	6d a9       	ldd	r22, Y+53	; 0x35
     5bc:	7e a9       	ldd	r23, Y+54	; 0x36
     5be:	8f a9       	ldd	r24, Y+55	; 0x37
     5c0:	98 ad       	ldd	r25, Y+56	; 0x38
     5c2:	a4 01       	movw	r20, r8
     5c4:	93 01       	movw	r18, r6
     5c6:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     5ca:	ca 01       	movw	r24, r20
     5cc:	b9 01       	movw	r22, r18
     5ce:	21 96       	adiw	r28, 0x01	; 1
     5d0:	2c ad       	ldd	r18, Y+60	; 0x3c
     5d2:	3d ad       	ldd	r19, Y+61	; 0x3d
     5d4:	4e ad       	ldd	r20, Y+62	; 0x3e
     5d6:	5f ad       	ldd	r21, Y+63	; 0x3f
     5d8:	21 97       	sbiw	r28, 0x01	; 1
     5da:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     5de:	9b 01       	movw	r18, r22
     5e0:	ac 01       	movw	r20, r24
     5e2:	87 01       	movw	r16, r14
     5e4:	ff 24       	eor	r15, r15
     5e6:	ee 24       	eor	r14, r14
     5e8:	a9 a8       	ldd	r10, Y+49	; 0x31
     5ea:	ba a8       	ldd	r11, Y+50	; 0x32
     5ec:	cb a8       	ldd	r12, Y+51	; 0x33
     5ee:	dc a8       	ldd	r13, Y+52	; 0x34
     5f0:	c6 01       	movw	r24, r12
     5f2:	aa 27       	eor	r26, r26
     5f4:	bb 27       	eor	r27, r27
     5f6:	57 01       	movw	r10, r14
     5f8:	68 01       	movw	r12, r16
     5fa:	a8 2a       	or	r10, r24
     5fc:	b9 2a       	or	r11, r25
     5fe:	ca 2a       	or	r12, r26
     600:	db 2a       	or	r13, r27
     602:	a2 16       	cp	r10, r18
     604:	b3 06       	cpc	r11, r19
     606:	c4 06       	cpc	r12, r20
     608:	d5 06       	cpc	r13, r21
     60a:	90 f4       	brcc	.+36     	; 0x630 <KER_TR+0x248>
     60c:	a2 0c       	add	r10, r2
     60e:	b3 1c       	adc	r11, r3
     610:	c4 1c       	adc	r12, r4
     612:	d5 1c       	adc	r13, r5
     614:	a2 14       	cp	r10, r2
     616:	b3 04       	cpc	r11, r3
     618:	c4 04       	cpc	r12, r4
     61a:	d5 04       	cpc	r13, r5
     61c:	48 f0       	brcs	.+18     	; 0x630 <KER_TR+0x248>
     61e:	a2 16       	cp	r10, r18
     620:	b3 06       	cpc	r11, r19
     622:	c4 06       	cpc	r12, r20
     624:	d5 06       	cpc	r13, r21
     626:	20 f4       	brcc	.+8      	; 0x630 <KER_TR+0x248>
     628:	a2 0c       	add	r10, r2
     62a:	b3 1c       	adc	r11, r3
     62c:	c4 1c       	adc	r12, r4
     62e:	d5 1c       	adc	r13, r5
     630:	a2 1a       	sub	r10, r18
     632:	b3 0a       	sbc	r11, r19
     634:	c4 0a       	sbc	r12, r20
     636:	d5 0a       	sbc	r13, r21
     638:	c6 01       	movw	r24, r12
     63a:	b5 01       	movw	r22, r10
     63c:	a4 01       	movw	r20, r8
     63e:	93 01       	movw	r18, r6
     640:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     644:	7b 01       	movw	r14, r22
     646:	8c 01       	movw	r16, r24
     648:	c6 01       	movw	r24, r12
     64a:	b5 01       	movw	r22, r10
     64c:	a4 01       	movw	r20, r8
     64e:	93 01       	movw	r18, r6
     650:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     654:	ca 01       	movw	r24, r20
     656:	b9 01       	movw	r22, r18
     658:	21 96       	adiw	r28, 0x01	; 1
     65a:	2c ad       	ldd	r18, Y+60	; 0x3c
     65c:	3d ad       	ldd	r19, Y+61	; 0x3d
     65e:	4e ad       	ldd	r20, Y+62	; 0x3e
     660:	5f ad       	ldd	r21, Y+63	; 0x3f
     662:	21 97       	sbiw	r28, 0x01	; 1
     664:	ba c1       	rjmp	.+884    	; 0x9da <__stack+0xdb>
     666:	21 14       	cp	r2, r1
     668:	31 04       	cpc	r3, r1
     66a:	41 04       	cpc	r4, r1
     66c:	51 04       	cpc	r5, r1
     66e:	71 f4       	brne	.+28     	; 0x68c <KER_TR+0x2a4>
     670:	61 e0       	ldi	r22, 0x01	; 1
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	20 e0       	ldi	r18, 0x00	; 0
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     684:	c9 01       	movw	r24, r18
     686:	da 01       	movw	r26, r20
     688:	1c 01       	movw	r2, r24
     68a:	2d 01       	movw	r4, r26
     68c:	00 e0       	ldi	r16, 0x00	; 0
     68e:	20 16       	cp	r2, r16
     690:	00 e0       	ldi	r16, 0x00	; 0
     692:	30 06       	cpc	r3, r16
     694:	01 e0       	ldi	r16, 0x01	; 1
     696:	40 06       	cpc	r4, r16
     698:	00 e0       	ldi	r16, 0x00	; 0
     69a:	50 06       	cpc	r5, r16
     69c:	88 f4       	brcc	.+34     	; 0x6c0 <KER_TR+0x2d8>
     69e:	1f ef       	ldi	r17, 0xFF	; 255
     6a0:	21 16       	cp	r2, r17
     6a2:	31 04       	cpc	r3, r1
     6a4:	41 04       	cpc	r4, r1
     6a6:	51 04       	cpc	r5, r1
     6a8:	39 f0       	breq	.+14     	; 0x6b8 <KER_TR+0x2d0>
     6aa:	30 f0       	brcs	.+12     	; 0x6b8 <KER_TR+0x2d0>
     6ac:	68 e0       	ldi	r22, 0x08	; 8
     6ae:	e6 2e       	mov	r14, r22
     6b0:	f1 2c       	mov	r15, r1
     6b2:	01 2d       	mov	r16, r1
     6b4:	11 2d       	mov	r17, r1
     6b6:	18 c0       	rjmp	.+48     	; 0x6e8 <KER_TR+0x300>
     6b8:	ee 24       	eor	r14, r14
     6ba:	ff 24       	eor	r15, r15
     6bc:	87 01       	movw	r16, r14
     6be:	14 c0       	rjmp	.+40     	; 0x6e8 <KER_TR+0x300>
     6c0:	40 e0       	ldi	r20, 0x00	; 0
     6c2:	24 16       	cp	r2, r20
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	34 06       	cpc	r3, r20
     6c8:	40 e0       	ldi	r20, 0x00	; 0
     6ca:	44 06       	cpc	r4, r20
     6cc:	41 e0       	ldi	r20, 0x01	; 1
     6ce:	54 06       	cpc	r5, r20
     6d0:	30 f0       	brcs	.+12     	; 0x6de <KER_TR+0x2f6>
     6d2:	58 e1       	ldi	r21, 0x18	; 24
     6d4:	e5 2e       	mov	r14, r21
     6d6:	f1 2c       	mov	r15, r1
     6d8:	01 2d       	mov	r16, r1
     6da:	11 2d       	mov	r17, r1
     6dc:	05 c0       	rjmp	.+10     	; 0x6e8 <KER_TR+0x300>
     6de:	40 e1       	ldi	r20, 0x10	; 16
     6e0:	e4 2e       	mov	r14, r20
     6e2:	f1 2c       	mov	r15, r1
     6e4:	01 2d       	mov	r16, r1
     6e6:	11 2d       	mov	r17, r1
     6e8:	d2 01       	movw	r26, r4
     6ea:	c1 01       	movw	r24, r2
     6ec:	0e 2c       	mov	r0, r14
     6ee:	04 c0       	rjmp	.+8      	; 0x6f8 <KER_TR+0x310>
     6f0:	b6 95       	lsr	r27
     6f2:	a7 95       	ror	r26
     6f4:	97 95       	ror	r25
     6f6:	87 95       	ror	r24
     6f8:	0a 94       	dec	r0
     6fa:	d2 f7       	brpl	.-12     	; 0x6f0 <KER_TR+0x308>
     6fc:	80 50       	subi	r24, 0x00	; 0
     6fe:	9f 4f       	sbci	r25, 0xFF	; 255
     700:	dc 01       	movw	r26, r24
     702:	2c 91       	ld	r18, X
     704:	30 e2       	ldi	r19, 0x20	; 32
     706:	a3 2e       	mov	r10, r19
     708:	b1 2c       	mov	r11, r1
     70a:	c1 2c       	mov	r12, r1
     70c:	d1 2c       	mov	r13, r1
     70e:	d6 01       	movw	r26, r12
     710:	c5 01       	movw	r24, r10
     712:	8e 19       	sub	r24, r14
     714:	9f 09       	sbc	r25, r15
     716:	a0 0b       	sbc	r26, r16
     718:	b1 0b       	sbc	r27, r17
     71a:	7c 01       	movw	r14, r24
     71c:	8d 01       	movw	r16, r26
     71e:	e2 1a       	sub	r14, r18
     720:	f1 08       	sbc	r15, r1
     722:	01 09       	sbc	r16, r1
     724:	11 09       	sbc	r17, r1
     726:	e9 ae       	std	Y+57, r14	; 0x39
     728:	fa ae       	std	Y+58, r15	; 0x3a
     72a:	0b af       	std	Y+59, r16	; 0x3b
     72c:	1c af       	std	Y+60, r17	; 0x3c
     72e:	e1 14       	cp	r14, r1
     730:	f1 04       	cpc	r15, r1
     732:	01 05       	cpc	r16, r1
     734:	11 05       	cpc	r17, r1
     736:	39 f4       	brne	.+14     	; 0x746 <KER_TR+0x35e>
     738:	64 01       	movw	r12, r8
     73a:	53 01       	movw	r10, r6
     73c:	a2 18       	sub	r10, r2
     73e:	b3 08       	sbc	r11, r3
     740:	c4 08       	sbc	r12, r4
     742:	d5 08       	sbc	r13, r5
     744:	e2 c0       	rjmp	.+452    	; 0x90a <__stack+0xb>
     746:	f9 ac       	ldd	r15, Y+57	; 0x39
     748:	68 96       	adiw	r28, 0x18	; 24
     74a:	ff ae       	std	Y+63, r15	; 0x3f
     74c:	68 97       	sbiw	r28, 0x18	; 24
     74e:	0f 2c       	mov	r0, r15
     750:	04 c0       	rjmp	.+8      	; 0x75a <KER_TR+0x372>
     752:	22 0c       	add	r2, r2
     754:	33 1c       	adc	r3, r3
     756:	44 1c       	adc	r4, r4
     758:	55 1c       	adc	r5, r5
     75a:	0a 94       	dec	r0
     75c:	d2 f7       	brpl	.-12     	; 0x752 <KER_TR+0x36a>
     75e:	8a 2d       	mov	r24, r10
     760:	8f 19       	sub	r24, r15
     762:	64 01       	movw	r12, r8
     764:	53 01       	movw	r10, r6
     766:	08 2e       	mov	r0, r24
     768:	04 c0       	rjmp	.+8      	; 0x772 <KER_TR+0x38a>
     76a:	d6 94       	lsr	r13
     76c:	c7 94       	ror	r12
     76e:	b7 94       	ror	r11
     770:	a7 94       	ror	r10
     772:	0a 94       	dec	r0
     774:	d2 f7       	brpl	.-12     	; 0x76a <KER_TR+0x382>
     776:	a4 01       	movw	r20, r8
     778:	93 01       	movw	r18, r6
     77a:	04 c0       	rjmp	.+8      	; 0x784 <KER_TR+0x39c>
     77c:	22 0f       	add	r18, r18
     77e:	33 1f       	adc	r19, r19
     780:	44 1f       	adc	r20, r20
     782:	55 1f       	adc	r21, r21
     784:	fa 94       	dec	r15
     786:	d2 f7       	brpl	.-12     	; 0x77c <KER_TR+0x394>
     788:	6c 96       	adiw	r28, 0x1c	; 28
     78a:	6c ac       	ldd	r6, Y+60	; 0x3c
     78c:	7d ac       	ldd	r7, Y+61	; 0x3d
     78e:	8e ac       	ldd	r8, Y+62	; 0x3e
     790:	9f ac       	ldd	r9, Y+63	; 0x3f
     792:	6c 97       	sbiw	r28, 0x1c	; 28
     794:	04 c0       	rjmp	.+8      	; 0x79e <KER_TR+0x3b6>
     796:	96 94       	lsr	r9
     798:	87 94       	ror	r8
     79a:	77 94       	ror	r7
     79c:	67 94       	ror	r6
     79e:	8a 95       	dec	r24
     7a0:	d2 f7       	brpl	.-12     	; 0x796 <KER_TR+0x3ae>
     7a2:	84 01       	movw	r16, r8
     7a4:	73 01       	movw	r14, r6
     7a6:	e2 2a       	or	r14, r18
     7a8:	f3 2a       	or	r15, r19
     7aa:	04 2b       	or	r16, r20
     7ac:	15 2b       	or	r17, r21
     7ae:	ed a6       	std	Y+45, r14	; 0x2d
     7b0:	fe a6       	std	Y+46, r15	; 0x2e
     7b2:	0f a7       	std	Y+47, r16	; 0x2f
     7b4:	18 ab       	std	Y+48, r17	; 0x30
     7b6:	32 01       	movw	r6, r4
     7b8:	88 24       	eor	r8, r8
     7ba:	99 24       	eor	r9, r9
     7bc:	b2 01       	movw	r22, r4
     7be:	a1 01       	movw	r20, r2
     7c0:	60 70       	andi	r22, 0x00	; 0
     7c2:	70 70       	andi	r23, 0x00	; 0
     7c4:	25 96       	adiw	r28, 0x05	; 5
     7c6:	4c af       	std	Y+60, r20	; 0x3c
     7c8:	5d af       	std	Y+61, r21	; 0x3d
     7ca:	6e af       	std	Y+62, r22	; 0x3e
     7cc:	7f af       	std	Y+63, r23	; 0x3f
     7ce:	25 97       	sbiw	r28, 0x05	; 5
     7d0:	c6 01       	movw	r24, r12
     7d2:	b5 01       	movw	r22, r10
     7d4:	a4 01       	movw	r20, r8
     7d6:	93 01       	movw	r18, r6
     7d8:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     7dc:	7b 01       	movw	r14, r22
     7de:	8c 01       	movw	r16, r24
     7e0:	c6 01       	movw	r24, r12
     7e2:	b5 01       	movw	r22, r10
     7e4:	a4 01       	movw	r20, r8
     7e6:	93 01       	movw	r18, r6
     7e8:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     7ec:	ca 01       	movw	r24, r20
     7ee:	b9 01       	movw	r22, r18
     7f0:	25 96       	adiw	r28, 0x05	; 5
     7f2:	2c ad       	ldd	r18, Y+60	; 0x3c
     7f4:	3d ad       	ldd	r19, Y+61	; 0x3d
     7f6:	4e ad       	ldd	r20, Y+62	; 0x3e
     7f8:	5f ad       	ldd	r21, Y+63	; 0x3f
     7fa:	25 97       	sbiw	r28, 0x05	; 5
     7fc:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     800:	9b 01       	movw	r18, r22
     802:	ac 01       	movw	r20, r24
     804:	87 01       	movw	r16, r14
     806:	ff 24       	eor	r15, r15
     808:	ee 24       	eor	r14, r14
     80a:	ad a4       	ldd	r10, Y+45	; 0x2d
     80c:	be a4       	ldd	r11, Y+46	; 0x2e
     80e:	cf a4       	ldd	r12, Y+47	; 0x2f
     810:	d8 a8       	ldd	r13, Y+48	; 0x30
     812:	c6 01       	movw	r24, r12
     814:	aa 27       	eor	r26, r26
     816:	bb 27       	eor	r27, r27
     818:	5c 01       	movw	r10, r24
     81a:	6d 01       	movw	r12, r26
     81c:	ae 28       	or	r10, r14
     81e:	bf 28       	or	r11, r15
     820:	c0 2a       	or	r12, r16
     822:	d1 2a       	or	r13, r17
     824:	a2 16       	cp	r10, r18
     826:	b3 06       	cpc	r11, r19
     828:	c4 06       	cpc	r12, r20
     82a:	d5 06       	cpc	r13, r21
     82c:	90 f4       	brcc	.+36     	; 0x852 <KER_TR+0x46a>
     82e:	a2 0c       	add	r10, r2
     830:	b3 1c       	adc	r11, r3
     832:	c4 1c       	adc	r12, r4
     834:	d5 1c       	adc	r13, r5
     836:	a2 14       	cp	r10, r2
     838:	b3 04       	cpc	r11, r3
     83a:	c4 04       	cpc	r12, r4
     83c:	d5 04       	cpc	r13, r5
     83e:	48 f0       	brcs	.+18     	; 0x852 <KER_TR+0x46a>
     840:	a2 16       	cp	r10, r18
     842:	b3 06       	cpc	r11, r19
     844:	c4 06       	cpc	r12, r20
     846:	d5 06       	cpc	r13, r21
     848:	20 f4       	brcc	.+8      	; 0x852 <KER_TR+0x46a>
     84a:	a2 0c       	add	r10, r2
     84c:	b3 1c       	adc	r11, r3
     84e:	c4 1c       	adc	r12, r4
     850:	d5 1c       	adc	r13, r5
     852:	a2 1a       	sub	r10, r18
     854:	b3 0a       	sbc	r11, r19
     856:	c4 0a       	sbc	r12, r20
     858:	d5 0a       	sbc	r13, r21
     85a:	c6 01       	movw	r24, r12
     85c:	b5 01       	movw	r22, r10
     85e:	a4 01       	movw	r20, r8
     860:	93 01       	movw	r18, r6
     862:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     866:	7b 01       	movw	r14, r22
     868:	8c 01       	movw	r16, r24
     86a:	c6 01       	movw	r24, r12
     86c:	b5 01       	movw	r22, r10
     86e:	a4 01       	movw	r20, r8
     870:	93 01       	movw	r18, r6
     872:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     876:	ca 01       	movw	r24, r20
     878:	b9 01       	movw	r22, r18
     87a:	25 96       	adiw	r28, 0x05	; 5
     87c:	2c ad       	ldd	r18, Y+60	; 0x3c
     87e:	3d ad       	ldd	r19, Y+61	; 0x3d
     880:	4e ad       	ldd	r20, Y+62	; 0x3e
     882:	5f ad       	ldd	r21, Y+63	; 0x3f
     884:	25 97       	sbiw	r28, 0x05	; 5
     886:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     88a:	9b 01       	movw	r18, r22
     88c:	ac 01       	movw	r20, r24
     88e:	87 01       	movw	r16, r14
     890:	ff 24       	eor	r15, r15
     892:	ee 24       	eor	r14, r14
     894:	8d a5       	ldd	r24, Y+45	; 0x2d
     896:	9e a5       	ldd	r25, Y+46	; 0x2e
     898:	af a5       	ldd	r26, Y+47	; 0x2f
     89a:	b8 a9       	ldd	r27, Y+48	; 0x30
     89c:	a0 70       	andi	r26, 0x00	; 0
     89e:	b0 70       	andi	r27, 0x00	; 0
     8a0:	57 01       	movw	r10, r14
     8a2:	68 01       	movw	r12, r16
     8a4:	a8 2a       	or	r10, r24
     8a6:	b9 2a       	or	r11, r25
     8a8:	ca 2a       	or	r12, r26
     8aa:	db 2a       	or	r13, r27
     8ac:	a2 16       	cp	r10, r18
     8ae:	b3 06       	cpc	r11, r19
     8b0:	c4 06       	cpc	r12, r20
     8b2:	d5 06       	cpc	r13, r21
     8b4:	90 f4       	brcc	.+36     	; 0x8da <KER_TR+0x4f2>
     8b6:	a2 0c       	add	r10, r2
     8b8:	b3 1c       	adc	r11, r3
     8ba:	c4 1c       	adc	r12, r4
     8bc:	d5 1c       	adc	r13, r5
     8be:	a2 14       	cp	r10, r2
     8c0:	b3 04       	cpc	r11, r3
     8c2:	c4 04       	cpc	r12, r4
     8c4:	d5 04       	cpc	r13, r5
     8c6:	48 f0       	brcs	.+18     	; 0x8da <KER_TR+0x4f2>
     8c8:	a2 16       	cp	r10, r18
     8ca:	b3 06       	cpc	r11, r19
     8cc:	c4 06       	cpc	r12, r20
     8ce:	d5 06       	cpc	r13, r21
     8d0:	20 f4       	brcc	.+8      	; 0x8da <KER_TR+0x4f2>
     8d2:	a2 0c       	add	r10, r2
     8d4:	b3 1c       	adc	r11, r3
     8d6:	c4 1c       	adc	r12, r4
     8d8:	d5 1c       	adc	r13, r5
     8da:	6c 96       	adiw	r28, 0x1c	; 28
     8dc:	ec ac       	ldd	r14, Y+60	; 0x3c
     8de:	fd ac       	ldd	r15, Y+61	; 0x3d
     8e0:	0e ad       	ldd	r16, Y+62	; 0x3e
     8e2:	1f ad       	ldd	r17, Y+63	; 0x3f
     8e4:	6c 97       	sbiw	r28, 0x1c	; 28
     8e6:	68 96       	adiw	r28, 0x18	; 24
     8e8:	0f ac       	ldd	r0, Y+63	; 0x3f
     8ea:	68 97       	sbiw	r28, 0x18	; 24
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <KER_TR+0x50e>
     8ee:	ee 0c       	add	r14, r14
     8f0:	ff 1c       	adc	r15, r15
     8f2:	00 1f       	adc	r16, r16
     8f4:	11 1f       	adc	r17, r17
     8f6:	0a 94       	dec	r0
     8f8:	d2 f7       	brpl	.-12     	; 0x8ee <KER_TR+0x506>
     8fa:	e9 aa       	std	Y+49, r14	; 0x31
     8fc:	fa aa       	std	Y+50, r15	; 0x32
     8fe:	0b ab       	std	Y+51, r16	; 0x33
     900:	1c ab       	std	Y+52, r17	; 0x34
     902:	a2 1a       	sub	r10, r18
     904:	b3 0a       	sbc	r11, r19
     906:	c4 0a       	sbc	r12, r20
     908:	d5 0a       	sbc	r13, r21
     90a:	32 01       	movw	r6, r4
     90c:	88 24       	eor	r8, r8
     90e:	99 24       	eor	r9, r9
     910:	b2 01       	movw	r22, r4
     912:	a1 01       	movw	r20, r2
     914:	60 70       	andi	r22, 0x00	; 0
     916:	70 70       	andi	r23, 0x00	; 0
     918:	29 96       	adiw	r28, 0x09	; 9
     91a:	4c af       	std	Y+60, r20	; 0x3c
     91c:	5d af       	std	Y+61, r21	; 0x3d
     91e:	6e af       	std	Y+62, r22	; 0x3e
     920:	7f af       	std	Y+63, r23	; 0x3f
     922:	29 97       	sbiw	r28, 0x09	; 9
     924:	c6 01       	movw	r24, r12
     926:	b5 01       	movw	r22, r10
     928:	a4 01       	movw	r20, r8
     92a:	93 01       	movw	r18, r6
     92c:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     930:	7b 01       	movw	r14, r22
     932:	8c 01       	movw	r16, r24
     934:	c6 01       	movw	r24, r12
     936:	b5 01       	movw	r22, r10
     938:	a4 01       	movw	r20, r8
     93a:	93 01       	movw	r18, r6
     93c:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     940:	ca 01       	movw	r24, r20
     942:	b9 01       	movw	r22, r18
     944:	29 96       	adiw	r28, 0x09	; 9
     946:	2c ad       	ldd	r18, Y+60	; 0x3c
     948:	3d ad       	ldd	r19, Y+61	; 0x3d
     94a:	4e ad       	ldd	r20, Y+62	; 0x3e
     94c:	5f ad       	ldd	r21, Y+63	; 0x3f
     94e:	29 97       	sbiw	r28, 0x09	; 9
     950:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     954:	9b 01       	movw	r18, r22
     956:	ac 01       	movw	r20, r24
     958:	87 01       	movw	r16, r14
     95a:	ff 24       	eor	r15, r15
     95c:	ee 24       	eor	r14, r14
     95e:	a9 a8       	ldd	r10, Y+49	; 0x31
     960:	ba a8       	ldd	r11, Y+50	; 0x32
     962:	cb a8       	ldd	r12, Y+51	; 0x33
     964:	dc a8       	ldd	r13, Y+52	; 0x34
     966:	c6 01       	movw	r24, r12
     968:	aa 27       	eor	r26, r26
     96a:	bb 27       	eor	r27, r27
     96c:	57 01       	movw	r10, r14
     96e:	68 01       	movw	r12, r16
     970:	a8 2a       	or	r10, r24
     972:	b9 2a       	or	r11, r25
     974:	ca 2a       	or	r12, r26
     976:	db 2a       	or	r13, r27
     978:	a2 16       	cp	r10, r18
     97a:	b3 06       	cpc	r11, r19
     97c:	c4 06       	cpc	r12, r20
     97e:	d5 06       	cpc	r13, r21
     980:	90 f4       	brcc	.+36     	; 0x9a6 <__stack+0xa7>
     982:	a2 0c       	add	r10, r2
     984:	b3 1c       	adc	r11, r3
     986:	c4 1c       	adc	r12, r4
     988:	d5 1c       	adc	r13, r5
     98a:	a2 14       	cp	r10, r2
     98c:	b3 04       	cpc	r11, r3
     98e:	c4 04       	cpc	r12, r4
     990:	d5 04       	cpc	r13, r5
     992:	48 f0       	brcs	.+18     	; 0x9a6 <__stack+0xa7>
     994:	a2 16       	cp	r10, r18
     996:	b3 06       	cpc	r11, r19
     998:	c4 06       	cpc	r12, r20
     99a:	d5 06       	cpc	r13, r21
     99c:	20 f4       	brcc	.+8      	; 0x9a6 <__stack+0xa7>
     99e:	a2 0c       	add	r10, r2
     9a0:	b3 1c       	adc	r11, r3
     9a2:	c4 1c       	adc	r12, r4
     9a4:	d5 1c       	adc	r13, r5
     9a6:	a2 1a       	sub	r10, r18
     9a8:	b3 0a       	sbc	r11, r19
     9aa:	c4 0a       	sbc	r12, r20
     9ac:	d5 0a       	sbc	r13, r21
     9ae:	c6 01       	movw	r24, r12
     9b0:	b5 01       	movw	r22, r10
     9b2:	a4 01       	movw	r20, r8
     9b4:	93 01       	movw	r18, r6
     9b6:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     9ba:	7b 01       	movw	r14, r22
     9bc:	8c 01       	movw	r16, r24
     9be:	c6 01       	movw	r24, r12
     9c0:	b5 01       	movw	r22, r10
     9c2:	a4 01       	movw	r20, r8
     9c4:	93 01       	movw	r18, r6
     9c6:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     9ca:	ca 01       	movw	r24, r20
     9cc:	b9 01       	movw	r22, r18
     9ce:	29 96       	adiw	r28, 0x09	; 9
     9d0:	2c ad       	ldd	r18, Y+60	; 0x3c
     9d2:	3d ad       	ldd	r19, Y+61	; 0x3d
     9d4:	4e ad       	ldd	r20, Y+62	; 0x3e
     9d6:	5f ad       	ldd	r21, Y+63	; 0x3f
     9d8:	29 97       	sbiw	r28, 0x09	; 9
     9da:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     9de:	9b 01       	movw	r18, r22
     9e0:	ac 01       	movw	r20, r24
     9e2:	87 01       	movw	r16, r14
     9e4:	ff 24       	eor	r15, r15
     9e6:	ee 24       	eor	r14, r14
     9e8:	89 a9       	ldd	r24, Y+49	; 0x31
     9ea:	9a a9       	ldd	r25, Y+50	; 0x32
     9ec:	ab a9       	ldd	r26, Y+51	; 0x33
     9ee:	bc a9       	ldd	r27, Y+52	; 0x34
     9f0:	a0 70       	andi	r26, 0x00	; 0
     9f2:	b0 70       	andi	r27, 0x00	; 0
     9f4:	e8 2a       	or	r14, r24
     9f6:	f9 2a       	or	r15, r25
     9f8:	0a 2b       	or	r16, r26
     9fa:	1b 2b       	or	r17, r27
     9fc:	e2 16       	cp	r14, r18
     9fe:	f3 06       	cpc	r15, r19
     a00:	04 07       	cpc	r16, r20
     a02:	15 07       	cpc	r17, r21
     a04:	90 f4       	brcc	.+36     	; 0xa2a <__stack+0x12b>
     a06:	e2 0c       	add	r14, r2
     a08:	f3 1c       	adc	r15, r3
     a0a:	04 1d       	adc	r16, r4
     a0c:	15 1d       	adc	r17, r5
     a0e:	e2 14       	cp	r14, r2
     a10:	f3 04       	cpc	r15, r3
     a12:	04 05       	cpc	r16, r4
     a14:	15 05       	cpc	r17, r5
     a16:	48 f0       	brcs	.+18     	; 0xa2a <__stack+0x12b>
     a18:	e2 16       	cp	r14, r18
     a1a:	f3 06       	cpc	r15, r19
     a1c:	04 07       	cpc	r16, r20
     a1e:	15 07       	cpc	r17, r21
     a20:	20 f4       	brcc	.+8      	; 0xa2a <__stack+0x12b>
     a22:	e2 0c       	add	r14, r2
     a24:	f3 1c       	adc	r15, r3
     a26:	04 1d       	adc	r16, r4
     a28:	15 1d       	adc	r17, r5
     a2a:	e2 1a       	sub	r14, r18
     a2c:	f3 0a       	sbc	r15, r19
     a2e:	04 0b       	sbc	r16, r20
     a30:	15 0b       	sbc	r17, r21
     a32:	d8 01       	movw	r26, r16
     a34:	c7 01       	movw	r24, r14
     a36:	09 ac       	ldd	r0, Y+57	; 0x39
     a38:	04 c0       	rjmp	.+8      	; 0xa42 <__stack+0x143>
     a3a:	b6 95       	lsr	r27
     a3c:	a7 95       	ror	r26
     a3e:	97 95       	ror	r25
     a40:	87 95       	ror	r24
     a42:	0a 94       	dec	r0
     a44:	d2 f7       	brpl	.-12     	; 0xa3a <__stack+0x13b>
     a46:	89 8b       	std	Y+17, r24	; 0x11
     a48:	9a 8b       	std	Y+18, r25	; 0x12
     a4a:	ab 8b       	std	Y+19, r26	; 0x13
     a4c:	bc 8b       	std	Y+20, r27	; 0x14
     a4e:	1d 8a       	std	Y+21, r1	; 0x15
     a50:	1e 8a       	std	Y+22, r1	; 0x16
     a52:	1f 8a       	std	Y+23, r1	; 0x17
     a54:	18 8e       	std	Y+24, r1	; 0x18
     a56:	28 2f       	mov	r18, r24
     a58:	3a 89       	ldd	r19, Y+18	; 0x12
     a5a:	4b 89       	ldd	r20, Y+19	; 0x13
     a5c:	5c 89       	ldd	r21, Y+20	; 0x14
     a5e:	6d 89       	ldd	r22, Y+21	; 0x15
     a60:	0c c3       	rjmp	.+1560   	; 0x107a <__stack+0x77b>
     a62:	6a 14       	cp	r6, r10
     a64:	7b 04       	cpc	r7, r11
     a66:	8c 04       	cpc	r8, r12
     a68:	9d 04       	cpc	r9, r13
     a6a:	08 f4       	brcc	.+2      	; 0xa6e <__stack+0x16f>
     a6c:	09 c3       	rjmp	.+1554   	; 0x1080 <__stack+0x781>
     a6e:	00 e0       	ldi	r16, 0x00	; 0
     a70:	a0 16       	cp	r10, r16
     a72:	00 e0       	ldi	r16, 0x00	; 0
     a74:	b0 06       	cpc	r11, r16
     a76:	01 e0       	ldi	r16, 0x01	; 1
     a78:	c0 06       	cpc	r12, r16
     a7a:	00 e0       	ldi	r16, 0x00	; 0
     a7c:	d0 06       	cpc	r13, r16
     a7e:	88 f4       	brcc	.+34     	; 0xaa2 <__stack+0x1a3>
     a80:	1f ef       	ldi	r17, 0xFF	; 255
     a82:	a1 16       	cp	r10, r17
     a84:	b1 04       	cpc	r11, r1
     a86:	c1 04       	cpc	r12, r1
     a88:	d1 04       	cpc	r13, r1
     a8a:	39 f0       	breq	.+14     	; 0xa9a <__stack+0x19b>
     a8c:	30 f0       	brcs	.+12     	; 0xa9a <__stack+0x19b>
     a8e:	28 e0       	ldi	r18, 0x08	; 8
     a90:	e2 2e       	mov	r14, r18
     a92:	f1 2c       	mov	r15, r1
     a94:	01 2d       	mov	r16, r1
     a96:	11 2d       	mov	r17, r1
     a98:	18 c0       	rjmp	.+48     	; 0xaca <__stack+0x1cb>
     a9a:	ee 24       	eor	r14, r14
     a9c:	ff 24       	eor	r15, r15
     a9e:	87 01       	movw	r16, r14
     aa0:	14 c0       	rjmp	.+40     	; 0xaca <__stack+0x1cb>
     aa2:	40 e0       	ldi	r20, 0x00	; 0
     aa4:	a4 16       	cp	r10, r20
     aa6:	40 e0       	ldi	r20, 0x00	; 0
     aa8:	b4 06       	cpc	r11, r20
     aaa:	40 e0       	ldi	r20, 0x00	; 0
     aac:	c4 06       	cpc	r12, r20
     aae:	41 e0       	ldi	r20, 0x01	; 1
     ab0:	d4 06       	cpc	r13, r20
     ab2:	30 f0       	brcs	.+12     	; 0xac0 <__stack+0x1c1>
     ab4:	98 e1       	ldi	r25, 0x18	; 24
     ab6:	e9 2e       	mov	r14, r25
     ab8:	f1 2c       	mov	r15, r1
     aba:	01 2d       	mov	r16, r1
     abc:	11 2d       	mov	r17, r1
     abe:	05 c0       	rjmp	.+10     	; 0xaca <__stack+0x1cb>
     ac0:	80 e1       	ldi	r24, 0x10	; 16
     ac2:	e8 2e       	mov	r14, r24
     ac4:	f1 2c       	mov	r15, r1
     ac6:	01 2d       	mov	r16, r1
     ac8:	11 2d       	mov	r17, r1
     aca:	d6 01       	movw	r26, r12
     acc:	c5 01       	movw	r24, r10
     ace:	0e 2c       	mov	r0, r14
     ad0:	04 c0       	rjmp	.+8      	; 0xada <__stack+0x1db>
     ad2:	b6 95       	lsr	r27
     ad4:	a7 95       	ror	r26
     ad6:	97 95       	ror	r25
     ad8:	87 95       	ror	r24
     ada:	0a 94       	dec	r0
     adc:	d2 f7       	brpl	.-12     	; 0xad2 <__stack+0x1d3>
     ade:	80 50       	subi	r24, 0x00	; 0
     ae0:	9f 4f       	sbci	r25, 0xFF	; 255
     ae2:	dc 01       	movw	r26, r24
     ae4:	2c 91       	ld	r18, X
     ae6:	80 e2       	ldi	r24, 0x20	; 32
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	8e 19       	sub	r24, r14
     af0:	9f 09       	sbc	r25, r15
     af2:	a0 0b       	sbc	r26, r16
     af4:	b1 0b       	sbc	r27, r17
     af6:	82 1b       	sub	r24, r18
     af8:	91 09       	sbc	r25, r1
     afa:	a1 09       	sbc	r26, r1
     afc:	b1 09       	sbc	r27, r1
     afe:	00 97       	sbiw	r24, 0x00	; 0
     b00:	a1 05       	cpc	r26, r1
     b02:	b1 05       	cpc	r27, r1
     b04:	09 f0       	breq	.+2      	; 0xb08 <__stack+0x209>
     b06:	4f c0       	rjmp	.+158    	; 0xba6 <__stack+0x2a7>
     b08:	a6 14       	cp	r10, r6
     b0a:	b7 04       	cpc	r11, r7
     b0c:	c8 04       	cpc	r12, r8
     b0e:	d9 04       	cpc	r13, r9
     b10:	58 f0       	brcs	.+22     	; 0xb28 <__stack+0x229>
     b12:	6c 96       	adiw	r28, 0x1c	; 28
     b14:	ec ac       	ldd	r14, Y+60	; 0x3c
     b16:	fd ac       	ldd	r15, Y+61	; 0x3d
     b18:	0e ad       	ldd	r16, Y+62	; 0x3e
     b1a:	1f ad       	ldd	r17, Y+63	; 0x3f
     b1c:	6c 97       	sbiw	r28, 0x1c	; 28
     b1e:	e2 14       	cp	r14, r2
     b20:	f3 04       	cpc	r15, r3
     b22:	04 05       	cpc	r16, r4
     b24:	15 05       	cpc	r17, r5
     b26:	68 f1       	brcs	.+90     	; 0xb82 <__stack+0x283>
     b28:	6c 96       	adiw	r28, 0x1c	; 28
     b2a:	ec ac       	ldd	r14, Y+60	; 0x3c
     b2c:	fd ac       	ldd	r15, Y+61	; 0x3d
     b2e:	0e ad       	ldd	r16, Y+62	; 0x3e
     b30:	1f ad       	ldd	r17, Y+63	; 0x3f
     b32:	6c 97       	sbiw	r28, 0x1c	; 28
     b34:	e2 18       	sub	r14, r2
     b36:	f3 08       	sbc	r15, r3
     b38:	04 09       	sbc	r16, r4
     b3a:	15 09       	sbc	r17, r5
     b3c:	a4 01       	movw	r20, r8
     b3e:	93 01       	movw	r18, r6
     b40:	2a 19       	sub	r18, r10
     b42:	3b 09       	sbc	r19, r11
     b44:	4c 09       	sbc	r20, r12
     b46:	5d 09       	sbc	r21, r13
     b48:	aa 24       	eor	r10, r10
     b4a:	bb 24       	eor	r11, r11
     b4c:	65 01       	movw	r12, r10
     b4e:	6c 96       	adiw	r28, 0x1c	; 28
     b50:	6c ad       	ldd	r22, Y+60	; 0x3c
     b52:	7d ad       	ldd	r23, Y+61	; 0x3d
     b54:	8e ad       	ldd	r24, Y+62	; 0x3e
     b56:	9f ad       	ldd	r25, Y+63	; 0x3f
     b58:	6c 97       	sbiw	r28, 0x1c	; 28
     b5a:	6e 15       	cp	r22, r14
     b5c:	7f 05       	cpc	r23, r15
     b5e:	80 07       	cpc	r24, r16
     b60:	91 07       	cpc	r25, r17
     b62:	28 f4       	brcc	.+10     	; 0xb6e <__stack+0x26f>
     b64:	b1 e0       	ldi	r27, 0x01	; 1
     b66:	ab 2e       	mov	r10, r27
     b68:	b1 2c       	mov	r11, r1
     b6a:	c1 2c       	mov	r12, r1
     b6c:	d1 2c       	mov	r13, r1
     b6e:	da 01       	movw	r26, r20
     b70:	c9 01       	movw	r24, r18
     b72:	8a 19       	sub	r24, r10
     b74:	9b 09       	sbc	r25, r11
     b76:	ac 09       	sbc	r26, r12
     b78:	bd 09       	sbc	r27, r13
     b7a:	8d ab       	std	Y+53, r24	; 0x35
     b7c:	9e ab       	std	Y+54, r25	; 0x36
     b7e:	af ab       	std	Y+55, r26	; 0x37
     b80:	b8 af       	std	Y+56, r27	; 0x38
     b82:	e9 8a       	std	Y+17, r14	; 0x11
     b84:	fa 8a       	std	Y+18, r15	; 0x12
     b86:	0b 8b       	std	Y+19, r16	; 0x13
     b88:	1c 8b       	std	Y+20, r17	; 0x14
     b8a:	6d a8       	ldd	r6, Y+53	; 0x35
     b8c:	7e a8       	ldd	r7, Y+54	; 0x36
     b8e:	8f a8       	ldd	r8, Y+55	; 0x37
     b90:	98 ac       	ldd	r9, Y+56	; 0x38
     b92:	6d 8a       	std	Y+21, r6	; 0x15
     b94:	7e 8a       	std	Y+22, r7	; 0x16
     b96:	8f 8a       	std	Y+23, r8	; 0x17
     b98:	98 8e       	std	Y+24, r9	; 0x18
     b9a:	2e 2d       	mov	r18, r14
     b9c:	3a 89       	ldd	r19, Y+18	; 0x12
     b9e:	4b 89       	ldd	r20, Y+19	; 0x13
     ba0:	5c 89       	ldd	r21, Y+20	; 0x14
     ba2:	6d a9       	ldd	r22, Y+53	; 0x35
     ba4:	6a c2       	rjmp	.+1236   	; 0x107a <__stack+0x77b>
     ba6:	67 96       	adiw	r28, 0x17	; 23
     ba8:	8f af       	std	Y+63, r24	; 0x3f
     baa:	67 97       	sbiw	r28, 0x17	; 23
     bac:	a6 01       	movw	r20, r12
     bae:	95 01       	movw	r18, r10
     bb0:	08 2e       	mov	r0, r24
     bb2:	04 c0       	rjmp	.+8      	; 0xbbc <__stack+0x2bd>
     bb4:	22 0f       	add	r18, r18
     bb6:	33 1f       	adc	r19, r19
     bb8:	44 1f       	adc	r20, r20
     bba:	55 1f       	adc	r21, r21
     bbc:	0a 94       	dec	r0
     bbe:	d2 f7       	brpl	.-12     	; 0xbb4 <__stack+0x2b5>
     bc0:	a0 e2       	ldi	r26, 0x20	; 32
     bc2:	aa 2e       	mov	r10, r26
     bc4:	a8 1a       	sub	r10, r24
     bc6:	66 96       	adiw	r28, 0x16	; 22
     bc8:	af ae       	std	Y+63, r10	; 0x3f
     bca:	66 97       	sbiw	r28, 0x16	; 22
     bcc:	d2 01       	movw	r26, r4
     bce:	c1 01       	movw	r24, r2
     bd0:	04 c0       	rjmp	.+8      	; 0xbda <__stack+0x2db>
     bd2:	b6 95       	lsr	r27
     bd4:	a7 95       	ror	r26
     bd6:	97 95       	ror	r25
     bd8:	87 95       	ror	r24
     bda:	aa 94       	dec	r10
     bdc:	d2 f7       	brpl	.-12     	; 0xbd2 <__stack+0x2d3>
     bde:	6c 01       	movw	r12, r24
     be0:	7d 01       	movw	r14, r26
     be2:	c2 2a       	or	r12, r18
     be4:	d3 2a       	or	r13, r19
     be6:	e4 2a       	or	r14, r20
     be8:	f5 2a       	or	r15, r21
     bea:	c9 a6       	std	Y+41, r12	; 0x29
     bec:	da a6       	std	Y+42, r13	; 0x2a
     bee:	eb a6       	std	Y+43, r14	; 0x2b
     bf0:	fc a6       	std	Y+44, r15	; 0x2c
     bf2:	82 01       	movw	r16, r4
     bf4:	71 01       	movw	r14, r2
     bf6:	67 96       	adiw	r28, 0x17	; 23
     bf8:	0f ac       	ldd	r0, Y+63	; 0x3f
     bfa:	67 97       	sbiw	r28, 0x17	; 23
     bfc:	04 c0       	rjmp	.+8      	; 0xc06 <__stack+0x307>
     bfe:	ee 0c       	add	r14, r14
     c00:	ff 1c       	adc	r15, r15
     c02:	00 1f       	adc	r16, r16
     c04:	11 1f       	adc	r17, r17
     c06:	0a 94       	dec	r0
     c08:	d2 f7       	brpl	.-12     	; 0xbfe <__stack+0x2ff>
     c0a:	ed a2       	std	Y+37, r14	; 0x25
     c0c:	fe a2       	std	Y+38, r15	; 0x26
     c0e:	0f a3       	std	Y+39, r16	; 0x27
     c10:	18 a7       	std	Y+40, r17	; 0x28
     c12:	64 01       	movw	r12, r8
     c14:	53 01       	movw	r10, r6
     c16:	66 96       	adiw	r28, 0x16	; 22
     c18:	0f ac       	ldd	r0, Y+63	; 0x3f
     c1a:	66 97       	sbiw	r28, 0x16	; 22
     c1c:	04 c0       	rjmp	.+8      	; 0xc26 <__stack+0x327>
     c1e:	d6 94       	lsr	r13
     c20:	c7 94       	ror	r12
     c22:	b7 94       	ror	r11
     c24:	a7 94       	ror	r10
     c26:	0a 94       	dec	r0
     c28:	d2 f7       	brpl	.-12     	; 0xc1e <__stack+0x31f>
     c2a:	a4 01       	movw	r20, r8
     c2c:	93 01       	movw	r18, r6
     c2e:	67 96       	adiw	r28, 0x17	; 23
     c30:	0f ac       	ldd	r0, Y+63	; 0x3f
     c32:	67 97       	sbiw	r28, 0x17	; 23
     c34:	04 c0       	rjmp	.+8      	; 0xc3e <__stack+0x33f>
     c36:	22 0f       	add	r18, r18
     c38:	33 1f       	adc	r19, r19
     c3a:	44 1f       	adc	r20, r20
     c3c:	55 1f       	adc	r21, r21
     c3e:	0a 94       	dec	r0
     c40:	d2 f7       	brpl	.-12     	; 0xc36 <__stack+0x337>
     c42:	6c 96       	adiw	r28, 0x1c	; 28
     c44:	8c ad       	ldd	r24, Y+60	; 0x3c
     c46:	9d ad       	ldd	r25, Y+61	; 0x3d
     c48:	ae ad       	ldd	r26, Y+62	; 0x3e
     c4a:	bf ad       	ldd	r27, Y+63	; 0x3f
     c4c:	6c 97       	sbiw	r28, 0x1c	; 28
     c4e:	66 96       	adiw	r28, 0x16	; 22
     c50:	0f ac       	ldd	r0, Y+63	; 0x3f
     c52:	66 97       	sbiw	r28, 0x16	; 22
     c54:	04 c0       	rjmp	.+8      	; 0xc5e <__stack+0x35f>
     c56:	b6 95       	lsr	r27
     c58:	a7 95       	ror	r26
     c5a:	97 95       	ror	r25
     c5c:	87 95       	ror	r24
     c5e:	0a 94       	dec	r0
     c60:	d2 f7       	brpl	.-12     	; 0xc56 <__stack+0x357>
     c62:	3c 01       	movw	r6, r24
     c64:	4d 01       	movw	r8, r26
     c66:	62 2a       	or	r6, r18
     c68:	73 2a       	or	r7, r19
     c6a:	84 2a       	or	r8, r20
     c6c:	95 2a       	or	r9, r21
     c6e:	69 a2       	std	Y+33, r6	; 0x21
     c70:	7a a2       	std	Y+34, r7	; 0x22
     c72:	8b a2       	std	Y+35, r8	; 0x23
     c74:	9c a2       	std	Y+36, r9	; 0x24
     c76:	6c 96       	adiw	r28, 0x1c	; 28
     c78:	ec ac       	ldd	r14, Y+60	; 0x3c
     c7a:	fd ac       	ldd	r15, Y+61	; 0x3d
     c7c:	0e ad       	ldd	r16, Y+62	; 0x3e
     c7e:	1f ad       	ldd	r17, Y+63	; 0x3f
     c80:	6c 97       	sbiw	r28, 0x1c	; 28
     c82:	67 96       	adiw	r28, 0x17	; 23
     c84:	0f ac       	ldd	r0, Y+63	; 0x3f
     c86:	67 97       	sbiw	r28, 0x17	; 23
     c88:	04 c0       	rjmp	.+8      	; 0xc92 <__stack+0x393>
     c8a:	ee 0c       	add	r14, r14
     c8c:	ff 1c       	adc	r15, r15
     c8e:	00 1f       	adc	r16, r16
     c90:	11 1f       	adc	r17, r17
     c92:	0a 94       	dec	r0
     c94:	d2 f7       	brpl	.-12     	; 0xc8a <__stack+0x38b>
     c96:	ed 8e       	std	Y+29, r14	; 0x1d
     c98:	fe 8e       	std	Y+30, r15	; 0x1e
     c9a:	0f 8f       	std	Y+31, r16	; 0x1f
     c9c:	18 a3       	std	Y+32, r17	; 0x20
     c9e:	49 a5       	ldd	r20, Y+41	; 0x29
     ca0:	5a a5       	ldd	r21, Y+42	; 0x2a
     ca2:	6b a5       	ldd	r22, Y+43	; 0x2b
     ca4:	7c a5       	ldd	r23, Y+44	; 0x2c
     ca6:	3b 01       	movw	r6, r22
     ca8:	88 24       	eor	r8, r8
     caa:	99 24       	eor	r9, r9
     cac:	60 70       	andi	r22, 0x00	; 0
     cae:	70 70       	andi	r23, 0x00	; 0
     cb0:	2d 96       	adiw	r28, 0x0d	; 13
     cb2:	4c af       	std	Y+60, r20	; 0x3c
     cb4:	5d af       	std	Y+61, r21	; 0x3d
     cb6:	6e af       	std	Y+62, r22	; 0x3e
     cb8:	7f af       	std	Y+63, r23	; 0x3f
     cba:	2d 97       	sbiw	r28, 0x0d	; 13
     cbc:	c6 01       	movw	r24, r12
     cbe:	b5 01       	movw	r22, r10
     cc0:	a4 01       	movw	r20, r8
     cc2:	93 01       	movw	r18, r6
     cc4:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     cc8:	7b 01       	movw	r14, r22
     cca:	8c 01       	movw	r16, r24
     ccc:	c6 01       	movw	r24, r12
     cce:	b5 01       	movw	r22, r10
     cd0:	a4 01       	movw	r20, r8
     cd2:	93 01       	movw	r18, r6
     cd4:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     cd8:	c9 01       	movw	r24, r18
     cda:	da 01       	movw	r26, r20
     cdc:	1c 01       	movw	r2, r24
     cde:	2d 01       	movw	r4, r26
     ce0:	c2 01       	movw	r24, r4
     ce2:	b1 01       	movw	r22, r2
     ce4:	2d 96       	adiw	r28, 0x0d	; 13
     ce6:	2c ad       	ldd	r18, Y+60	; 0x3c
     ce8:	3d ad       	ldd	r19, Y+61	; 0x3d
     cea:	4e ad       	ldd	r20, Y+62	; 0x3e
     cec:	5f ad       	ldd	r21, Y+63	; 0x3f
     cee:	2d 97       	sbiw	r28, 0x0d	; 13
     cf0:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     cf4:	9b 01       	movw	r18, r22
     cf6:	ac 01       	movw	r20, r24
     cf8:	87 01       	movw	r16, r14
     cfa:	ff 24       	eor	r15, r15
     cfc:	ee 24       	eor	r14, r14
     cfe:	a9 a0       	ldd	r10, Y+33	; 0x21
     d00:	ba a0       	ldd	r11, Y+34	; 0x22
     d02:	cb a0       	ldd	r12, Y+35	; 0x23
     d04:	dc a0       	ldd	r13, Y+36	; 0x24
     d06:	c6 01       	movw	r24, r12
     d08:	aa 27       	eor	r26, r26
     d0a:	bb 27       	eor	r27, r27
     d0c:	57 01       	movw	r10, r14
     d0e:	68 01       	movw	r12, r16
     d10:	a8 2a       	or	r10, r24
     d12:	b9 2a       	or	r11, r25
     d14:	ca 2a       	or	r12, r26
     d16:	db 2a       	or	r13, r27
     d18:	a2 16       	cp	r10, r18
     d1a:	b3 06       	cpc	r11, r19
     d1c:	c4 06       	cpc	r12, r20
     d1e:	d5 06       	cpc	r13, r21
     d20:	00 f5       	brcc	.+64     	; 0xd62 <__stack+0x463>
     d22:	08 94       	sec
     d24:	21 08       	sbc	r2, r1
     d26:	31 08       	sbc	r3, r1
     d28:	41 08       	sbc	r4, r1
     d2a:	51 08       	sbc	r5, r1
     d2c:	e9 a4       	ldd	r14, Y+41	; 0x29
     d2e:	fa a4       	ldd	r15, Y+42	; 0x2a
     d30:	0b a5       	ldd	r16, Y+43	; 0x2b
     d32:	1c a5       	ldd	r17, Y+44	; 0x2c
     d34:	ae 0c       	add	r10, r14
     d36:	bf 1c       	adc	r11, r15
     d38:	c0 1e       	adc	r12, r16
     d3a:	d1 1e       	adc	r13, r17
     d3c:	ae 14       	cp	r10, r14
     d3e:	bf 04       	cpc	r11, r15
     d40:	c0 06       	cpc	r12, r16
     d42:	d1 06       	cpc	r13, r17
     d44:	70 f0       	brcs	.+28     	; 0xd62 <__stack+0x463>
     d46:	a2 16       	cp	r10, r18
     d48:	b3 06       	cpc	r11, r19
     d4a:	c4 06       	cpc	r12, r20
     d4c:	d5 06       	cpc	r13, r21
     d4e:	48 f4       	brcc	.+18     	; 0xd62 <__stack+0x463>
     d50:	08 94       	sec
     d52:	21 08       	sbc	r2, r1
     d54:	31 08       	sbc	r3, r1
     d56:	41 08       	sbc	r4, r1
     d58:	51 08       	sbc	r5, r1
     d5a:	ae 0c       	add	r10, r14
     d5c:	bf 1c       	adc	r11, r15
     d5e:	c0 1e       	adc	r12, r16
     d60:	d1 1e       	adc	r13, r17
     d62:	a2 1a       	sub	r10, r18
     d64:	b3 0a       	sbc	r11, r19
     d66:	c4 0a       	sbc	r12, r20
     d68:	d5 0a       	sbc	r13, r21
     d6a:	c6 01       	movw	r24, r12
     d6c:	b5 01       	movw	r22, r10
     d6e:	a4 01       	movw	r20, r8
     d70:	93 01       	movw	r18, r6
     d72:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     d76:	7b 01       	movw	r14, r22
     d78:	8c 01       	movw	r16, r24
     d7a:	c6 01       	movw	r24, r12
     d7c:	b5 01       	movw	r22, r10
     d7e:	a4 01       	movw	r20, r8
     d80:	93 01       	movw	r18, r6
     d82:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__udivmodsi4>
     d86:	c9 01       	movw	r24, r18
     d88:	da 01       	movw	r26, r20
     d8a:	3c 01       	movw	r6, r24
     d8c:	4d 01       	movw	r8, r26
     d8e:	c4 01       	movw	r24, r8
     d90:	b3 01       	movw	r22, r6
     d92:	2d 96       	adiw	r28, 0x0d	; 13
     d94:	2c ad       	ldd	r18, Y+60	; 0x3c
     d96:	3d ad       	ldd	r19, Y+61	; 0x3d
     d98:	4e ad       	ldd	r20, Y+62	; 0x3e
     d9a:	5f ad       	ldd	r21, Y+63	; 0x3f
     d9c:	2d 97       	sbiw	r28, 0x0d	; 13
     d9e:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     da2:	9b 01       	movw	r18, r22
     da4:	ac 01       	movw	r20, r24
     da6:	87 01       	movw	r16, r14
     da8:	ff 24       	eor	r15, r15
     daa:	ee 24       	eor	r14, r14
     dac:	89 a1       	ldd	r24, Y+33	; 0x21
     dae:	9a a1       	ldd	r25, Y+34	; 0x22
     db0:	ab a1       	ldd	r26, Y+35	; 0x23
     db2:	bc a1       	ldd	r27, Y+36	; 0x24
     db4:	a0 70       	andi	r26, 0x00	; 0
     db6:	b0 70       	andi	r27, 0x00	; 0
     db8:	57 01       	movw	r10, r14
     dba:	68 01       	movw	r12, r16
     dbc:	a8 2a       	or	r10, r24
     dbe:	b9 2a       	or	r11, r25
     dc0:	ca 2a       	or	r12, r26
     dc2:	db 2a       	or	r13, r27
     dc4:	a2 16       	cp	r10, r18
     dc6:	b3 06       	cpc	r11, r19
     dc8:	c4 06       	cpc	r12, r20
     dca:	d5 06       	cpc	r13, r21
     dcc:	00 f5       	brcc	.+64     	; 0xe0e <__stack+0x50f>
     dce:	08 94       	sec
     dd0:	61 08       	sbc	r6, r1
     dd2:	71 08       	sbc	r7, r1
     dd4:	81 08       	sbc	r8, r1
     dd6:	91 08       	sbc	r9, r1
     dd8:	69 a5       	ldd	r22, Y+41	; 0x29
     dda:	7a a5       	ldd	r23, Y+42	; 0x2a
     ddc:	8b a5       	ldd	r24, Y+43	; 0x2b
     dde:	9c a5       	ldd	r25, Y+44	; 0x2c
     de0:	a6 0e       	add	r10, r22
     de2:	b7 1e       	adc	r11, r23
     de4:	c8 1e       	adc	r12, r24
     de6:	d9 1e       	adc	r13, r25
     de8:	a6 16       	cp	r10, r22
     dea:	b7 06       	cpc	r11, r23
     dec:	c8 06       	cpc	r12, r24
     dee:	d9 06       	cpc	r13, r25
     df0:	70 f0       	brcs	.+28     	; 0xe0e <__stack+0x50f>
     df2:	a2 16       	cp	r10, r18
     df4:	b3 06       	cpc	r11, r19
     df6:	c4 06       	cpc	r12, r20
     df8:	d5 06       	cpc	r13, r21
     dfa:	48 f4       	brcc	.+18     	; 0xe0e <__stack+0x50f>
     dfc:	08 94       	sec
     dfe:	61 08       	sbc	r6, r1
     e00:	71 08       	sbc	r7, r1
     e02:	81 08       	sbc	r8, r1
     e04:	91 08       	sbc	r9, r1
     e06:	a6 0e       	add	r10, r22
     e08:	b7 1e       	adc	r11, r23
     e0a:	c8 1e       	adc	r12, r24
     e0c:	d9 1e       	adc	r13, r25
     e0e:	d6 01       	movw	r26, r12
     e10:	c5 01       	movw	r24, r10
     e12:	82 1b       	sub	r24, r18
     e14:	93 0b       	sbc	r25, r19
     e16:	a4 0b       	sbc	r26, r20
     e18:	b5 0b       	sbc	r27, r21
     e1a:	89 8f       	std	Y+25, r24	; 0x19
     e1c:	9a 8f       	std	Y+26, r25	; 0x1a
     e1e:	ab 8f       	std	Y+27, r26	; 0x1b
     e20:	bc 8f       	std	Y+28, r27	; 0x1c
     e22:	d1 01       	movw	r26, r2
     e24:	99 27       	eor	r25, r25
     e26:	88 27       	eor	r24, r24
     e28:	84 01       	movw	r16, r8
     e2a:	73 01       	movw	r14, r6
     e2c:	e8 2a       	or	r14, r24
     e2e:	f9 2a       	or	r15, r25
     e30:	0a 2b       	or	r16, r26
     e32:	1b 2b       	or	r17, r27
     e34:	4f ef       	ldi	r20, 0xFF	; 255
     e36:	a4 2e       	mov	r10, r20
     e38:	4f ef       	ldi	r20, 0xFF	; 255
     e3a:	b4 2e       	mov	r11, r20
     e3c:	c1 2c       	mov	r12, r1
     e3e:	d1 2c       	mov	r13, r1
     e40:	ae 20       	and	r10, r14
     e42:	bf 20       	and	r11, r15
     e44:	c0 22       	and	r12, r16
     e46:	d1 22       	and	r13, r17
     e48:	78 01       	movw	r14, r16
     e4a:	00 27       	eor	r16, r16
     e4c:	11 27       	eor	r17, r17
     e4e:	6d a0       	ldd	r6, Y+37	; 0x25
     e50:	7e a0       	ldd	r7, Y+38	; 0x26
     e52:	8f a0       	ldd	r8, Y+39	; 0x27
     e54:	98 a4       	ldd	r9, Y+40	; 0x28
     e56:	4f ef       	ldi	r20, 0xFF	; 255
     e58:	5f ef       	ldi	r21, 0xFF	; 255
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	64 22       	and	r6, r20
     e60:	75 22       	and	r7, r21
     e62:	86 22       	and	r8, r22
     e64:	97 22       	and	r9, r23
     e66:	8d a1       	ldd	r24, Y+37	; 0x25
     e68:	9e a1       	ldd	r25, Y+38	; 0x26
     e6a:	af a1       	ldd	r26, Y+39	; 0x27
     e6c:	b8 a5       	ldd	r27, Y+40	; 0x28
     e6e:	bd 01       	movw	r22, r26
     e70:	88 27       	eor	r24, r24
     e72:	99 27       	eor	r25, r25
     e74:	65 96       	adiw	r28, 0x15	; 21
     e76:	6c af       	std	Y+60, r22	; 0x3c
     e78:	7d af       	std	Y+61, r23	; 0x3d
     e7a:	8e af       	std	Y+62, r24	; 0x3e
     e7c:	9f af       	std	Y+63, r25	; 0x3f
     e7e:	65 97       	sbiw	r28, 0x15	; 21
     e80:	c6 01       	movw	r24, r12
     e82:	b5 01       	movw	r22, r10
     e84:	a4 01       	movw	r20, r8
     e86:	93 01       	movw	r18, r6
     e88:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     e8c:	61 96       	adiw	r28, 0x11	; 17
     e8e:	6c af       	std	Y+60, r22	; 0x3c
     e90:	7d af       	std	Y+61, r23	; 0x3d
     e92:	8e af       	std	Y+62, r24	; 0x3e
     e94:	9f af       	std	Y+63, r25	; 0x3f
     e96:	61 97       	sbiw	r28, 0x11	; 17
     e98:	c6 01       	movw	r24, r12
     e9a:	b5 01       	movw	r22, r10
     e9c:	65 96       	adiw	r28, 0x15	; 21
     e9e:	2c ad       	ldd	r18, Y+60	; 0x3c
     ea0:	3d ad       	ldd	r19, Y+61	; 0x3d
     ea2:	4e ad       	ldd	r20, Y+62	; 0x3e
     ea4:	5f ad       	ldd	r21, Y+63	; 0x3f
     ea6:	65 97       	sbiw	r28, 0x15	; 21
     ea8:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     eac:	1b 01       	movw	r2, r22
     eae:	2c 01       	movw	r4, r24
     eb0:	c8 01       	movw	r24, r16
     eb2:	b7 01       	movw	r22, r14
     eb4:	a4 01       	movw	r20, r8
     eb6:	93 01       	movw	r18, r6
     eb8:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     ebc:	5b 01       	movw	r10, r22
     ebe:	6c 01       	movw	r12, r24
     ec0:	c8 01       	movw	r24, r16
     ec2:	b7 01       	movw	r22, r14
     ec4:	65 96       	adiw	r28, 0x15	; 21
     ec6:	2c ad       	ldd	r18, Y+60	; 0x3c
     ec8:	3d ad       	ldd	r19, Y+61	; 0x3d
     eca:	4e ad       	ldd	r20, Y+62	; 0x3e
     ecc:	5f ad       	ldd	r21, Y+63	; 0x3f
     ece:	65 97       	sbiw	r28, 0x15	; 21
     ed0:	0e 94 45 08 	call	0x108a	; 0x108a <__mulsi3>
     ed4:	7b 01       	movw	r14, r22
     ed6:	8c 01       	movw	r16, r24
     ed8:	a6 01       	movw	r20, r12
     eda:	95 01       	movw	r18, r10
     edc:	22 0d       	add	r18, r2
     ede:	33 1d       	adc	r19, r3
     ee0:	44 1d       	adc	r20, r4
     ee2:	55 1d       	adc	r21, r5
     ee4:	61 96       	adiw	r28, 0x11	; 17
     ee6:	6c ac       	ldd	r6, Y+60	; 0x3c
     ee8:	7d ac       	ldd	r7, Y+61	; 0x3d
     eea:	8e ac       	ldd	r8, Y+62	; 0x3e
     eec:	9f ac       	ldd	r9, Y+63	; 0x3f
     eee:	61 97       	sbiw	r28, 0x11	; 17
     ef0:	c4 01       	movw	r24, r8
     ef2:	aa 27       	eor	r26, r26
     ef4:	bb 27       	eor	r27, r27
     ef6:	28 0f       	add	r18, r24
     ef8:	39 1f       	adc	r19, r25
     efa:	4a 1f       	adc	r20, r26
     efc:	5b 1f       	adc	r21, r27
     efe:	2a 15       	cp	r18, r10
     f00:	3b 05       	cpc	r19, r11
     f02:	4c 05       	cpc	r20, r12
     f04:	5d 05       	cpc	r21, r13
     f06:	48 f4       	brcc	.+18     	; 0xf1a <__stack+0x61b>
     f08:	81 2c       	mov	r8, r1
     f0a:	91 2c       	mov	r9, r1
     f0c:	e1 e0       	ldi	r30, 0x01	; 1
     f0e:	ae 2e       	mov	r10, r30
     f10:	b1 2c       	mov	r11, r1
     f12:	e8 0c       	add	r14, r8
     f14:	f9 1c       	adc	r15, r9
     f16:	0a 1d       	adc	r16, r10
     f18:	1b 1d       	adc	r17, r11
     f1a:	ca 01       	movw	r24, r20
     f1c:	aa 27       	eor	r26, r26
     f1e:	bb 27       	eor	r27, r27
     f20:	57 01       	movw	r10, r14
     f22:	68 01       	movw	r12, r16
     f24:	a8 0e       	add	r10, r24
     f26:	b9 1e       	adc	r11, r25
     f28:	ca 1e       	adc	r12, r26
     f2a:	db 1e       	adc	r13, r27
     f2c:	a9 01       	movw	r20, r18
     f2e:	33 27       	eor	r19, r19
     f30:	22 27       	eor	r18, r18
     f32:	61 96       	adiw	r28, 0x11	; 17
     f34:	8c ad       	ldd	r24, Y+60	; 0x3c
     f36:	9d ad       	ldd	r25, Y+61	; 0x3d
     f38:	ae ad       	ldd	r26, Y+62	; 0x3e
     f3a:	bf ad       	ldd	r27, Y+63	; 0x3f
     f3c:	61 97       	sbiw	r28, 0x11	; 17
     f3e:	a0 70       	andi	r26, 0x00	; 0
     f40:	b0 70       	andi	r27, 0x00	; 0
     f42:	28 0f       	add	r18, r24
     f44:	39 1f       	adc	r19, r25
     f46:	4a 1f       	adc	r20, r26
     f48:	5b 1f       	adc	r21, r27
     f4a:	e9 8c       	ldd	r14, Y+25	; 0x19
     f4c:	fa 8c       	ldd	r15, Y+26	; 0x1a
     f4e:	0b 8d       	ldd	r16, Y+27	; 0x1b
     f50:	1c 8d       	ldd	r17, Y+28	; 0x1c
     f52:	ea 14       	cp	r14, r10
     f54:	fb 04       	cpc	r15, r11
     f56:	0c 05       	cpc	r16, r12
     f58:	1d 05       	cpc	r17, r13
     f5a:	70 f0       	brcs	.+28     	; 0xf78 <__stack+0x679>
     f5c:	ae 14       	cp	r10, r14
     f5e:	bf 04       	cpc	r11, r15
     f60:	c0 06       	cpc	r12, r16
     f62:	d1 06       	cpc	r13, r17
     f64:	69 f5       	brne	.+90     	; 0xfc0 <__stack+0x6c1>
     f66:	6d 8d       	ldd	r22, Y+29	; 0x1d
     f68:	7e 8d       	ldd	r23, Y+30	; 0x1e
     f6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f6c:	98 a1       	ldd	r25, Y+32	; 0x20
     f6e:	62 17       	cp	r22, r18
     f70:	73 07       	cpc	r23, r19
     f72:	84 07       	cpc	r24, r20
     f74:	95 07       	cpc	r25, r21
     f76:	20 f5       	brcc	.+72     	; 0xfc0 <__stack+0x6c1>
     f78:	da 01       	movw	r26, r20
     f7a:	c9 01       	movw	r24, r18
     f7c:	6d a0       	ldd	r6, Y+37	; 0x25
     f7e:	7e a0       	ldd	r7, Y+38	; 0x26
     f80:	8f a0       	ldd	r8, Y+39	; 0x27
     f82:	98 a4       	ldd	r9, Y+40	; 0x28
     f84:	86 19       	sub	r24, r6
     f86:	97 09       	sbc	r25, r7
     f88:	a8 09       	sbc	r26, r8
     f8a:	b9 09       	sbc	r27, r9
     f8c:	e9 a4       	ldd	r14, Y+41	; 0x29
     f8e:	fa a4       	ldd	r15, Y+42	; 0x2a
     f90:	0b a5       	ldd	r16, Y+43	; 0x2b
     f92:	1c a5       	ldd	r17, Y+44	; 0x2c
     f94:	ae 18       	sub	r10, r14
     f96:	bf 08       	sbc	r11, r15
     f98:	c0 0a       	sbc	r12, r16
     f9a:	d1 0a       	sbc	r13, r17
     f9c:	ee 24       	eor	r14, r14
     f9e:	ff 24       	eor	r15, r15
     fa0:	87 01       	movw	r16, r14
     fa2:	28 17       	cp	r18, r24
     fa4:	39 07       	cpc	r19, r25
     fa6:	4a 07       	cpc	r20, r26
     fa8:	5b 07       	cpc	r21, r27
     faa:	28 f4       	brcc	.+10     	; 0xfb6 <__stack+0x6b7>
     fac:	21 e0       	ldi	r18, 0x01	; 1
     fae:	e2 2e       	mov	r14, r18
     fb0:	f1 2c       	mov	r15, r1
     fb2:	01 2d       	mov	r16, r1
     fb4:	11 2d       	mov	r17, r1
     fb6:	ae 18       	sub	r10, r14
     fb8:	bf 08       	sbc	r11, r15
     fba:	c0 0a       	sbc	r12, r16
     fbc:	d1 0a       	sbc	r13, r17
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <__stack+0x6c5>
     fc0:	da 01       	movw	r26, r20
     fc2:	c9 01       	movw	r24, r18
     fc4:	6d 8c       	ldd	r6, Y+29	; 0x1d
     fc6:	7e 8c       	ldd	r7, Y+30	; 0x1e
     fc8:	8f 8c       	ldd	r8, Y+31	; 0x1f
     fca:	98 a0       	ldd	r9, Y+32	; 0x20
     fcc:	68 1a       	sub	r6, r24
     fce:	79 0a       	sbc	r7, r25
     fd0:	8a 0a       	sbc	r8, r26
     fd2:	9b 0a       	sbc	r9, r27
     fd4:	49 8d       	ldd	r20, Y+25	; 0x19
     fd6:	5a 8d       	ldd	r21, Y+26	; 0x1a
     fd8:	6b 8d       	ldd	r22, Y+27	; 0x1b
     fda:	7c 8d       	ldd	r23, Y+28	; 0x1c
     fdc:	4a 19       	sub	r20, r10
     fde:	5b 09       	sbc	r21, r11
     fe0:	6c 09       	sbc	r22, r12
     fe2:	7d 09       	sbc	r23, r13
     fe4:	5a 01       	movw	r10, r20
     fe6:	6b 01       	movw	r12, r22
     fe8:	22 24       	eor	r2, r2
     fea:	33 24       	eor	r3, r3
     fec:	21 01       	movw	r4, r2
     fee:	6d 8d       	ldd	r22, Y+29	; 0x1d
     ff0:	7e 8d       	ldd	r23, Y+30	; 0x1e
     ff2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ff4:	98 a1       	ldd	r25, Y+32	; 0x20
     ff6:	66 15       	cp	r22, r6
     ff8:	77 05       	cpc	r23, r7
     ffa:	88 05       	cpc	r24, r8
     ffc:	99 05       	cpc	r25, r9
     ffe:	28 f4       	brcc	.+10     	; 0x100a <__stack+0x70b>
    1000:	81 e0       	ldi	r24, 0x01	; 1
    1002:	28 2e       	mov	r2, r24
    1004:	31 2c       	mov	r3, r1
    1006:	41 2c       	mov	r4, r1
    1008:	51 2c       	mov	r5, r1
    100a:	86 01       	movw	r16, r12
    100c:	75 01       	movw	r14, r10
    100e:	e2 18       	sub	r14, r2
    1010:	f3 08       	sbc	r15, r3
    1012:	04 09       	sbc	r16, r4
    1014:	15 09       	sbc	r17, r5
    1016:	a8 01       	movw	r20, r16
    1018:	97 01       	movw	r18, r14
    101a:	66 96       	adiw	r28, 0x16	; 22
    101c:	0f ac       	ldd	r0, Y+63	; 0x3f
    101e:	66 97       	sbiw	r28, 0x16	; 22
    1020:	04 c0       	rjmp	.+8      	; 0x102a <__stack+0x72b>
    1022:	22 0f       	add	r18, r18
    1024:	33 1f       	adc	r19, r19
    1026:	44 1f       	adc	r20, r20
    1028:	55 1f       	adc	r21, r21
    102a:	0a 94       	dec	r0
    102c:	d2 f7       	brpl	.-12     	; 0x1022 <__stack+0x723>
    102e:	d4 01       	movw	r26, r8
    1030:	c3 01       	movw	r24, r6
    1032:	67 96       	adiw	r28, 0x17	; 23
    1034:	0f ac       	ldd	r0, Y+63	; 0x3f
    1036:	67 97       	sbiw	r28, 0x17	; 23
    1038:	04 c0       	rjmp	.+8      	; 0x1042 <__stack+0x743>
    103a:	b6 95       	lsr	r27
    103c:	a7 95       	ror	r26
    103e:	97 95       	ror	r25
    1040:	87 95       	ror	r24
    1042:	0a 94       	dec	r0
    1044:	d2 f7       	brpl	.-12     	; 0x103a <__stack+0x73b>
    1046:	28 2b       	or	r18, r24
    1048:	39 2b       	or	r19, r25
    104a:	4a 2b       	or	r20, r26
    104c:	5b 2b       	or	r21, r27
    104e:	29 8b       	std	Y+17, r18	; 0x11
    1050:	3a 8b       	std	Y+18, r19	; 0x12
    1052:	4b 8b       	std	Y+19, r20	; 0x13
    1054:	5c 8b       	std	Y+20, r21	; 0x14
    1056:	67 96       	adiw	r28, 0x17	; 23
    1058:	0f ac       	ldd	r0, Y+63	; 0x3f
    105a:	67 97       	sbiw	r28, 0x17	; 23
    105c:	04 c0       	rjmp	.+8      	; 0x1066 <__stack+0x767>
    105e:	16 95       	lsr	r17
    1060:	07 95       	ror	r16
    1062:	f7 94       	ror	r15
    1064:	e7 94       	ror	r14
    1066:	0a 94       	dec	r0
    1068:	d2 f7       	brpl	.-12     	; 0x105e <__stack+0x75f>
    106a:	ed 8a       	std	Y+21, r14	; 0x15
    106c:	fe 8a       	std	Y+22, r15	; 0x16
    106e:	0f 8b       	std	Y+23, r16	; 0x17
    1070:	18 8f       	std	Y+24, r17	; 0x18
    1072:	3a 89       	ldd	r19, Y+18	; 0x12
    1074:	4b 89       	ldd	r20, Y+19	; 0x13
    1076:	5c 89       	ldd	r21, Y+20	; 0x14
    1078:	6e 2d       	mov	r22, r14
    107a:	7e 89       	ldd	r23, Y+22	; 0x16
    107c:	8f 89       	ldd	r24, Y+23	; 0x17
    107e:	98 8d       	ldd	r25, Y+24	; 0x18
    1080:	c5 5a       	subi	r28, 0xA5	; 165
    1082:	df 4f       	sbci	r29, 0xFF	; 255
    1084:	e2 e1       	ldi	r30, 0x12	; 18
    1086:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__epilogue_restores__>

0000108a <__mulsi3>:
    108a:	62 9f       	mul	r22, r18
    108c:	d0 01       	movw	r26, r0
    108e:	73 9f       	mul	r23, r19
    1090:	f0 01       	movw	r30, r0
    1092:	82 9f       	mul	r24, r18
    1094:	e0 0d       	add	r30, r0
    1096:	f1 1d       	adc	r31, r1
    1098:	64 9f       	mul	r22, r20
    109a:	e0 0d       	add	r30, r0
    109c:	f1 1d       	adc	r31, r1
    109e:	92 9f       	mul	r25, r18
    10a0:	f0 0d       	add	r31, r0
    10a2:	83 9f       	mul	r24, r19
    10a4:	f0 0d       	add	r31, r0
    10a6:	74 9f       	mul	r23, r20
    10a8:	f0 0d       	add	r31, r0
    10aa:	65 9f       	mul	r22, r21
    10ac:	f0 0d       	add	r31, r0
    10ae:	99 27       	eor	r25, r25
    10b0:	72 9f       	mul	r23, r18
    10b2:	b0 0d       	add	r27, r0
    10b4:	e1 1d       	adc	r30, r1
    10b6:	f9 1f       	adc	r31, r25
    10b8:	63 9f       	mul	r22, r19
    10ba:	b0 0d       	add	r27, r0
    10bc:	e1 1d       	adc	r30, r1
    10be:	f9 1f       	adc	r31, r25
    10c0:	bd 01       	movw	r22, r26
    10c2:	cf 01       	movw	r24, r30
    10c4:	11 24       	eor	r1, r1
    10c6:	08 95       	ret

000010c8 <__udivmodsi4>:
    10c8:	a1 e2       	ldi	r26, 0x21	; 33
    10ca:	1a 2e       	mov	r1, r26
    10cc:	aa 1b       	sub	r26, r26
    10ce:	bb 1b       	sub	r27, r27
    10d0:	fd 01       	movw	r30, r26
    10d2:	0d c0       	rjmp	.+26     	; 0x10ee <__udivmodsi4_ep>

000010d4 <__udivmodsi4_loop>:
    10d4:	aa 1f       	adc	r26, r26
    10d6:	bb 1f       	adc	r27, r27
    10d8:	ee 1f       	adc	r30, r30
    10da:	ff 1f       	adc	r31, r31
    10dc:	a2 17       	cp	r26, r18
    10de:	b3 07       	cpc	r27, r19
    10e0:	e4 07       	cpc	r30, r20
    10e2:	f5 07       	cpc	r31, r21
    10e4:	20 f0       	brcs	.+8      	; 0x10ee <__udivmodsi4_ep>
    10e6:	a2 1b       	sub	r26, r18
    10e8:	b3 0b       	sbc	r27, r19
    10ea:	e4 0b       	sbc	r30, r20
    10ec:	f5 0b       	sbc	r31, r21

000010ee <__udivmodsi4_ep>:
    10ee:	66 1f       	adc	r22, r22
    10f0:	77 1f       	adc	r23, r23
    10f2:	88 1f       	adc	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	1a 94       	dec	r1
    10f8:	69 f7       	brne	.-38     	; 0x10d4 <__udivmodsi4_loop>
    10fa:	60 95       	com	r22
    10fc:	70 95       	com	r23
    10fe:	80 95       	com	r24
    1100:	90 95       	com	r25
    1102:	9b 01       	movw	r18, r22
    1104:	ac 01       	movw	r20, r24
    1106:	bd 01       	movw	r22, r26
    1108:	cf 01       	movw	r24, r30
    110a:	08 95       	ret

0000110c <__prologue_saves__>:
    110c:	2f 92       	push	r2
    110e:	3f 92       	push	r3
    1110:	4f 92       	push	r4
    1112:	5f 92       	push	r5
    1114:	6f 92       	push	r6
    1116:	7f 92       	push	r7
    1118:	8f 92       	push	r8
    111a:	9f 92       	push	r9
    111c:	af 92       	push	r10
    111e:	bf 92       	push	r11
    1120:	cf 92       	push	r12
    1122:	df 92       	push	r13
    1124:	ef 92       	push	r14
    1126:	ff 92       	push	r15
    1128:	0f 93       	push	r16
    112a:	1f 93       	push	r17
    112c:	cf 93       	push	r28
    112e:	df 93       	push	r29
    1130:	cd b7       	in	r28, 0x3d	; 61
    1132:	de b7       	in	r29, 0x3e	; 62
    1134:	ca 1b       	sub	r28, r26
    1136:	db 0b       	sbc	r29, r27
    1138:	0f b6       	in	r0, 0x3f	; 63
    113a:	f8 94       	cli
    113c:	de bf       	out	0x3e, r29	; 62
    113e:	0f be       	out	0x3f, r0	; 63
    1140:	cd bf       	out	0x3d, r28	; 61
    1142:	09 94       	ijmp

00001144 <__epilogue_restores__>:
    1144:	2a 88       	ldd	r2, Y+18	; 0x12
    1146:	39 88       	ldd	r3, Y+17	; 0x11
    1148:	48 88       	ldd	r4, Y+16	; 0x10
    114a:	5f 84       	ldd	r5, Y+15	; 0x0f
    114c:	6e 84       	ldd	r6, Y+14	; 0x0e
    114e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1150:	8c 84       	ldd	r8, Y+12	; 0x0c
    1152:	9b 84       	ldd	r9, Y+11	; 0x0b
    1154:	aa 84       	ldd	r10, Y+10	; 0x0a
    1156:	b9 84       	ldd	r11, Y+9	; 0x09
    1158:	c8 84       	ldd	r12, Y+8	; 0x08
    115a:	df 80       	ldd	r13, Y+7	; 0x07
    115c:	ee 80       	ldd	r14, Y+6	; 0x06
    115e:	fd 80       	ldd	r15, Y+5	; 0x05
    1160:	0c 81       	ldd	r16, Y+4	; 0x04
    1162:	1b 81       	ldd	r17, Y+3	; 0x03
    1164:	aa 81       	ldd	r26, Y+2	; 0x02
    1166:	b9 81       	ldd	r27, Y+1	; 0x01
    1168:	ce 0f       	add	r28, r30
    116a:	d1 1d       	adc	r29, r1
    116c:	0f b6       	in	r0, 0x3f	; 63
    116e:	f8 94       	cli
    1170:	de bf       	out	0x3e, r29	; 62
    1172:	0f be       	out	0x3f, r0	; 63
    1174:	cd bf       	out	0x3d, r28	; 61
    1176:	ed 01       	movw	r28, r26
    1178:	08 95       	ret

0000117a <_exit>:
    117a:	f8 94       	cli

0000117c <__stop_program>:
    117c:	ff cf       	rjmp	.-2      	; 0x117c <__stop_program>
